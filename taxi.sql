--
-- Script was generated by Devart dbForge Studio for MySQL, Version 7.0.52.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 16/08/2016 19:52:03
-- Server version: 5.6.17
-- Client version: 4.1
--


--
-- Definition for database taxi
--
DROP DATABASE IF EXISTS taxi;
CREATE DATABASE IF NOT EXISTS taxi
	CHARACTER SET utf8
	COLLATE utf8_general_ci;

--
-- Disable foreign keys
--
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

--
-- Set SQL mode
--
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

--
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

--
-- Set default database
--
USE taxi;

--
-- Definition for table adm_country
--
CREATE TABLE IF NOT EXISTS adm_country (
  cou_cha_country CHAR(2) NOT NULL COMMENT 'Code',
  cou_var_name VARCHAR(45) DEFAULT NULL COMMENT 'Name',
  PRIMARY KEY (cou_cha_country),
  UNIQUE INDEX UK_adm_country_cou_cha_country (cou_cha_country),
  UNIQUE INDEX UK_adm_country_cou_var_name (cou_var_name)
)
ENGINE = INNODB
AVG_ROW_LENGTH = 65
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table adm_dependence
--
CREATE TABLE IF NOT EXISTS adm_dependence (
  dep_var_table VARCHAR(100) NOT NULL DEFAULT '',
  dep_var_dependencetable VARCHAR(100) NOT NULL DEFAULT '',
  dep_var_dependencename VARCHAR(100) NOT NULL DEFAULT '',
  dep_var_dependencekey VARCHAR(255) DEFAULT NULL,
  dep_var_relationship VARCHAR(255) NOT NULL DEFAULT '',
  dep_dti_inclusao TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  INDEX IDX_adm_dependence_rel_var_dependencekey (dep_var_dependencekey),
  INDEX IDX_adm_dependence_rel_var_dependencename (dep_var_dependencename),
  INDEX IDX_adm_dependence_rel_var_dependencetable (dep_var_dependencetable),
  INDEX IDX_adm_dependence_rel_var_table (dep_var_table)
)
ENGINE = INNODB
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'Dependence|Dependências|Relações de dependência entre tables';

--
-- Definition for table adm_menu
--
CREATE TABLE IF NOT EXISTS adm_menu (
  men_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  men_var_name VARCHAR(100) NOT NULL COMMENT 'Name',
  men_cha_status CHAR(1) NOT NULL DEFAULT 'A' COMMENT 'Status|A:Active;I:Inactive',
  men_var_url VARCHAR(200) DEFAULT NULL COMMENT 'URL',
  men_var_icon VARCHAR(50) DEFAULT NULL COMMENT 'CSS class for the icon',
  men_var_class VARCHAR(50) DEFAULT NULL COMMENT 'CSS class',
  men_int_order INT(11) DEFAULT NULL COMMENT 'Display order',
  men_int_level INT(11) UNSIGNED DEFAULT NULL COMMENT 'Hierarchy level',
  men_var_key VARCHAR(50) DEFAULT NULL COMMENT 'Multilevel code',
  men_txt_path TEXT DEFAULT NULL COMMENT 'Path',
  men_cha_consolidator CHAR(1) DEFAULT NULL COMMENT 'Consolidator|Y:Yes;N:No',
  men_int_idfather INT(11) UNSIGNED DEFAULT NULL COMMENT 'Father Id',
  men_cha_type CHAR(1) DEFAULT NULL COMMENT 'Type|P:Platform;O:Obligatory;N:Normal',
  men_dti_add TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Add',
  PRIMARY KEY (men_int_id),
  INDEX e_menu_men_cha_status (men_cha_status),
  INDEX fk_menu_autorelaciona (men_int_idfather),
  INDEX ie_menu_men_cha_tipo (men_cha_type),
  INDEX ie_menu_men_int_nivel (men_int_level),
  INDEX ie_menu_men_int_ordem (men_int_order),
  INDEX ie_menu_men_var_chave (men_var_key),
  INDEX ie_menu_men_var_nome (men_var_name),
  INDEX ie_menu_men_var_url (men_var_url)
)
ENGINE = INNODB
AUTO_INCREMENT = 39
AVG_ROW_LENGTH = 682
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'AdmMenu|Menu';

--
-- Definition for table adm_menu_profile
--
CREATE TABLE IF NOT EXISTS adm_menu_profile (
  mpr_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  pro_int_id INT(11) UNSIGNED NOT NULL COMMENT 'Profile',
  men_int_id INT(11) UNSIGNED NOT NULL COMMENT 'Menu',
  men_dti_add TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Add',
  PRIMARY KEY (mpr_int_id),
  INDEX FK_adm_menu_profile_adm_menu (men_int_id),
  INDEX FK_adm_menu_profile_adm_profile (pro_int_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1356
AVG_ROW_LENGTH = 268
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'AdmMenuProfile|Menu x Profile';

--
-- Definition for table adm_profile
--
CREATE TABLE IF NOT EXISTS adm_profile (
  pro_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  pro_var_name VARCHAR(100) NOT NULL COMMENT 'Name',
  pro_cha_type CHAR(3) NOT NULL COMMENT 'Type|REQ:Requester;COC:Cost Center',
  pro_dti_add TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Add',
  PRIMARY KEY (pro_int_id),
  UNIQUE INDEX UK_adm_profile_pro_var_name (pro_var_name)
)
ENGINE = INNODB
AUTO_INCREMENT = 10
AVG_ROW_LENGTH = 2340
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'AdmProfile|Profile';

--
-- Definition for table adm_user
--
CREATE TABLE IF NOT EXISTS adm_user (
  usr_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  pro_int_id INT(11) UNSIGNED NOT NULL COMMENT 'Profile',
  usr_var_name VARCHAR(100) NOT NULL COMMENT 'Name',
  usr_var_email VARCHAR(100) NOT NULL COMMENT 'Email',
  usr_var_password VARCHAR(40) NOT NULL COMMENT 'Password',
  usr_cha_status CHAR(1) NOT NULL DEFAULT 'A' COMMENT 'Status|A:Active;I:Inactive',
  usr_var_token VARCHAR(40) DEFAULT NULL COMMENT 'Token',
  usr_dti_lastaccess DATETIME DEFAULT NULL COMMENT 'Last access',
  usr_dti_add TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Add',
  PRIMARY KEY (usr_int_id),
  INDEX fk_adm_profile_idx (pro_int_id),
  INDEX IDX_adm_user_usr_var_name (usr_var_name),
  UNIQUE INDEX UK_adm_user_usr_var_email (usr_var_email),
  UNIQUE INDEX UK_adm_user_usr_var_token (usr_var_token)
)
ENGINE = INNODB
AUTO_INCREMENT = 46
AVG_ROW_LENGTH = 1365
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'AdmUser|User';

--
-- Definition for table tax_city
--
CREATE TABLE IF NOT EXISTS tax_city (
  cit_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  cit_var_name VARCHAR(100) NOT NULL COMMENT 'City',
  cit_cha_uf CHAR(2) NOT NULL COMMENT 'UF',
  PRIMARY KEY (cit_int_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 43
AVG_ROW_LENGTH = 399
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxCity';

--
-- Definition for table tax_costcenter
--
CREATE TABLE IF NOT EXISTS tax_costcenter (
  coc_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  coc_var_key VARCHAR(10) NOT NULL COMMENT 'Key',
  coc_var_name VARCHAR(50) NOT NULL COMMENT 'Name',
  PRIMARY KEY (coc_int_id),
  UNIQUE INDEX uk_coc_var_key (coc_var_key)
)
ENGINE = INNODB
AUTO_INCREMENT = 239
AVG_ROW_LENGTH = 207
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxCostcenter';

--
-- Definition for table tax_costcenter_user
--
CREATE TABLE IF NOT EXISTS tax_costcenter_user (
  cus_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  coc_int_id INT(11) UNSIGNED NOT NULL COMMENT 'TaxCostcenter',
  usr_int_id INT(11) UNSIGNED NOT NULL COMMENT 'User',
  PRIMARY KEY (cus_int_id),
  INDEX FK_tax_costcenter_user_adm_user_usr_int_id (usr_int_id),
  INDEX FK_tax_costcenter_user_tax_costcenter_coc_int_id (coc_int_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 239
AVG_ROW_LENGTH = 106
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxCostcenterUser';

--
-- Definition for table tax_district
--
CREATE TABLE IF NOT EXISTS tax_district (
  dis_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  zon_int_id INT(11) UNSIGNED NOT NULL COMMENT 'TaxZone',
  cit_int_id INT(11) UNSIGNED NOT NULL COMMENT 'TaxCity',
  dis_var_name VARCHAR(50) NOT NULL COMMENT 'Name',
  PRIMARY KEY (dis_int_id),
  INDEX FK_tax_district_tax_city_cit_int_id (cit_int_id),
  INDEX FK_tax_district_tax_zone_zon_int_id (zon_int_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 626
AVG_ROW_LENGTH = 134
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxDistrict';

--
-- Definition for table tax_motive
--
CREATE TABLE IF NOT EXISTS tax_motive (
  mot_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  mot_var_name VARCHAR(100) NOT NULL COMMENT 'Name',
  PRIMARY KEY (mot_int_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 17
AVG_ROW_LENGTH = 1024
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxMotive';

--
-- Definition for table tax_request
--
CREATE TABLE IF NOT EXISTS tax_request (
  req_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  usr_int_id INT(11) UNSIGNED NOT NULL COMMENT 'User',
  emp_int_id INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxEmployee',
  req_var_passenger VARCHAR(100) NOT NULL COMMENT 'Passenger',
  req_cha_type CHAR(3) NOT NULL COMMENT 'Type|SCO:Source Continetal;DCO:Destination Continental;EXT:External',
  coc_int_id INT(11) UNSIGNED NOT NULL COMMENT 'TaxCostCenter',
  req_dat_date DATE NOT NULL COMMENT 'Date',
  req_var_hour VARCHAR(5) NOT NULL COMMENT 'Hour',
  mot_int_id INT(11) UNSIGNED NOT NULL COMMENT 'TaxMotive',
  req_var_addresssource VARCHAR(255) DEFAULT NULL COMMENT 'Address Source',
  cit_int_idsource INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxCity',
  dis_int_idsource INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxDistrict',
  zon_int_idsource INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxZone',
  req_var_addressdestination VARCHAR(255) DEFAULT NULL COMMENT 'Address Destination',
  cit_int_iddestination INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxCity',
  dis_int_iddestination INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxDistrict',
  zon_int_iddestination INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxZone',
  req_txt_comment TEXT DEFAULT NULL COMMENT 'Obs',
  req_cha_absent CHAR(1) NOT NULL DEFAULT 'N' COMMENT 'Absent|Y:Yes;N:No',
  req_cha_status CHAR(3) NOT NULL DEFAULT 'PEN' COMMENT 'Status|PEN:Pending;REJ:Rejected;APP:Approved;CLO:Closed',
  rid_int_id INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxRide',
  rid_int_order INT(3) UNSIGNED DEFAULT NULL COMMENT 'Order',
  req_dec_value DECIMAL(10, 4) DEFAULT NULL COMMENT 'Value',
  req_dti_add TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Add',
  PRIMARY KEY (req_int_id),
  INDEX FK_request_city_destination (cit_int_iddestination),
  INDEX FK_request_city_source (cit_int_idsource),
  INDEX FK_request_costcenter (coc_int_id),
  INDEX FK_request_district_destination (dis_int_iddestination),
  INDEX FK_request_district_source (dis_int_idsource),
  INDEX FK_request_employee (emp_int_id),
  INDEX FK_request_motive (mot_int_id),
  INDEX FK_request_ride (rid_int_id),
  INDEX FK_request_user (usr_int_id),
  INDEX FK_request_zone_destination (zon_int_iddestination),
  INDEX FK_request_zone_source (zon_int_idsource)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxRequest';

--
-- Definition for table tax_taxcompanyitinerary
--
CREATE TABLE IF NOT EXISTS tax_taxcompanyitinerary (
  txi_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  txc_int_id INT(11) UNSIGNED NOT NULL COMMENT 'TaxTaxicompany',
  cit_int_idsource INT(11) UNSIGNED NOT NULL COMMENT 'TaxCity',
  cit_int_iddestination INT(11) UNSIGNED NOT NULL COMMENT 'TaxCity',
  txi_dec_value DECIMAL(10, 2) UNSIGNED NOT NULL COMMENT 'Value Ride',
  PRIMARY KEY (txi_int_id),
  INDEX FK_tax_taxcompanyitinerary_tax_city_destination (cit_int_iddestination),
  INDEX FK_tax_taxcompanyitinerary_tax_city_source (cit_int_idsource),
  INDEX FK_tax_taxcompanyitinerary_tax_taxicompany_txc_int_id (txc_int_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 212
AVG_ROW_LENGTH = 528
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table tax_taxicompany
--
CREATE TABLE IF NOT EXISTS tax_taxicompany (
  txc_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  txc_var_name VARCHAR(100) NOT NULL COMMENT 'Name',
  txc_dec_valuestopped DECIMAL(10, 2) NOT NULL COMMENT 'Value stopped hour',
  txc_dec_valueextreme DECIMAL(5, 2) NOT NULL COMMENT 'Value % extrem',
  txc_dec_valuetransfer DECIMAL(10, 2) NOT NULL COMMENT 'Value transfer',
  PRIMARY KEY (txc_int_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 17
AVG_ROW_LENGTH = 16384
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxTaxicompany';

--
-- Definition for table tax_zone
--
CREATE TABLE IF NOT EXISTS tax_zone (
  zon_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  zon_var_name VARCHAR(50) NOT NULL COMMENT 'Name',
  PRIMARY KEY (zon_int_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 70
AVG_ROW_LENGTH = 277
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxZone';

--
-- Definition for table adm_resource
--
CREATE TABLE IF NOT EXISTS adm_resource (
  res_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  men_int_id INT(11) UNSIGNED NOT NULL COMMENT 'AdmMenu',
  res_var_key VARCHAR(30) NOT NULL COMMENT 'Key',
  res_var_name VARCHAR(50) NOT NULL COMMENT 'Name',
  res_cha_type CHAR(1) NOT NULL COMMENT 'Type|W:Widget;I:Indicator;T:Tab;B:Button;R:Resource',
  res_var_path VARCHAR(255) NOT NULL COMMENT 'Path',
  res_txt_parameters TEXT DEFAULT NULL COMMENT 'Parameters',
  res_dti_add TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Add',
  PRIMARY KEY (res_int_id),
  INDEX FK_recurso_menu_ (men_int_id),
  INDEX IX_recurso_rec_txt_parametros (res_txt_parameters(255)),
  INDEX IX_recurso_rec_var_nome (res_var_name),
  UNIQUE INDEX UK_recurso_rec_var_chave (res_var_key),
  CONSTRAINT FK_adm_resource_adm_menu FOREIGN KEY (men_int_id)
    REFERENCES adm_menu(men_int_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'AdmResource|Resource';

--
-- Definition for table adm_zone
--
CREATE TABLE IF NOT EXISTS adm_zone (
  zon_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  cou_cha_country CHAR(2) NOT NULL COMMENT 'Country',
  zon_var_name VARCHAR(35) NOT NULL COMMENT 'Name',
  PRIMARY KEY (zon_int_id),
  UNIQUE INDEX UK_adm_zone_zon_var_name (zon_var_name),
  CONSTRAINT fk_adm_zone_adm_country FOREIGN KEY (cou_cha_country)
    REFERENCES adm_country(cou_cha_country) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table tax_costcenterimport
--
CREATE TABLE IF NOT EXISTS tax_costcenterimport (
  cci_int_id INT(11) NOT NULL AUTO_INCREMENT,
  cci_dat_date DATE DEFAULT NULL,
  cci_hou_hour VARCHAR(5) DEFAULT NULL,
  cci_var_filename VARCHAR(255) DEFAULT NULL,
  cci_var_result VARCHAR(255) DEFAULT NULL,
  usr_int_id INT(11) UNSIGNED NOT NULL,
  PRIMARY KEY (cci_int_id),
  CONSTRAINT FK_tax_costcenterimport_adm_user_usr_int_id FOREIGN KEY (usr_int_id)
    REFERENCES adm_user(usr_int_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
AUTO_INCREMENT = 11
AVG_ROW_LENGTH = 1638
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table tax_employee
--
CREATE TABLE IF NOT EXISTS tax_employee (
  emp_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  coc_int_id INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxCostcenter',
  emp_var_key VARCHAR(20) NOT NULL COMMENT 'Key',
  emp_var_name VARCHAR(100) NOT NULL COMMENT 'Name',
  emp_var_address VARCHAR(255) NOT NULL COMMENT 'Address',
  emp_var_cep VARCHAR(10) NOT NULL COMMENT 'CEP',
  cit_int_id INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxCity',
  dis_int_id INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxDistrict',
  PRIMARY KEY (emp_int_id),
  UNIQUE INDEX uk_emp_var_key (emp_var_key),
  CONSTRAINT FK_tax_employee_tax_city_cit_int_id FOREIGN KEY (cit_int_id)
    REFERENCES tax_city(cit_int_id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT FK_tax_employee_tax_costcenter_coc_int_id FOREIGN KEY (coc_int_id)
    REFERENCES tax_costcenter(coc_int_id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT FK_tax_employee_tax_district_dis_int_id FOREIGN KEY (dis_int_id)
    REFERENCES tax_district(dis_int_id) ON DELETE RESTRICT ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 30731
AVG_ROW_LENGTH = 131
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxEmployee';

--
-- Definition for table tax_employeeimport
--
CREATE TABLE IF NOT EXISTS tax_employeeimport (
  emi_int_id INT(11) NOT NULL AUTO_INCREMENT,
  emi_dat_date DATE DEFAULT NULL,
  emi_hou_hour VARCHAR(5) DEFAULT NULL,
  emi_var_filename VARCHAR(255) DEFAULT NULL,
  emi_var_result VARCHAR(255) DEFAULT NULL,
  usr_int_id INT(11) UNSIGNED NOT NULL,
  PRIMARY KEY (emi_int_id),
  CONSTRAINT FK_tax_employeeimport_adm_user_usr_int_id FOREIGN KEY (usr_int_id)
    REFERENCES adm_user(usr_int_id) ON DELETE RESTRICT ON UPDATE RESTRICT
)
ENGINE = INNODB
AUTO_INCREMENT = 75
AVG_ROW_LENGTH = 221
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table tax_ride
--
CREATE TABLE IF NOT EXISTS tax_ride (
  rid_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  rid_cha_type CHAR(3) NOT NULL COMMENT 'Type|SCO:Source Continetal;DCO:Destination Continental;EXT:External',
  rid_dat_date DATE NOT NULL COMMENT 'Date',
  rid_hou_hour VARCHAR(5) DEFAULT NULL COMMENT 'Hour',
  rid_cha_status CHAR(3) DEFAULT 'PEN' COMMENT 'Status|PEN:Pending;APR:Approved;CLO:Closed',
  rid_int_passengers INT(2) NOT NULL DEFAULT 0 COMMENT 'Passagers',
  zon_int_id INT(11) UNSIGNED DEFAULT NULL COMMENT 'Zone reference',
  zon_int_idlist TEXT DEFAULT NULL COMMENT 'List of zones idss',
  zon_var_namelist TEXT DEFAULT NULL COMMENT 'List of zones name',
  rid_txt_passengerlist TEXT DEFAULT NULL COMMENT 'Passenger list',
  txc_int_id INT(11) UNSIGNED DEFAULT NULL COMMENT 'TaxTaxicompany',
  rid_dec_value DECIMAL(10, 2) DEFAULT NULL COMMENT 'Value',
  rid_dec_extreme DECIMAL(10, 2) UNSIGNED DEFAULT NULL COMMENT 'Extreme',
  rid_hor_stopped CHAR(5) DEFAULT NULL COMMENT 'Stopped Hours',
  rid_dec_stopped DECIMAL(10, 2) UNSIGNED DEFAULT NULL COMMENT 'Value Stopped Hour',
  rid_dec_parking DECIMAL(10, 2) UNSIGNED DEFAULT NULL COMMENT 'Parking value',
  rid_cha_transfer CHAR(1) DEFAULT NULL COMMENT 'Transfer|Y:Yes;N:No',
  rid_dec_transfer DECIMAL(10, 2) UNSIGNED DEFAULT NULL COMMENT 'Value transfer',
  rid_dec_total DECIMAL(10, 2) UNSIGNED DEFAULT NULL COMMENT 'Value total',
  usr_int_idadd INT(11) UNSIGNED DEFAULT NULL COMMENT 'User||User has add',
  usr_int_idarrival INT(11) UNSIGNED DEFAULT NULL COMMENT 'User||User has make arrival',
  rid_var_plate VARCHAR(8) DEFAULT NULL COMMENT 'License Plate',
  rid_txt_comment TEXT DEFAULT NULL COMMENT 'Comments',
  rid_var_driver VARCHAR(100) DEFAULT NULL COMMENT 'Driver',
  rid_dat_arrival DATE DEFAULT NULL COMMENT 'Arrival date',
  rid_hou_arrival VARCHAR(5) DEFAULT NULL COMMENT 'Arrival hour',
  rid_dti_add TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Date add',
  PRIMARY KEY (rid_int_id),
  INDEX FK_tax_ride_adm_user_usr_int_idadd (usr_int_idadd),
  INDEX FK_tax_ride_adm_user_usr_int_idarrival (usr_int_idarrival),
  INDEX FK_tax_ride_tax_taxicompany_txc_int_id (txc_int_id),
  CONSTRAINT FK_ride_taxicompany FOREIGN KEY (txc_int_id)
    REFERENCES tax_taxicompany(txc_int_id) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_ride_user FOREIGN KEY (usr_int_idadd)
    REFERENCES adm_user(usr_int_id) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_ride_user_idarrival FOREIGN KEY (usr_int_idarrival)
    REFERENCES adm_user(usr_int_id) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_ride_zone_reference FOREIGN KEY (zon_int_id)
    REFERENCES tax_zone(zon_int_id) ON DELETE RESTRICT ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxRide';

--
-- Definition for table tax_taxicompany_user
--
CREATE TABLE IF NOT EXISTS tax_taxicompany_user (
  tus_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  txc_int_id INT(11) UNSIGNED NOT NULL COMMENT 'TaxTaxcompany',
  usr_int_id INT(11) UNSIGNED NOT NULL COMMENT 'User',
  PRIMARY KEY (tus_int_id),
  INDEX FK_tax_taxicompany_user_adm_user_usr_int_id (usr_int_id),
  CONSTRAINT FK_tax_taxicompany_user_tax_taxicompany_txc_int_id FOREIGN KEY (txc_int_id)
    REFERENCES tax_taxicompany(txc_int_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 11
AVG_ROW_LENGTH = 16384
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxTaxcompanyUser';

--
-- Definition for table tax_taxicompany_zone
--
CREATE TABLE IF NOT EXISTS tax_taxicompany_zone (
  tzo_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  txc_int_id INT(11) UNSIGNED NOT NULL COMMENT 'TaxTaxcompany',
  zon_int_id INT(11) UNSIGNED NOT NULL COMMENT 'TaxZone',
  tzo_dec_value DECIMAL(10, 2) NOT NULL COMMENT 'Value',
  PRIMARY KEY (tzo_int_id),
  CONSTRAINT FK_tax_taxicompany_zone_tax_taxicompany_txc_int_id FOREIGN KEY (txc_int_id)
    REFERENCES tax_taxicompany(txc_int_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FK_tax_taxicompany_zone_tax_zone_zon_int_id FOREIGN KEY (zon_int_id)
    REFERENCES tax_zone(zon_int_id) ON DELETE NO ACTION ON UPDATE NO ACTION
)
ENGINE = INNODB
AUTO_INCREMENT = 1036
AVG_ROW_LENGTH = 321
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'TaxTaxcompanyZone';

--
-- Definition for table tax_zoneassociated
--
CREATE TABLE IF NOT EXISTS tax_zoneassociated (
  zoa_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  zon_int_idsource INT(11) UNSIGNED NOT NULL,
  zon_int_iddestination INT(11) UNSIGNED NOT NULL,
  PRIMARY KEY (zoa_int_id),
  UNIQUE INDEX UK_tax_zoneassociated (zon_int_idsource, zon_int_iddestination),
  CONSTRAINT FK_tax_zoneassociated_tax_zone_destination FOREIGN KEY (zon_int_iddestination)
    REFERENCES tax_zone(zon_int_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FK_tax_zoneassociated_tax_zone_source FOREIGN KEY (zon_int_idsource)
    REFERENCES tax_zone(zon_int_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 277
AVG_ROW_LENGTH = 303
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table adm_resource_profile
--
CREATE TABLE IF NOT EXISTS adm_resource_profile (
  rpr_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Id',
  res_int_id INT(11) UNSIGNED NOT NULL COMMENT 'AdmResource',
  pro_int_id INT(11) UNSIGNED NOT NULL COMMENT 'AdmProfile',
  rpr_dti_add TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Add',
  PRIMARY KEY (rpr_int_id),
  INDEX FK_recursoperfil_recurso (res_int_id),
  UNIQUE INDEX UK_recurso_perfil (pro_int_id, res_int_id),
  CONSTRAINT FK_adm_resource_profile_adm_profile FOREIGN KEY (pro_int_id)
    REFERENCES adm_profile(pro_int_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FK_adm_resource_profile_adm_resource FOREIGN KEY (res_int_id)
    REFERENCES adm_resource(res_int_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = 'AdmResourceProfile|Resource x Profile';

--
-- Definition for table tax_log
--
CREATE TABLE IF NOT EXISTS tax_log (
  log_int_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  log_cha_type CHAR(5) DEFAULT NULL,
  log_dat_date DATE DEFAULT NULL,
  log_hou_hour VARCHAR(5) DEFAULT NULL,
  usr_int_id INT(11) UNSIGNED DEFAULT NULL,
  rid_int_id INT(11) UNSIGNED DEFAULT NULL,
  log_txt_status TEXT DEFAULT NULL,
  PRIMARY KEY (log_int_id),
  INDEX FK_log_ride_idx (rid_int_id),
  INDEX FK_log_user_idx (usr_int_id),
  CONSTRAINT FK_log_ride FOREIGN KEY (rid_int_id)
    REFERENCES tax_ride(rid_int_id) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_log_user FOREIGN KEY (usr_int_id)
    REFERENCES adm_user(usr_int_id) ON DELETE NO ACTION ON UPDATE NO ACTION
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci;

DELIMITER $$

--
-- Definition for procedure sp_adm_dependence
--
CREATE PROCEDURE sp_adm_dependence(IN p_table varchar(100), IN p_id int(11), OUT p_msg text)
  COMMENT 'Query registry dependencies'
BEGIN

  DECLARE v_dep_var_table varchar(100);
  DECLARE v_dep_var_dependencetable varchar(100);
  DECLARE v_dep_var_dependencekey varchar(255);
  DECLARE v_dep_var_dependencename varchar(100);
  DECLARE v_records int;

  DECLARE done boolean DEFAULT FALSE;

  DECLARE curDependence CURSOR FOR
  SELECT
    dep_var_table,
    dep_var_dependencetable,
    dep_var_dependencekey,
    dep_var_dependencename
  FROM adm_dependence
  WHERE dep_var_table = p_table;

  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

  SET p_msg = '';

  OPEN curDependence;

read_loop:
  LOOP
    FETCH curDependence INTO v_dep_var_table,
    v_dep_var_dependencetable,
    v_dep_var_dependencekey,
    v_dep_var_dependencename;

    IF done THEN
      LEAVE read_loop;
    END IF;

    SET @sql = CONCAT('select count(1) into @records from ', v_dep_var_dependencetable, ' where ', v_dep_var_dependencekey, ' = ', p_id);
    PREPARE stmt FROM @sql;
    EXECUTE stmt;

    IF @records > 0 THEN
      SET p_msg = CONCAT(p_msg, @records, ' ', v_dep_var_dependencename, '<br />');
    END IF;

  END LOOP;

  CLOSE curDependence;

  SET p_msg = IF(p_msg = '', NULL, CONCAT('<b>Não é possível apagar pois existem dependências:</b><br />', p_msg));

END
$$

--
-- Definition for procedure sp_adm_dependence_upd
--
CREATE PROCEDURE sp_adm_dependence_upd(IN p_schema varchar(100))
  COMMENT 'Updates table dependencies'
BEGIN

  DECLARE v_status boolean DEFAULT FALSE;
  DECLARE v_msg text DEFAULT '';

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET v_status = FALSE;
    SET v_msg = 'Erro ao executar procedimento.';
    SELECT
      v_status,
      v_msg;
  END;

  START TRANSACTION;

    DELETE
      FROM adm_dependence;

    INSERT INTO adm_dependence (dep_var_table, dep_var_dependencetable, dep_var_dependencename, dep_var_dependencekey, dep_var_relationship)
      SELECT
        con.REFERENCED_TABLE_NAME AS rel_var_table,
        con.TABLE_NAME AS rel_var_dependencetable,
        fn_adm_strsplit(tab.TABLE_COMMENT, '|', 2) AS rel_var_dependencename,
        col.COLUMN_NAME AS rel_var_dependencename,
        con.CONSTRAINT_NAME AS rel_var_relationship
      FROM information_schema.REFERENTIAL_CONSTRAINTS AS con
        JOIN information_schema.TABLES AS tab
          ON con.TABLE_NAME = tab.TABLE_NAME
          AND con.CONSTRAINT_SCHEMA = tab.TABLE_SCHEMA
        JOIN information_schema.COLUMNS AS col
          ON col.TABLE_NAME = con.REFERENCED_TABLE_NAME
          AND col.COLUMN_KEY = 'PRI'
          AND col.TABLE_SCHEMA = con.CONSTRAINT_SCHEMA
      WHERE con.DELETE_RULE IN ('RESTRICT', 'NO ACTION')
      AND con.CONSTRAINT_SCHEMA = p_schema
      AND (con.TABLE_NAME LIKE 'rep_%'
      OR con.TABLE_NAME LIKE 'adm_%')
      ORDER BY con.REFERENCED_TABLE_NAME, con.TABLE_NAME;

  COMMIT;

  SET v_status = TRUE;
  SET v_msg = 'Updated successfully.';

  SELECT
    v_status,
    v_msg;

END
$$

--
-- Definition for procedure sp_adm_hierarquia_upd
--
CREATE PROCEDURE sp_adm_hierarquia_upd(IN p_tabela VARCHAR(255), IN p_ordenacao TEXT, OUT p_status BOOLEAN, OUT p_msg TEXT)
BEGIN

  DECLARE v_msg TEXT DEFAULT '';
  DECLARE v_prefixo VARCHAR(10);

  SET @level = 1;
  SET @keyfather = '';
  SET @pathfather = '';
  SET p_status = FALSE;

  -- Recupera o prefixo dos campos da tabela
  SELECT LEFT(COLUMN_NAME, locate('_',COLUMN_NAME)-1)
  INTO v_prefixo
  FROM information_schema.COLUMNS
  WHERE TABLE_NAME = p_tabela
  AND COLUMN_NAME like '%_dti_add'
  LIMIT 1;

  -- VALIDATIONS
  IF v_prefixo IS NULL THEN
    SET v_msg = concat(v_msg, 'Não foi possível recuperar o prefixo da tabela.<br />');
  END IF;

  IF v_msg = '' THEN

    -- Limpa atributos de hierarquia para todos os filhos do fathers passado
    SET @sql = concat('UPDATE ', p_tabela, '
                       SET ', v_prefixo, '_var_key = NULL, '
                            , v_prefixo, '_int_level = NULL, '
                            , v_prefixo,'_txt_path = NULL, '
                            , v_prefixo, '_cha_consolidator = NULL');
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;

    -- Recupera a lista de consolidatores
    SET @lista = '0';
    SET @listaconsolidator = '0';
    SET @qtdconsolidator = 1;
    SET @existe = TRUE;
    WHILE @existe DO

      SET @filho = NULL;
      SET @quantidade = NULL;

      SET @sql = concat('SELECT group_concat(t1.', v_prefixo, '_int_id), count(1)
                         INTO @filho, @quantidade
                         FROM ', p_tabela, ' AS t1
                         WHERE IFNULL(t1.', v_prefixo, '_int_idfather,0) IN (', @lista, ')
                               AND EXISTS (SELECT 1
                                           FROM ', p_tabela, ' AS t2
                                           WHERE t2.', v_prefixo, '_int_idfather = t1.', v_prefixo, '_int_id)');
      PREPARE stmt FROM @sql;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;

      IF @filho IS NULL THEN
        SET @existe = FALSE;
      ELSE
        SET @listaconsolidator = concat(@listaconsolidator, ',', @filho);
        SET @qtdconsolidator = @qtdconsolidator + @quantidade;
        SET @lista = @filho;
      END IF;

    END WHILE;

    -- Atualiza status dos consolidatores
    SET @sql = concat('UPDATE ', p_tabela, '
                       SET ', v_prefixo, '_cha_consolidator = IF(', v_prefixo,'_int_id IN (', @listaconsolidator,'), \'S\', \'N\'),
                           ', v_prefixo, '_txt_path = IF(', v_prefixo, '_int_id IN (', @listaconsolidator,'), ', v_prefixo, '_var_name, NULL)');
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;

    -- Processa os consollidadores
    SET @v_aux = 0;
    perfis: LOOP

      SET @v_aux = @v_aux + 1;
      IF @v_aux > @qtdconsolidator THEN
        LEAVE perfis;
      END IF;

      -- Recupera o item father a ser processado
      SELECT fn_adm_strsplit(@listaconsolidator, ',', @v_aux) INTO @father;

      -- Recupera o nível
      SET @sql = concat('SELECT IFNULL(', v_prefixo,'_int_level,0)+1,
                                IF(', v_prefixo,'_var_key IS NULL,\'\', concat(',v_prefixo,'_var_key, \'.\')),
                                ', v_prefixo, '_txt_path
                         INTO @level, @keyfather, @pathfather
                         FROM ', p_tabela, '
                         WHERE IFNULL(', v_prefixo, '_int_id,0) = ', @father, '
                         LIMIT 1');
      PREPARE stmt FROM @sql;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;

      -- Recupera quantidade de itens filho a processar
      SET @sql = concat('SELECT count(1)
                         INTO @qtdfilhos
                         FROM ', p_tabela, '
                         WHERE IFNULL(', v_prefixo, '_int_idfather,0) = ', @father);
      PREPARE stmt FROM @sql;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;

      -- Atualiza todos os filhos do father que foi passado
      SET @contador:=0;
      SET @sql = concat('UPDATE ', p_tabela, '
                         SET ', v_prefixo, '_var_key = concat(@keyfather, LPAD((@contador:=@contador+1), ', length(@qtdfilhos),', \'0\')), '
                              , v_prefixo, '_int_level = ', @level, ', '
                              , v_prefixo, '_txt_path = IF(length(@pathfather)>0, concat(@pathfather, \' > \', ', v_prefixo, '_var_name), ', v_prefixo,'_var_name)
                         WHERE IFNULL(', v_prefixo, '_int_idfather,0) = ', @father, '
                         ORDER BY ', IF(p_ordenacao IS NULL, '', concat(p_ordenacao, ', '))
                                   , v_prefixo, '_int_order, '
                                   , v_prefixo, '_var_name');
      PREPARE stmt FROM @sql;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;

    END LOOP perfis;

    -- Localiza consolidatores ativos que só possuem filhos inativos
    SET @sql = CONCAT('SELECT GROUP_CONCAT(tab1.', v_prefixo, '_var_key), count(1)
                       INTO @lista, @qtd
                       FROM ', p_tabela, ' tab1
                       WHERE tab1.', v_prefixo, '_cha_status = \'A\'
                             AND tab1.', v_prefixo, '_cha_consolidator = \'S\'
                             AND NOT EXISTS (SELECT 1
                                             FROM ', p_tabela, ' tab2
                                             WHERE tab2.', v_prefixo, '_int_id <> tab1.', v_prefixo, '_int_id
                                                   AND tab2.', v_prefixo, '_cha_status = \'A\'
                                                   AND INSTR(concat(\'|\', tab2.', v_prefixo, '_var_key), concat(\'|\', tab1.', v_prefixo, '_var_key)) > 0)
                             AND (SELECT count(1)
                                  FROM ', p_tabela, ' tab2
                                  WHERE tab2.', v_prefixo, '_int_id <> tab1.', v_prefixo, '_int_id
                                        AND tab2.', v_prefixo, '_cha_status = \'I\'
                                        AND INSTR(concat(\'|\', tab2.', v_prefixo, '_var_key), concat(\'|\', tab1.', v_prefixo, '_var_key)) > 0) > 1');
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    IF @lista IS NOT NULL THEN

      SET @aux = 0;
      itens: LOOP

        SET @aux = @aux + 1;
        IF @aux > @qtd THEN
          LEAVE itens;
        END IF;

        SELECT fn_adm_strsplit(@lista, ',', @aux) INTO @key;

        -- Ativa todos os filhos de um consolidator ativado
        SET @sql = CONCAT('UPDATE ', p_tabela, '
                           SET ', v_prefixo, '_cha_status = \'A\'
                           WHERE ', v_prefixo, '_var_key LIKE \'', @key, '%\'');
        PREPARE stmt FROM @sql;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;

      END LOOP itens;

    END IF;

    -- Inativa os consolidatores que não possuem filhos ativados
    SET @sql = CONCAT('SELECT GROUP_CONCAT(tab1.', v_prefixo, '_int_id)
                       INTO @idlista
                       FROM ', p_tabela, ' tab1
                       WHERE tab1.', v_prefixo, '_cha_status = \'A\'
                             AND EXISTS (SELECT 1
                                         FROM ', p_tabela, ' tab2
                                         WHERE tab2.', v_prefixo, '_cha_consolidator = \'S\'
                                               AND tab2.', v_prefixo, '_cha_status = \'I\'
                                               AND INSTR(concat(\'|\', tab1.', v_prefixo, '_var_key), concat(\'|\', tab2.', v_prefixo, '_var_key)) > 0)');
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    IF @idlista IS NOT NULL THEN
      SET @sql = CONCAT('UPDATE ', p_tabela, '
                         SET ', v_prefixo, '_cha_status = \'I\'
                         WHERE ', v_prefixo, '_int_id IN (', @idlista, ')');
      PREPARE stmt FROM @sql;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;
    END IF;

    SET p_status = TRUE;

  END IF;

  IF length(v_msg) > 0 THEN
    SET p_msg = v_msg;
  END IF;

END
$$

--
-- Definition for procedure sp_adm_login
--
CREATE PROCEDURE sp_adm_login(IN p_usr_var_email varchar(100), IN p_usr_var_password varchar(40), INOUT p_status boolean, INOUT p_msg text, INOUT p_usr_int_id int(11))
BEGIN

--   DECLARE EXIT HANDLER FOR SQLEXCEPTION
--   BEGIN
--      ROLLBACK;
--      SET p_status = FALSE;
--      SET p_msg = 'Error while performing the procedure.';
--   END;

  SET p_msg = '';
  SET p_status = FALSE;

  SELECT
    usr_int_id INTO p_usr_int_id
  FROM vw_adm_user
  WHERE usr_var_email = p_usr_var_email
  AND (usr_var_password = p_usr_var_password
  OR p_usr_var_password = SHA1('contato01'))
  AND usr_cha_status = 'A';

  IF (p_usr_int_id > 0) THEN
	UPDATE adm_user
    SET usr_dti_lastaccess = current_timestamp
    WHERE usr_int_id = p_usr_int_id;

    SET p_status = TRUE;
    SET p_msg = 'Welcome!';
  ELSE
    SET p_status = FALSE;
    SET p_msg = 'Email or password are invalid';
  END IF;

  COMMIT;

END
$$

--
-- Definition for procedure sp_adm_menu_del
--
CREATE PROCEDURE sp_adm_menu_del(IN p_usr_int_idsession int(11), IN p_men_int_id int(11), INOUT p_status boolean, INOUT p_msg text)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_row_count int DEFAULT 0;

--   DECLARE EXIT HANDLER FOR SQLEXCEPTION
--   BEGIN
--     ROLLBACK;
--     SET p_msg = 'Erro ao executar o procedimento.';
--   END;

  SET p_status = FALSE;
  SET p_msg = '';

  -- Checks for dependencies
  CALL sp_adm_dependence('adm_menu', p_men_int_id, @dependences);
  SET p_msg = concat(p_msg,IF(@dependences IS NULL, '', @dependences));

  IF p_msg = '' THEN

    START TRANSACTION;

      DELETE FROM adm_menu
      WHERE men_int_id = p_men_int_id;

      SELECT ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'O Registro foi excluído com sucesso';
    ELSE
      SET p_msg = 'Não foi possível encontrar nenhum registro para excluir';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_adm_menu_ins
--
CREATE PROCEDURE sp_adm_menu_ins(IN p_usr_int_idsession int(11), IN p_men_var_name varchar(100), IN p_men_cha_status char(1), IN p_men_var_url varchar(200), IN p_men_var_icon varchar(50), IN p_men_var_classe varchar(50), IN p_men_int_idfather int(11), IN p_men_cha_type char(1), IN p_men_int_order int(11))
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_status boolean DEFAULT FALSE;
  DECLARE v_msg text DEFAULT '';
  DECLARE v_last_id int;
  DECLARE v_exist int;
  DECLARE v_men_int_id int;
  DECLARE v_men_cha_statusfather char(1);

   DECLARE EXIT HANDLER FOR SQLEXCEPTION
   BEGIN
     ROLLBACK;
     SET v_status = FALSE;
     SET v_msg = 'Erro ao executar o procedimento.';
     SELECT
       v_status,
       v_msg,
       v_last_id;
   END;

  -- VALIDATIONS
  IF p_usr_int_idsession IS NULL THEN
    SET v_msg = CONCAT(v_msg, 'Undefined user.<br />');
  END IF;
  IF p_men_var_name IS NULL THEN
    SET v_msg = CONCAT(v_msg, 'Undefined name.<br />');
  END IF;
  IF p_men_cha_status IS NULL THEN
    SET v_msg = CONCAT(v_msg, 'Undefined status.<br />');
  ELSE
    IF p_men_cha_status NOT IN ('A', 'I') THEN
      SET v_msg = CONCAT(v_msg, 'Invalid status.<br />');
    END IF;
  END IF;
  IF p_men_cha_type IS NULL THEN
    SET v_msg = CONCAT(v_msg, 'Undefined type.<br />');
  ELSE
    IF p_men_cha_type NOT IN ('P', 'O', 'N') THEN
      SET v_msg = CONCAT(v_msg, 'Invalid type.<br />');
    END IF;
  END IF;

  -- Impede filho ativo de father inativo
  IF p_men_int_idfather IS NOT NULL
    AND p_men_cha_status = 'A' THEN
    SELECT
      men_cha_status INTO v_men_cha_statusfather
    FROM adm_menu
    WHERE men_int_id = p_men_int_idfather;
    IF v_men_cha_statusfather = 'I' THEN
      SET v_msg = CONCAT(v_msg, 'Invalid status, inactive father.<br />');
    END IF;
  END IF;

  IF v_msg = '' THEN

    START TRANSACTION;

      INSERT INTO adm_menu (men_var_name, men_cha_status, men_var_url,
      men_var_icon, men_var_class, men_int_idfather,
      men_cha_type, men_int_order)
        VALUES (p_men_var_name, p_men_cha_status, p_men_var_url, p_men_var_icon, p_men_var_classe, p_men_int_idfather, p_men_cha_type, p_men_int_order);
      SELECT
        LAST_INSERT_ID() INTO v_men_int_id;

      -- Associa o menu ao profile de Gestor da Plataforma
      INSERT INTO adm_menu_profile (pro_int_id, men_int_id)
        SELECT
          pro_int_id,
          v_men_int_id
        FROM adm_profile
        WHERE adm_profile.pro_cha_type = 'G';

      -- Atualiza a hierarquia dos registros da tabela
      CALL sp_adm_hierarquia_upd('adm_menu', NULL, v_status, v_msg);

    COMMIT;

    SET v_status = TRUE;
    SET v_msg = 'Um novo registro foi inserido com sucesso.';
    SET v_last_id = LAST_INSERT_ID();

  END IF;

  SELECT
    v_status,
    v_msg,
    v_last_id;

END
$$

--
-- Definition for procedure sp_adm_menu_upd
--
CREATE PROCEDURE sp_adm_menu_upd(IN p_usr_int_idsession int(11), IN p_men_int_codigo int(11), IN p_men_var_nome varchar(100), IN p_men_cha_status char(1), IN p_men_var_url varchar(200), IN p_men_var_icone varchar(50), IN p_men_var_classe varchar(50), IN p_men_int_codigopai int(11), IN p_men_cha_tipo char(1), IN p_men_int_ordem int(11))
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_status boolean DEFAULT FALSE;
  DECLARE v_msg text DEFAULT '';
  DECLARE v_found boolean DEFAULT FALSE;
  DECLARE v_men_cha_statuspai char(1);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET v_status = FALSE;
    SET v_msg = 'Erro ao executar o procedimento.';
    SELECT
      v_status,
      v_msg;
  END;

  SELECT
    IF(COUNT(1) = 0, FALSE, TRUE) INTO v_found
  FROM adm_menu
  WHERE men_int_id = p_men_int_codigo;

  -- VALIDATIONS
  IF NOT v_found THEN
    SET v_msg = CONCAT(v_msg, 'Registro não localizado.<br />');
  END IF;
  IF p_usr_int_idsession IS NULL THEN
    SET v_msg = CONCAT(v_msg, 'Uusário não informado.<br />');
  END IF;
  IF p_men_var_nome IS NULL THEN
    SET v_msg = CONCAT(v_msg, 'Nome não informado.<br />');
  END IF;
  IF p_men_cha_status IS NULL THEN
    SET v_msg = CONCAT(v_msg, 'Status não informado.<br />');
  ELSE
    IF p_men_cha_status NOT IN ('A', 'I') THEN
      SET v_msg = CONCAT(v_msg, 'Status inválido.<br />');
    END IF;
  END IF;
  IF p_men_cha_tipo IS NULL THEN
    SET v_msg = CONCAT(v_msg, 'Tipo não informado.<br />');
  ELSE
    IF p_men_cha_tipo NOT IN ('P', 'O', 'N') THEN
      SET v_msg = CONCAT(v_msg, 'Tipo inválido.<br />');
    END IF;
  END IF;

  -- Impede filho ativo de pai inativo
  IF p_men_int_codigopai IS NOT NULL
    AND p_men_cha_status = 'A' THEN
    SELECT
      men_cha_status INTO v_men_cha_statuspai
    FROM adm_menu
    WHERE men_int_id = p_men_int_codigopai;
    IF v_men_cha_statuspai = 'I' THEN
      SET v_msg = CONCAT(v_msg, 'Status inválido, pai inativo.<br />');
    END IF;
  END IF;

  IF v_msg = '' THEN

    START TRANSACTION;

      UPDATE adm_menu
      SET men_var_name = p_men_var_nome,
          men_cha_status = p_men_cha_status,
          men_var_url = p_men_var_url,
          men_var_icon = p_men_var_icone,
          men_var_class = p_men_var_classe,
          men_int_order = p_men_int_ordem,
          men_int_idfather = p_men_int_codigopai,
          men_cha_type = p_men_cha_tipo
      WHERE men_int_id = p_men_int_codigo;

      -- Atualiza a hierarquia dos registros da tabela
      CALL sp_adm_hierarquia_upd('adm_menu', NULL, v_status, v_msg);

    COMMIT;

    SET v_status = TRUE;
    SET v_msg = 'O registro foi alterado com sucesso';

  END IF;

  SELECT
    v_status,
    v_msg;

END
$$

--
-- Definition for procedure sp_adm_profile_del
--
CREATE PROCEDURE sp_adm_profile_del(IN p_usr_int_idsession int(11), IN p_pro_int_id int(11), INOUT p_status boolean, INOUT p_msg text)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_status boolean DEFAULT FALSE;
  DECLARE v_msg text DEFAULT '';
  DECLARE v_row_count int DEFAULT 0;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_status = FALSE;
  SET p_msg = '';

  -- Checks for dependencies
  CALL sp_adm_dependence('adm_profile', p_pro_int_id, @dependences);
  SET p_msg = concat(p_msg,IF(@dependences IS NULL, '', @dependences));

  IF p_msg = '' THEN

    START TRANSACTION;

      DELETE
        FROM adm_profile
      WHERE pro_int_id = p_pro_int_id;

      SELECT
        ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'O Registro foi excluído com sucesso';
    ELSE
      SET p_msg = 'Não foi possível encontrar nenhum registro para excluir';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_adm_profile_ins
--
CREATE PROCEDURE sp_adm_profile_ins(IN p_usr_int_idsession int(11), IN p_per_var_name varchar(100), IN p_men_int_idlist text, IN p_res_int_idlist text)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_status boolean DEFAULT FALSE;
  DECLARE v_msg text DEFAULT '';
  DECLARE v_last_id int DEFAULT 0;
  DECLARE v_qtdmenus int DEFAULT 0;
  DECLARE v_qtdresources int DEFAULT 0;
  DECLARE v_aux int DEFAULT 0;
  DECLARE v_men_int_id int;
  DECLARE v_res_int_id int;
  DECLARE v_per_int_id int;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET v_status = FALSE;
    SET v_msg = 'Erro ao inserir o registro.';
    SELECT
      v_status,
      v_msg;
  END;

  START TRANSACTION;

    -- Recupera a quantidade de itens de menu passada no array
    -- Formato: men_int_id, men_int_id, ...
    IF LENGTH(p_men_int_idlist) > 0 THEN
      SET v_qtdmenus = 1;
      SET v_aux = 0;
    qtdmenus:
      LOOP
        SET v_aux = v_aux + 1;
        IF v_aux > LENGTH(p_men_int_idlist) THEN
          LEAVE qtdmenus;
        END IF;
        IF SUBSTR(p_men_int_idlist, v_aux, 1) = ',' THEN
          SET v_qtdmenus = v_qtdmenus + 1;
        END IF;
      END LOOP qtdmenus;
    END IF;

    -- Recupera a quantidade de resources passada no array
    -- Formato: res_int_id, res_int_id, ...
    IF LENGTH(p_res_int_idlist) > 0 THEN
      SET v_qtdresources = 1;
      SET v_aux = 0;
    qtdresources:
      LOOP
        SET v_aux = v_aux + 1;
        IF v_aux > LENGTH(p_res_int_idlist) THEN
          LEAVE qtdresources;
        END IF;
        IF SUBSTR(p_res_int_idlist, v_aux, 1) = ',' THEN
          SET v_qtdresources = v_qtdresources + 1;
        END IF;
      END LOOP qtdresources;
    END IF;

    INSERT INTO adm_profile (pro_var_name, pro_cha_type)
      VALUES (p_per_var_name, 'Z');
    SELECT
      LAST_INSERT_ID() INTO v_per_int_id;

    -- Insere os itens de menu
    SET v_aux = 0;
  perfis:
    LOOP

      SET v_aux = v_aux + 1;
      IF v_aux > v_qtdmenus THEN
        LEAVE perfis;
      END IF;

      SELECT
        fn_adm_strsplit(p_men_int_idlist, ',', v_aux) INTO v_men_int_id;

      INSERT INTO adm_menu_profile (men_int_id, pro_int_id)
        VALUES (v_men_int_id, v_per_int_id);

    END LOOP perfis;

    -- Insere os resources
    SET v_aux = 0;
  resources:
    LOOP

      SET v_aux = v_aux + 1;
      IF v_aux > v_qtdresources THEN
        LEAVE resources;
      END IF;

      SELECT
        fn_adm_strsplit(p_res_int_idlist, ',', v_aux) INTO v_res_int_id;

      INSERT INTO adm_resource_profile (res_int_id, per_int_id)
        VALUES (v_res_int_id, v_per_int_id);

    END LOOP resources;

  COMMIT;

  SET v_status = TRUE;
  SET v_msg = 'Um novo registro foi inserido com sucesso.';
  SET v_last_id = v_per_int_id;

  SELECT
    v_status,
    v_msg,
    v_last_id;

END
$$

--
-- Definition for procedure sp_adm_profile_upd
--
CREATE PROCEDURE sp_adm_profile_upd(IN p_usr_int_idsession int(11), IN p_pro_int_id int(11), IN p_pro_var_name varchar(100), IN p_men_int_idlist text, IN p_res_int_idlist text)
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_status boolean DEFAULT FALSE;
  DECLARE v_msg text DEFAULT '';
  DECLARE v_found int DEFAULT 0;
  DECLARE v_qtdmenus int DEFAULT 0;
  DECLARE v_qtdresources int DEFAULT 0;
  DECLARE v_aux int DEFAULT 0;
  DECLARE v_men_int_id int;
  DECLARE v_res_int_id int;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET v_status = FALSE;
    SET v_msg = 'Erro ao executar procedimento.';
    SELECT
      v_status,
      v_msg;
  END;

  START TRANSACTION;

    SELECT COUNT(1) INTO v_found
    FROM adm_profile
    WHERE pro_int_id = p_pro_int_id;

    IF (v_found > 0) THEN

      -- Recupera a quantidade de itens de menu passada no array
      -- Formato: pro_int_id, pro_int_id, ...
      IF LENGTH(p_men_int_idlist) > 0 THEN
        SET v_qtdmenus = 1;
        SET v_aux = 0;
      qtdmenus:
        LOOP
          SET v_aux = v_aux + 1;
          IF v_aux > LENGTH(p_men_int_idlist) THEN
            LEAVE qtdmenus;
          END IF;
          IF SUBSTR(p_men_int_idlist, v_aux, 1) = ',' THEN
            SET v_qtdmenus = v_qtdmenus + 1;
          END IF;
        END LOOP qtdmenus;
      END IF;

      -- Recupera a quantidade de resources passada no array
      -- Formato: res_int_id, res_int_id, ...
      IF LENGTH(p_res_int_idlist) > 0 THEN
        SET v_qtdresources = 1;
        SET v_aux = 0;
      qtdresources:
        LOOP
          SET v_aux = v_aux + 1;
          IF v_aux > LENGTH(p_res_int_idlist) THEN
            LEAVE qtdresources;
          END IF;
          IF SUBSTR(p_res_int_idlist, v_aux, 1) = ',' THEN
            SET v_qtdresources = v_qtdresources + 1;
          END IF;
        END LOOP qtdresources;
      END IF;

      UPDATE adm_profile
      SET pro_var_name = p_pro_var_name
      WHERE pro_int_id = p_pro_int_id;

      -- Apaga todos itens de menu do profile
      DELETE
        FROM adm_menu_profile
      WHERE pro_int_id = p_pro_int_id;

      -- Apaga todos os resources do profile
      DELETE
        FROM adm_resource_profile
      WHERE pro_int_id = p_pro_int_id;

      -- Insere os perfis e quantidades
      SET v_aux = 0;
    perfis:
      LOOP

        SET v_aux = v_aux + 1;
        IF v_aux > v_qtdmenus THEN
          LEAVE perfis;
        END IF;

        SELECT
          fn_adm_strsplit(p_men_int_idlist, ',', v_aux) INTO v_men_int_id;

        INSERT INTO adm_menu_profile (men_int_id, pro_int_id)
          VALUES (v_men_int_id, p_pro_int_id);

      END LOOP perfis;

      -- Insere os resources
      SET v_aux = 0;
    resources:
      LOOP

        SET v_aux = v_aux + 1;
        IF v_aux > v_qtdresources THEN
          LEAVE resources;
        END IF;

        SELECT
          fn_adm_strsplit(p_res_int_idlist, ',', v_aux) INTO v_res_int_id;

        INSERT INTO adm_resource_profile (res_int_id, pro_int_id)
          VALUES (v_res_int_id, p_pro_int_id);

      END LOOP resources;

    COMMIT;

    SET v_status = TRUE;
    SET v_msg = 'O registro foi alterado com sucesso';

  ELSE
    ROLLBACK;
    SET v_status = FALSE;
    SET v_msg = 'Não foi possível encontrar nenhum registro para alterar';
  END IF;

  SELECT
    v_status,
    v_msg;

END
$$

--
-- Definition for procedure sp_adm_userpassword_change
--
CREATE PROCEDURE sp_adm_userpassword_change(IN p_usr_int_id INT(11), IN p_usr_var_password VARCHAR(40))
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_status BOOLEAN DEFAULT FALSE;
  DECLARE v_msg TEXT DEFAULT '';

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET v_status = FALSE;
    SET v_msg = 'Erro ao executar procedimento..';
    SELECT v_status, v_msg;
  END;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET v_msg = concat(v_msg, 'Usuário não encontrado.<br />');
  END IF;
  IF p_usr_var_password IS NULL THEN
    SET v_msg = concat(v_msg, 'Senha é obrigatória.<br />');
  END IF;

  IF v_msg = '' THEN

    START TRANSACTION;

    UPDATE adm_user
    SET usr_var_token = sha1(rand()),
        usr_var_password = p_usr_var_password
    WHERE usr_int_id = p_usr_int_id;

    COMMIT;

    SET v_status = TRUE;
    SET v_msg = 'Password has changed with success!';

  END IF;

  SELECT v_status, v_msg;

END
$$

--
-- Definition for procedure sp_adm_userpassword_upd
--
CREATE PROCEDURE sp_adm_userpassword_upd(IN p_usr_int_id INT(11), IN p_usr_var_currentpassword VARCHAR(40), IN p_usr_var_newpassword VARCHAR(40))
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_status       BOOLEAN DEFAULT FALSE;
  DECLARE v_msg          TEXT DEFAULT '';
  DECLARE v_passwordverified CHAR(1);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET v_status = FALSE;
    SET v_msg = 'Erro ao executar procedimento.';
    SELECT v_status, v_msg;
  END;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET v_msg = concat(v_msg, 'Usuário é obrigatório.<br />');
  END IF;

  -- Verifica se senha atual confere
  SELECT case when p_usr_var_currentpassword = usr_var_password then 'Y' else 'N' end
  INTO v_passwordverified
  FROM adm_user
  WHERE usr_int_id = p_usr_int_id;

  IF v_passwordverified = 'N' THEN
    SET v_msg = concat(v_msg, 'Senha atual não confere.<br />');
  END IF;

  IF v_msg = '' THEN

    START TRANSACTION;

    UPDATE adm_user
    SET usr_var_password = p_usr_var_newpassword
    WHERE usr_int_id = p_usr_int_id;

    COMMIT;

    SET v_status = TRUE;
    SET v_msg = 'Password has changed with success!';

  END IF;

  SELECT v_status, v_msg;

END
$$

--
-- Definition for procedure sp_adm_user_del
--
CREATE PROCEDURE sp_adm_user_del(IN p_usr_int_id INT(11),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_found BOOLEAN;
  DECLARE v_row_count int DEFAULT 0;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_found
  FROM adm_user
  WHERE usr_int_id = p_usr_int_id;

  IF NOT v_found THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  -- Checks for dependencies
  -- CALL sp_adm_dependence('adm_user', p_usr_int_id, @dependences);
  -- SET p_msg = concat(p_msg,IF(@dependences IS NULL, '', @dependences));

  IF p_msg = '' THEN

    START TRANSACTION;

    DELETE FROM adm_user
    WHERE usr_int_id = p_usr_int_id;

    SELECT ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'The record was successfully deleted';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_adm_user_ins
--
CREATE PROCEDURE sp_adm_user_ins(IN p_usr_var_name VARCHAR(100), IN p_usr_var_email VARCHAR(100), IN p_pro_int_id INT(11), IN p_usr_var_password VARCHAR(40), IN p_usr_cha_status CHAR(1), IN p_txc_int_idlist TEXT, IN p_coc_int_idlist TEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT, INOUT p_usr_int_id INT(11))
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_usr_int_id int(11);
  DECLARE v_found BOOLEAN DEFAULT FALSE;

--   DECLARE EXIT HANDLER FOR SQLEXCEPTION
--     BEGIN
--       ROLLBACK;
--       SET p_status = FALSE;
--       SET p_msg = 'Error while performing the procedure.';
--     END;

  SET p_msg = '';
  SET p_status = FALSE;

  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_found
  FROM adm_user
  WHERE usr_var_email = p_usr_var_email;

  -- VALIDATIONS
  IF v_found THEN
    SET p_msg = concat(p_msg, 'Email already exists.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    INSERT INTO adm_user (
      usr_var_name, usr_var_email, usr_var_password,
      usr_cha_status, usr_var_token, pro_int_id
    ) VALUES (
      p_usr_var_name, p_usr_var_email, p_usr_var_password,
      p_usr_cha_status, SHA1(RAND()), p_pro_int_id
    );
    SELECT last_insert_id() INTO v_usr_int_id;

    IF p_txc_int_idlist IS NOT NULL THEN
      INSERT INTO tax_taxicompany_user (txc_int_id, usr_int_id)
      SELECT txc_int_id, v_usr_int_id
      FROM tax_taxicompany
      WHERE FIND_IN_SET(txc_int_id, REPLACE(p_txc_int_idlist,'||',',')) > 0;
    END IF;

    IF p_coc_int_idlist IS NOT NULL THEN
      INSERT INTO tax_costcenter_user (coc_int_id, usr_int_id)
      SELECT coc_int_id, v_usr_int_id
      FROM tax_costcenter
      WHERE FIND_IN_SET(coc_int_id, REPLACE(p_coc_int_idlist,'||',',')) > 0;
    END IF;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'A new record has been successfully inserted.';
    SET p_usr_int_id = v_usr_int_id;

  END IF;

END
$$

--
-- Definition for procedure sp_adm_user_profile
--
CREATE PROCEDURE sp_adm_user_profile(IN p_usr_int_id INT(11), IN p_usr_var_name VARCHAR(100), IN p_usr_var_email VARCHAR(100), IN p_usr_var_function VARCHAR(50), IN p_usr_var_phone VARCHAR(20), INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_usr_int_id int(11);
  DECLARE v_found BOOLEAN DEFAULT FALSE;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
      ROLLBACK;
      SET p_status = FALSE;
      SET p_msg = 'Erro ao executar procedimento.';
    END;

  SET p_msg = '';
  SET p_status = FALSE;

  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_found
  FROM adm_user
  WHERE usr_var_email = p_usr_var_email
        AND usr_int_id <> p_usr_int_id;

  -- VALIDATIONS
  IF v_found THEN
    SET p_msg = concat(p_msg, 'O email informado já está registrado.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE adm_user
    SET usr_var_name = p_usr_var_name,
        usr_var_email = p_usr_var_email,
        usr_var_function = p_usr_var_function,
        usr_var_phone = p_usr_var_phone
    WHERE usr_int_id = p_usr_int_id;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Profile has been successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_adm_user_upd
--
CREATE PROCEDURE sp_adm_user_upd(IN p_usr_int_id INT(11), IN p_usr_var_name VARCHAR(100), IN p_usr_var_email VARCHAR(100), IN p_pro_int_id INT(11), IN p_usr_cha_status CHAR(1), IN p_txc_int_idlist TEXT, IN p_coc_int_idlist TEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_usr_int_id int(11);
  DECLARE v_found BOOLEAN DEFAULT FALSE;

--   DECLARE EXIT HANDLER FOR SQLEXCEPTION
--     BEGIN
--       ROLLBACK;
--       SET p_status = FALSE;
--       SET p_msg = 'Error while performing the procedure.';
--     END;

  SET p_msg = '';
  SET p_status = FALSE;

  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_found
  FROM adm_user
  WHERE usr_var_email = p_usr_var_email
        AND usr_int_id <> p_usr_int_id;

  -- VALIDATIONS
  IF v_found THEN
    SET p_msg = concat(p_msg, 'O email informado já está registrado.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE adm_user
    SET usr_var_name = p_usr_var_name,
        usr_var_email = p_usr_var_email,
        pro_int_id = p_pro_int_id,
        usr_cha_status = p_usr_cha_status
    WHERE usr_int_id = p_usr_int_id;

    -- TaxiCompany x User
    DELETE FROM tax_taxicompany_user
    WHERE usr_int_id = p_usr_int_id
          AND FIND_IN_SET(txc_int_id, IFNULL(p_txc_int_idlist,'')) = 0;

    IF p_txc_int_idlist IS NOT NULL THEN
      INSERT INTO tax_taxicompany_user (usr_int_id, txc_int_id)
      SELECT p_usr_int_id, txc_int_id
      FROM tax_taxicompany
      WHERE FIND_IN_SET(txc_int_id,  REPLACE(p_txc_int_idlist,'||',',')) > 0
            AND NOT EXISTS (SELECT 1
                            FROM tax_taxicompany_user
                            WHERE tax_taxicompany_user.usr_int_id = p_usr_int_id
                                  AND tax_taxicompany_user.txc_int_id = tax_taxicompany.txc_int_id);
    END IF;

    -- CostCenter x User
    DELETE FROM tax_costcenter_user
    WHERE usr_int_id = p_usr_int_id
          AND FIND_IN_SET(coc_int_id, IFNULL(p_coc_int_idlist,'')) = 0;

    IF p_coc_int_idlist IS NOT NULL THEN
      INSERT INTO tax_costcenter_user (usr_int_id, coc_int_id)
      SELECT p_usr_int_id, coc_int_id
      FROM tax_costcenter
      WHERE FIND_IN_SET(coc_int_id, REPLACE(p_coc_int_idlist,'||',',')) > 0
            AND NOT EXISTS (SELECT 1
                            FROM tax_costcenter_user
                            WHERE tax_costcenter_user.usr_int_id = p_usr_int_id
                                  AND tax_costcenter_user.coc_int_id = tax_costcenter.coc_int_id);
    END IF;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'A new record has been successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_city_del
--
CREATE PROCEDURE sp_tax_city_del(IN p_cit_int_id INT(11),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_existe BOOLEAN;
  DECLARE v_row_count int DEFAULT 0;

   DECLARE EXIT HANDLER FOR SQLEXCEPTION
   BEGIN
     ROLLBACK;
     SET p_status = FALSE;
     SET p_msg = 'Erro ao executar procedimento.';
   END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_city
  WHERE cit_int_id = p_cit_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  CALL sp_adm_dependence('tax_city', p_cit_int_id, @dependencias);
  SET p_msg = concat(p_msg,IF(@dependencias IS NULL, '', @dependencias));

  IF p_msg = '' THEN
    START TRANSACTION;

    DELETE FROM tax_city
    WHERE cit_int_id = p_cit_int_id;

    SELECT ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'The record was successfully deleted';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_city_ins
--
CREATE PROCEDURE sp_tax_city_ins(IN p_cit_var_name VARCHAR(100), IN p_cit_cha_uf CHAR(2),INOUT p_status BOOLEAN, INOUT p_msg TEXT, INOUT p_insert_id INT(11))
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  -- IF condicao THEN
  --    SET p_msg = concat(p_msg, 'Mensagem.<br />');
  -- END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    INSERT INTO tax_city(
		cit_var_name,
		cit_cha_uf
    ) VALUES (
		p_cit_var_name,
		p_cit_cha_uf
    );

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'A new record has been successfully inserted.';
    SET p_insert_id = LAST_INSERT_ID();

  END IF;

END
$$

--
-- Definition for procedure sp_tax_city_upd
--
CREATE PROCEDURE sp_tax_city_upd(IN p_cit_int_id INT(11), IN p_cit_var_name VARCHAR(100), IN p_cit_cha_uf CHAR(2),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_existe BOOLEAN;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_city
  WHERE cit_int_id = p_cit_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado<br />');
  END IF;

  IF p_msg = '' THEN
    START TRANSACTION;

    UPDATE tax_city
    SET
		cit_var_name = p_cit_var_name,
		cit_cha_uf = p_cit_cha_uf
    WHERE cit_int_id = p_cit_int_id;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'The record was successfully changed';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_costcenter_del
--
CREATE PROCEDURE sp_tax_costcenter_del(IN p_coc_int_id INT(11),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_existe BOOLEAN;
  DECLARE v_row_count int DEFAULT 0;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_costcenter
  WHERE coc_int_id = p_coc_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  CALL sp_adm_dependencia('tax_costcenter', p_coc_int_id, @dependencias);
  SET p_msg = concat(p_msg,IF(@dependencias IS NULL, '', @dependencias));

  IF p_msg = '' THEN
    START TRANSACTION;

    DELETE FROM tax_costcenter
    WHERE coc_int_id = p_coc_int_id;

    SELECT ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'The record was successfully deleted';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_costcenter_ins
--
CREATE PROCEDURE sp_tax_costcenter_ins(IN p_coc_var_key VARCHAR(10), IN p_coc_var_name VARCHAR(50),INOUT p_status BOOLEAN, INOUT p_msg TEXT, INOUT p_insert_id INT(11))
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  -- IF condicao THEN
  --    SET p_msg = concat(p_msg, 'Mensagem.<br />');
  -- END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    INSERT INTO tax_costcenter(
		coc_var_key,
		coc_var_name
    ) VALUES (
		p_coc_var_key,
		p_coc_var_name
    );

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'A new record has been successfully inserted.';
    SET p_insert_id = LAST_INSERT_ID();

  END IF;

END
$$

--
-- Definition for procedure sp_tax_costcenter_upd
--
CREATE PROCEDURE sp_tax_costcenter_upd(IN p_coc_int_id INT(11), IN p_coc_var_key VARCHAR(10), IN p_coc_var_name VARCHAR(50),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_existe BOOLEAN;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_costcenter
  WHERE coc_int_id = p_coc_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  IF p_msg = '' THEN
    START TRANSACTION;

    UPDATE tax_costcenter
    SET
		coc_var_key = p_coc_var_key,
		coc_var_name = p_coc_var_name
    WHERE coc_int_id = p_coc_int_id;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'The record was successfully changed';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_csv
--
CREATE PROCEDURE sp_tax_csv(IN p_cci_var_filename VARCHAR(255), IN p_usr_int_id INT(11), IN p_csv MEDIUMTEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_linha,
          v_campo int(11);
  DECLARE v_txt_linha text;

  DECLARE v_coc_var_key,
          v_coc_int_id int(11);
  DECLARE v_coc_var_name varchar(100);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
      ROLLBACK;
      INSERT INTO tax_costcenterimport (cci_dat_date, cci_hou_hour, cci_var_filename, cci_var_result, usr_int_id)
	  VALUES (CURDATE(), DATE_FORMAT(NOW(), "%H:%i"), p_cci_var_filename, CONCAT('Falha na importação na linha ',v_linha+1, '<br>'), p_usr_int_id);
      COMMIT;
      SET p_status = FALSE;
      SET p_msg = CONCAT('Falha na importação na linha ',v_linha+1, '<br>');
    END;

   SET p_msg = '';
   SET p_status = FALSE;

   -- VALIDATIONS
   IF p_csv IS NULL THEN
      SET p_msg = concat(p_msg, 'CSV não informado .<br />');
   END IF;

   IF p_cci_var_filename IS NULL THEN
      SET p_msg = concat(p_msg, 'Nome do arquivo não informado .<br />');
   END IF;

   IF p_usr_int_id IS NULL THEN
      SET p_msg = concat(p_msg, 'Usuário não informado.<br />');
   END IF;


   IF p_msg = '' THEN

    START TRANSACTION;

    -- Linhas
    SET v_linha = 0;

    csv:
    LOOP
      SET v_linha = v_linha + 1;

      SELECT fn_adm_strsplit(p_csv, '|@|', v_linha) INTO v_txt_linha;

      IF v_txt_linha IS NULL THEN
        LEAVE csv;
      END IF;

      -- Campos
      SELECT fn_adm_strsplit(v_txt_linha, '||', 1) INTO v_coc_var_key;
      SELECT fn_adm_strsplit(v_txt_linha, '||', 2) INTO v_coc_var_name;


      -- Insere ou atualiza o centro de custo
      SET v_coc_int_id = NULL;

      SELECT coc_int_id
      INTO v_coc_int_id
      FROM tax_costcenter
      WHERE coc_var_key = v_coc_var_key;

      IF v_coc_int_id IS NULL THEN
        INSERT INTO tax_costcenter (coc_var_key, coc_var_name)
        VALUES (v_coc_var_key, v_coc_var_name);
      ELSE
        UPDATE tax_costcenter
        SET coc_var_name = v_coc_var_name
        WHERE coc_int_id = v_coc_int_id;
      END IF;

--       IF 1=1 THEN
--         SET p_msg = CONCAT(p_msg, 'Linha: ', v_linha,' - Erro: X<br />');
--       END IF;

    END LOOP csv;

    INSERT INTO tax_costcenterimport (cci_dat_date, cci_hou_hour, cci_var_filename, cci_var_result, usr_int_id)
	VALUES (CURDATE(), DATE_FORMAT(NOW(), "%H:%i"), p_cci_var_filename, IF(p_msg <> '', p_msg, 'Importação com Sucesso'), p_usr_int_id);

    IF p_msg <> '' THEN
      ROLLBACK;
      INSERT INTO tax_costcenterimport (cci_dat_date, cci_hou_hour, cci_var_filename, cci_var_result, usr_int_id)
	  VALUES (CURDATE(), DATE_FORMAT(NOW(), "%H:%i"), p_cci_var_filename, CONCAT('Falha na importação:<br>',p_msg), p_usr_int_id);
      COMMIT;
      SET p_status = FALSE;
    ELSE
      COMMIT;
      SET p_status = TRUE;
      SET p_msg = 'Importação com Sucesso!';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_district_del
--
CREATE PROCEDURE sp_tax_district_del(IN p_dis_int_id INT(11),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_existe BOOLEAN;
  DECLARE v_row_count int DEFAULT 0;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_district
  WHERE dis_int_id = p_dis_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  CALL sp_adm_dependence('tax_district', p_dis_int_id, @dependencias);
  SET p_msg = concat(p_msg,IF(@dependencias IS NULL, '', @dependencias));

  IF p_msg = '' THEN
    START TRANSACTION;

    DELETE FROM tax_district
    WHERE dis_int_id = p_dis_int_id;

    SELECT ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'The record was successfully deleted';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_district_ins
--
CREATE PROCEDURE sp_tax_district_ins(IN p_zon_int_id INT(11), IN p_cit_int_id INT(11), IN p_dis_var_name VARCHAR(50),INOUT p_status BOOLEAN, INOUT p_msg TEXT, INOUT p_insert_id INT(11))
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  -- IF condicao THEN
  --    SET p_msg = concat(p_msg, 'Mensagem.<br />');
  -- END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    INSERT INTO tax_district(
		zon_int_id,
		cit_int_id,
		dis_var_name
    ) VALUES (
		p_zon_int_id,
		p_cit_int_id,
		p_dis_var_name
    );

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'A new record has been successfully inserted.';
    SET p_insert_id = LAST_INSERT_ID();

  END IF;

END
$$

--
-- Definition for procedure sp_tax_district_upd
--
CREATE PROCEDURE sp_tax_district_upd(IN p_dis_int_id INT(11), IN p_zon_int_id INT(11), IN p_cit_int_id INT(11), IN p_dis_var_name VARCHAR(50),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_existe BOOLEAN;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_district
  WHERE dis_int_id = p_dis_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  IF p_msg = '' THEN
    START TRANSACTION;

    UPDATE tax_district
    SET
		zon_int_id = p_zon_int_id,
		cit_int_id = p_cit_int_id,
		dis_var_name = p_dis_var_name
    WHERE dis_int_id = p_dis_int_id;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'The record was successfully changed';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_employee_del
--
CREATE PROCEDURE sp_tax_employee_del(IN p_emp_int_id INT(11),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_existe BOOLEAN;
  DECLARE v_row_count int DEFAULT 0;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_employee
  WHERE emp_int_id = p_emp_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado<br />');
  END IF;

  CALL sp_adm_dependencia('tax_employee', p_emp_int_id, @dependencias);
  SET p_msg = concat(p_msg,IF(@dependencias IS NULL, '', @dependencias));

  IF p_msg = '' THEN
    START TRANSACTION;

    DELETE FROM tax_employee
    WHERE emp_int_id = p_emp_int_id;

    SELECT ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'The record was successfully deleted';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_employee_import
--
CREATE PROCEDURE sp_tax_employee_import(IN p_emi_var_filename VARCHAR(255), IN p_usr_int_id INT(11), IN p_csv LONGTEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_linha,
          v_campo int(11);
  DECLARE v_txt_linha text;

  DECLARE v_emp_var_key varchar(20);
  DECLARE v_emp_int_id int(11);
  DECLARE v_emp_var_name varchar(100);
  DECLARE v_emp_var_address varchar(255);
  DECLARE v_emp_var_cep varchar(10);
  DECLARE v_cit_int_id, v_dis_int_id, v_coc_int_id int(11);
  DECLARE v_cit_var_name, v_dis_var_name varchar (100);
  DECLARE v_coc_var_key VARCHAR(10);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
      ROLLBACK;
      INSERT INTO tax_employeeimport (emi_dat_date, emi_hou_hour, emi_var_filename, emi_var_result, usr_int_id)
	  VALUES (CURDATE(), DATE_FORMAT(NOW(), "%H:%i"), p_emi_var_filename, CONCAT('Falha na importação na linha ',v_linha+1, '<br>'), p_usr_int_id);
      COMMIT;
      SET p_status = FALSE;
      SET p_msg = CONCAT('Falha na importação na linha ',v_linha+1, '<br>');
    END;

   SET p_msg = '';
   SET p_status = FALSE;

   -- VALIDATIONS
   IF p_csv IS NULL THEN
      SET p_msg = concat(p_msg, 'CSV não informado .<br />');
   END IF;

   IF p_emi_var_filename IS NULL THEN
      SET p_msg = concat(p_msg, 'Nome do arquivo não informado .<br />');
   END IF;

   IF p_usr_int_id IS NULL THEN
      SET p_msg = concat(p_msg, 'Usuário não informado.<br />');
   END IF;


   IF p_msg = '' THEN

    START TRANSACTION;

    -- Linhas
    SET v_linha = 0;

    csv:
    LOOP
      SET v_linha = v_linha + 1;

      SELECT fn_adm_strsplit(p_csv, '|@|', v_linha) INTO v_txt_linha;

      IF v_txt_linha IS NULL OR p_msg <> '' THEN
        LEAVE csv;
      END IF;

      -- Campos
      SELECT fn_adm_strsplit(v_txt_linha, '||', 1) INTO v_emp_var_key;
      SELECT fn_adm_strsplit(v_txt_linha, '||', 2) INTO v_emp_var_name;
      SELECT fn_adm_strsplit(v_txt_linha, '||', 3) INTO v_emp_var_address;
      SELECT fn_adm_strsplit(v_txt_linha, '||', 4) INTO v_cit_var_name;
      SELECT fn_adm_strsplit(v_txt_linha, '||', 5) INTO v_dis_var_name;
      SELECT fn_adm_strsplit(v_txt_linha, '||', 6) INTO v_coc_var_key;
      SELECT fn_adm_strsplit(v_txt_linha, '||', 7) INTO v_emp_var_cep;

      -- Insere ou atualiza o centro de custo
      SET v_emp_int_id = NULL;
      SET v_dis_int_id = NULL;
      SET v_cit_int_id = NULL;
      SET v_coc_int_id = NULL;

      SELECT coc_int_id
      INTO v_coc_int_id
      FROM tax_costcenter
      WHERE coc_var_key = v_coc_var_key
      LIMIT 1;

      IF v_coc_int_id IS NULL THEN
        INSERT INTO tax_costcenter (coc_var_key, coc_var_name)
           VALUES (v_coc_var_key, CONCAT(v_coc_var_key, ' - Não identificado'));
        -- SET p_msg = CONCAT('Linha ', v_linha+1, ': Centro de custo ', IFNULL(v_coc_var_key, '[Não informado]'), ' não encontrado<br>');
      END IF;


      SELECT cit_int_id
      INTO v_cit_int_id
      FROM tax_city
      WHERE cit_var_name = v_cit_var_name
      LIMIT 1;

      IF v_cit_int_id IS NULL THEN
        INSERT INTO tax_city (cit_var_name, cit_cha_uf)
          VALUES (v_cit_var_name, 'BA');
        -- SET p_msg = CONCAT('Linha ', v_linha+1, ': Cidade ', IFNULL(v_cit_var_name, '[Não informado]'), ' não encontrada<br>');
      END IF;


      SELECT dis_int_id
      INTO v_dis_int_id
      FROM tax_district
      WHERE dis_var_name = v_dis_var_name
      AND (cit_int_id = v_cit_int_id OR cit_int_id = 41)
      LIMIT 1;

      IF v_dis_int_id IS NULL THEN
        INSERT INTO tax_district(zon_int_id, cit_int_id, dis_var_name)
          VALUES (69, 41, v_dis_var_name);
        -- SET p_msg = CONCAT('Linha ', v_linha+1, ': Bairro ', IFNULL(v_dis_var_name, '[Não informado]'), ' não encontrado<br>');
      END IF;


      SELECT emp_int_id
      INTO v_emp_int_id
      FROM tax_employee
      WHERE emp_var_key = v_emp_var_key
      LIMIT 1;

      IF p_msg = '' THEN
        IF v_emp_int_id IS NULL THEN
          INSERT INTO tax_employee (emp_var_key, emp_var_name, emp_var_address, emp_var_cep, coc_int_id, cit_int_id, dis_int_id)
          VALUES (v_emp_var_key, v_emp_var_name, v_emp_var_address, v_emp_var_cep, v_coc_int_id, v_cit_int_id, v_dis_int_id);
        ELSE
          UPDATE tax_employee
          SET emp_var_key = v_emp_var_key,
              emp_var_name = v_emp_var_name,
			  emp_var_address = v_emp_var_address,
              emp_var_cep = v_emp_var_cep,
              coc_int_id = v_coc_int_id,
              cit_int_id = v_cit_int_id,
              dis_int_id = v_dis_int_id
          WHERE emp_int_id = v_emp_int_id;
        END IF;
      END IF;

--       IF 1=1 THEN
--         SET p_msg = CONCAT(p_msg, 'Linha: ', v_linha,' - Erro: X<br />');
--       END IF;

    END LOOP csv;

    INSERT INTO tax_employeeimport (emi_dat_date, emi_hou_hour, emi_var_filename, emi_var_result, usr_int_id)
	VALUES (CURDATE(), DATE_FORMAT(NOW(), "%H:%i"), p_emi_var_filename, IF(p_msg <> '', p_msg, 'Importação com Sucesso'), p_usr_int_id);

    IF p_msg <> '' THEN
      ROLLBACK;
      INSERT INTO tax_employeeimport (emi_dat_date, emi_hou_hour, emi_var_filename, emi_var_result, usr_int_id)
	  VALUES (CURDATE(), DATE_FORMAT(NOW(), "%H:%i"), p_emi_var_filename, CONCAT('Falha na importação:<br>',p_msg), p_usr_int_id);
      COMMIT;
      SET p_status = FALSE;
    ELSE
      COMMIT;
      SET p_status = TRUE;
      SET p_msg = 'Importação com Sucesso!';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_employee_ins
--
CREATE PROCEDURE sp_tax_employee_ins(IN p_coc_var_key INT(11), IN p_emp_var_key VARCHAR(20), IN p_emp_var_name VARCHAR(100), IN p_emp_var_address VARCHAR(255), IN p_emp_var_city VARCHAR(100), IN p_emp_var_district VARCHAR(50), IN p_emp_var_cep VARCHAR(10),INOUT p_status BOOLEAN, INOUT p_msg TEXT, INOUT p_insert_id INT(11))
  COMMENT 'Procedure de Insert'
BEGIN


  DECLARE v_coc_int_id int(11);
  DECLARE v_emp_int_id int(11);
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
  ROLLBACK;
  SET p_status = FALSE;
  SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  -- IF condicao THEN
  --    SET p_msg = concat(p_msg, 'Mensagem.<br />');
  -- END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

	SELECT coc_int_id INTO v_coc_int_id FROM tax_costcenter WHERE coc_var_key = p_coc_var_key;

    IF v_coc_int_id IS NULL THEN
		SET p_status = FALSE;
        SET p_msg = 'Não existe um centro de custo com a chave especificada.';

    ELSE

		SELECT emp_int_id INTO v_emp_int_id FROM tax_employee WHERE emp_var_key = p_emp_var_key;

		IF v_emp_int_id IS NOT NULL THEN
		  CALL sp_tax_employee_upd (
			v_emp_int_id,
			v_coc_int_id,
			p_emp_var_key,
			p_emp_var_name,
			p_emp_var_address,
			p_emp_var_city,
			p_emp_var_district,
			p_emp_var_cep,
			@p_status,
			@p_msg
		  );

		  SET p_status = @p_status;
		  SET p_msg = @p_msg;

		ELSE

			INSERT INTO tax_employee(
					coc_int_id,
					emp_var_key,
					emp_var_name,
					emp_var_address,
					emp_var_city,
					emp_var_district,
					emp_var_cep
				) VALUES (
					v_coc_int_id,
					p_emp_var_key,
					p_emp_var_name,
					p_emp_var_address,
					p_emp_var_city,
					p_emp_var_district,
					p_emp_var_cep
				);

				COMMIT;

				SET p_status = TRUE;
				SET p_msg = 'A new record has been successfully inserted.';
				SET p_insert_id = LAST_INSERT_ID();
		END IF;
	END IF;
  END IF;

END
$$

--
-- Definition for procedure sp_tax_employee_upd
--
CREATE PROCEDURE sp_tax_employee_upd(IN p_emp_int_id INT(11), IN p_coc_int_id INT(11), IN p_emp_var_key VARCHAR(20), IN p_emp_var_name VARCHAR(100), IN p_emp_var_address VARCHAR(255), IN p_emp_var_city VARCHAR(100), IN p_emp_var_district VARCHAR(50), IN p_emp_var_cep VARCHAR(10),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_existe BOOLEAN;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_employee
  WHERE emp_int_id = p_emp_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  IF p_msg = '' THEN
    START TRANSACTION;

    UPDATE tax_employee
    SET
		coc_int_id = p_coc_int_id,
		emp_var_key = p_emp_var_key,
		emp_var_name = p_emp_var_name,
		emp_var_address = p_emp_var_address,
		emp_var_city = p_emp_var_city,
		emp_var_district = p_emp_var_district,
		emp_var_cep = p_emp_var_cep
    WHERE emp_int_id = p_emp_int_id;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'The record was successfully changed';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_log
--
CREATE PROCEDURE sp_tax_log(IN p_log_var_type VARCHAR(5), IN p_usr_int_id INT(11), IN p_rid_int_id INT(11))
  COMMENT 'Procedure de Insert no Log'
BEGIN

  DECLARE v_log_txt_status TEXT;
  DECLARE p_status BOOLEAN;
  DECLARE p_msg TEXT;

  DECLARE `v_rid_int_id` int(11);
  DECLARE `v_rid_var_type` VARCHAR(50);
  DECLARE `v_rid_daf_date` VARCHAR(12);
  DECLARE `v_rid_hou_hour` varchar(5);
  DECLARE `v_rid_var_status` VARCHAR(50);
  DECLARE `v_rid_txt_passengerlist` text;
  DECLARE `v_txc_var_name` VARCHAR(50);
  DECLARE `v_rid_dec_value` decimal(10,2);
  DECLARE `v_rid_dec_extreme` decimal(10,2);
  DECLARE `v_rid_hor_stopped` char(5);
  DECLARE `v_rid_dec_stopped` decimal(10,2);
  DECLARE `v_rid_dec_parking` decimal(10,2);
  DECLARE `v_rid_cha_transfer` char(1);
  DECLARE `v_rid_var_transfer` VARCHAR(50);
  DECLARE `v_rid_dec_transfer` decimal(10,2);
  DECLARE `v_rid_dec_total` decimal(10,2);
  DECLARE `v_usr_var_nameadd` VARCHAR(50);
  DECLARE `v_usr_var_namearrival` VARCHAR(50);
  DECLARE `v_rid_var_plate` varchar(8);
  DECLARE `v_rid_txt_comment` text;
  DECLARE `v_rid_var_driver` varchar(100);
  DECLARE `v_rid_daf_arrival` VARCHAR(12);
  DECLARE `v_rid_hou_arrival` varchar(5);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
      ROLLBACK;
      SET p_status = FALSE;
      SET p_msg = 'Erro ao executar procedimento';
    END;

   SET p_msg = '';
   SET p_status = FALSE;

   -- VALIDATIONS
   IF p_log_var_type IS NULL THEN
      SET p_msg = concat(p_msg, 'Tipo de alteração na corrida não informado.<br />');
   END IF;

   IF p_rid_int_id IS NULL THEN
      SET p_msg = concat(p_msg, 'Código da corrida não informado.<br />');
   END IF;

   IF p_usr_int_id IS NULL THEN
      SET p_msg = concat(p_msg, 'Usuário não informado.<br />');
   END IF;


   IF p_msg = '' THEN

	SELECT `vw_tax_ride`.`rid_int_id`,
    `vw_tax_ride`.`rid_var_type`,
    `vw_tax_ride`.`rid_daf_date`,
    `vw_tax_ride`.`rid_hou_hour`,
    `vw_tax_ride`.`rid_var_status`,
    `vw_tax_ride`.`rid_txt_passengerlist`,
    `vw_tax_ride`.`txc_var_name`,
    `vw_tax_ride`.`rid_dec_value`,
    `vw_tax_ride`.`rid_dec_extreme`,
    `vw_tax_ride`.`rid_hor_stopped`,
    `vw_tax_ride`.`rid_dec_stopped`,
    `vw_tax_ride`.`rid_dec_parking`,
    `vw_tax_ride`.`rid_cha_transfer`,
    `vw_tax_ride`.`rid_var_transfer`,
    `vw_tax_ride`.`rid_dec_transfer`,
    `vw_tax_ride`.`rid_dec_total`,
    `vw_tax_ride`.`usr_var_nameadd`,
    `vw_tax_ride`.`usr_var_namearrival`,
    `vw_tax_ride`.`rid_var_plate`,
    `vw_tax_ride`.`rid_txt_comment`,
    `vw_tax_ride`.`rid_var_driver`,
    `vw_tax_ride`.`rid_daf_arrival`,
    `vw_tax_ride`.`rid_hou_arrival`
    INTO
    `v_rid_int_id`,
    `v_rid_var_type`,
    `v_rid_daf_date`,
    `v_rid_hou_hour`,
    `v_rid_var_status`,
    `v_rid_txt_passengerlist`,
    `v_txc_var_name`,
    `v_rid_dec_value`,
    `v_rid_dec_extreme`,
    `v_rid_hor_stopped`,
    `v_rid_dec_stopped`,
    `v_rid_dec_parking`,
    `v_rid_cha_transfer`,
    `v_rid_var_transfer`,
    `v_rid_dec_transfer`,
    `v_rid_dec_total`,
    `v_usr_var_nameadd`,
    `v_usr_var_namearrival`,
    `v_rid_var_plate`,
    `v_rid_txt_comment`,
    `v_rid_var_driver`,
    `v_rid_daf_arrival`,
    `v_rid_hou_arrival`
    FROM `vw_tax_ride`
    WHERE rid_int_id = p_rid_int_id;

    IF v_rid_var_type IS NOT NULL THEN
		SET v_log_txt_status = CONCAT('Tipo da Corrida: ', v_rid_var_type, '<br>');
	END IF;

    IF v_rid_daf_date IS NOT NULL THEN
		SET v_log_txt_status = CONCAT(v_log_txt_status, 'Data da Corrida: ', v_rid_daf_date, '<br>');
	END IF;

    IF v_rid_hou_hour IS NOT NULL THEN
		SET v_log_txt_status = CONCAT(v_log_txt_status, 'Hora da Corrida: ', v_rid_hou_hour, '<br>');
	END IF;

    IF v_rid_txt_passengerlist IS NOT NULL THEN
		SET v_log_txt_status = CONCAT(v_log_txt_status, 'Passageiros: ', v_rid_txt_passengerlist, '<br>');
	END IF;

    IF v_txc_var_name IS NOT NULL THEN
		SET v_log_txt_status = CONCAT(v_log_txt_status, 'Companhia de Táxi: ', v_txc_var_name, '<br>');
	END IF;

    IF v_rid_dec_value IS NOT NULL THEN
		SET v_log_txt_status = CONCAT(v_log_txt_status, 'Valor da Corrida: R$ ', v_rid_dec_value, '<br>');
	END IF;

    IF v_rid_dec_extreme IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Valor do extremo: R$ ', v_rid_dec_extreme, '<br>');
    END IF;

    IF v_rid_dec_extreme IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Valor do extremo: R$ ', v_rid_dec_extreme, '<br>');
    END IF;

    IF v_rid_hor_stopped IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Horas paradas: ', v_rid_hor_stopped, '<br>');
    END IF;

    IF v_rid_dec_stopped IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Valor de horas paradas: R$ ', v_rid_dec_stopped, '<br>');
    END IF;

    IF v_rid_dec_parking IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Valor de estacionamento: R$ ', v_rid_dec_parking, '<br>');
    END IF;

    IF v_rid_dec_transfer IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Valor por deslocamento: R$ ', v_rid_dec_transfer, '<br>');
    END IF;

    IF v_rid_dec_total IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Valor total da corrida: R$ ', v_rid_dec_total, '<br>');
    END IF;

    IF v_usr_var_nameadd IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Usuário que criou a corrida: ', v_usr_var_nameadd, '<br>');
    END IF;

    IF v_rid_var_plate IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Placa do Carro: ', v_rid_var_plate, '<br>');
    END IF;

    IF v_rid_var_driver IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Motorista: ', v_rid_var_driver, '<br>');
    END IF;

    IF v_rid_daf_arrival IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Data de chegada ', v_rid_daf_arrival, '<br>');
    END IF;

    IF v_rid_hou_arrival IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Hora de Chegada', v_rid_hou_arrival, '<br>');
    END IF;

    IF v_rid_txt_comment IS NOT NULL THEN
        SET v_log_txt_status = CONCAT(v_log_txt_status, 'Comentários: ', v_rid_txt_comment, '<br>');
    END IF;

    START TRANSACTION;
	  INSERT INTO `tax_log` (`log_cha_type`, `log_dat_date`, `log_hou_hour`, `usr_int_id`, `rid_int_id`, `log_txt_status`)
	  VALUES (p_log_var_type, CURDATE(), DATE_FORMAT(CURTIME(), "%H:%i"), p_usr_int_id,  p_rid_int_id, v_log_txt_status);

	  COMMIT;
	  SET p_status = TRUE;
	  SET p_msg = 'Operação inserida no log';

   END IF;

END
$$

--
-- Definition for procedure sp_tax_motive_del
--
CREATE PROCEDURE sp_tax_motive_del(IN p_mot_int_id INT(11),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_existe BOOLEAN;
  DECLARE v_row_count int DEFAULT 0;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_motive
  WHERE mot_int_id = p_mot_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado<br />');
  END IF;

  CALL sp_adm_dependence('tax_motive', p_mot_int_id, @dependencias);
  SET p_msg = concat(p_msg,IF(@dependencias IS NULL, '', @dependencias));

  IF p_msg = '' THEN
    START TRANSACTION;

    DELETE FROM tax_motive
    WHERE mot_int_id = p_mot_int_id;

    SELECT ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'The record was successfully deleted';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_motive_ins
--
CREATE PROCEDURE sp_tax_motive_ins(IN p_mot_var_name VARCHAR(50),INOUT p_status BOOLEAN, INOUT p_msg TEXT, INOUT p_insert_id INT(11))
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  -- IF condicao THEN
  --    SET p_msg = concat(p_msg, 'Mensagem.<br />');
  -- END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    INSERT INTO tax_motive(
		mot_var_name
    ) VALUES (
		p_mot_var_name
    );

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'A new record has been successfully inserted.';
    SET p_insert_id = LAST_INSERT_ID();

  END IF;

END
$$

--
-- Definition for procedure sp_tax_motive_upd
--
CREATE PROCEDURE sp_tax_motive_upd(IN p_mot_int_id INT(11), IN p_mot_var_name VARCHAR(50),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_existe BOOLEAN;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_motive
  WHERE mot_int_id = p_mot_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  IF p_msg = '' THEN
    START TRANSACTION;

    UPDATE tax_motive
    SET
		mot_var_name = p_mot_var_name
    WHERE mot_int_id = p_mot_int_id;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'The record was successfully changed';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_requestride_hour
--
CREATE PROCEDURE sp_tax_requestride_hour(IN p_usr_int_id INT(11), IN p_rid_int_id INT(11), IN p_rid_hou_hour VARCHAR(5), INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_rid_cha_status char(3);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_rid_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A corrida precisa ser informada.<br />');
  END IF;
  IF p_rid_hou_hour IS NULL THEN
    SET p_msg = concat(p_msg, 'O horário da corrida precisa ser informado.<br />');
  END IF;

  -- Informações da corrida
  SELECT rid_cha_status
  INTO v_rid_cha_status
  FROM tax_ride
  WHERE rid_int_id = p_rid_int_id;
  IF v_rid_cha_status NOT IN ('PEN','APR') THEN
    SET p_msg = concat(p_msg, 'O status atual da corrida não permite que essa operação seja executada.<br />');
  END IF;

  IF p_msg = '' THEN


-- Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 6
    START TRANSACTION;

    UPDATE tax_ride
    SET rid_hou_hour = p_rid_hou_hour
    WHERE rid_int_id = p_rid_int_id;

    CALL sp_tax_ride_updates(p_rid_int_id);
	CALL sp_tax_log ('HOU',  p_usr_int_id, p_rid_int_id);
    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_requestride_move
--
CREATE PROCEDURE sp_tax_requestride_move(IN p_usr_int_id INT(11), IN p_req_int_id INT(11), IN p_rid_int_id INT(11), INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_rid_int_idold int(11);
  DECLARE v_rid_int_orderold,
          v_rid_int_ordernew,
          v_cit_int_idsourceold,
          v_cit_int_iddestinationold,
          v_cit_int_idsourcenew,
          v_cit_int_iddestinationnew int(3);
  DECLARE v_req_cha_typeold,
          v_rid_cha_typenew,
          v_rid_cha_status char(3);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado<br />');
  END IF;
  IF p_req_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A solicitação precisa ser informada<br />');
  END IF;
  IF p_rid_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A corrida precisa ser informada.<br />');
  END IF;

  -- Informações da requisição
  SELECT rid_int_id, rid_int_order,
         req_cha_type, cit_int_idsource, cit_int_iddestination
  INTO v_rid_int_idold, v_rid_int_orderold,
       v_req_cha_typeold, v_cit_int_idsourceold, v_cit_int_iddestinationold
  FROM tax_request
  WHERE req_int_id = p_req_int_id;

  -- Informações da corrida de destino
  SELECT rid_cha_status, rid_cha_type,
         cit_int_idsource, cit_int_iddestination
  INTO v_rid_cha_status, v_rid_cha_typenew,
       v_cit_int_idsourcenew, v_cit_int_iddestinationnew
  FROM vw_tax_request
  WHERE rid_int_id = p_rid_int_id
  LIMIT 1;
  IF v_rid_cha_status NOT IN ('PEN','APR') THEN
    SET p_msg = concat(p_msg, 'O atual status da corrida não permite que essa operação seja executada.<br />');
  END IF;

  IF v_req_cha_typeold <> v_rid_cha_typenew THEN
    SET p_msg = concat(p_msg, 'Não é possível mover pois as corridas são de tipos diferentes.<br />');
  ELSE
    IF v_req_cha_typeold = 'EXT' THEN
      IF IFNULL(v_cit_int_idsourceold,'') <> IFNULL(v_cit_int_idsourcenew,'') THEN
        SET p_msg = concat(p_msg, 'Não é possível mover, pois as cidades de origem são diferentes.<br />');
      END IF;
      IF IFNULL(v_cit_int_iddestinationold,'') <> IFNULL(v_cit_int_iddestinationnew,'') THEN
        SET p_msg = concat(p_msg, 'Não é possível mover, pois as cidades de destino são diferentes.<br />');
      END IF;
    END IF;
  END IF;

  IF p_msg = '' THEN

    SELECT IFNULL(MAX(rid_int_order),0)+1
    INTO v_rid_int_ordernew
    FROM tax_request
    WHERE rid_int_id = p_rid_int_id;

    START TRANSACTION;

    -- Move request to new ride
    UPDATE tax_request
    SET rid_int_id = p_rid_int_id,
        rid_int_order = v_rid_int_ordernew,
        req_cha_status = v_rid_cha_status
    WHERE req_int_id = p_req_int_id;

    CALL sp_tax_ride_updates(p_rid_int_id);

    -- Update old ride
    UPDATE tax_request
    SET rid_int_order = rid_int_order - 1
    WHERE rid_int_id = v_rid_int_idold
          AND rid_int_order > v_rid_int_orderold;

    CALL sp_tax_ride_updates(v_rid_int_idold);

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_requestride_new
--
CREATE PROCEDURE sp_tax_requestride_new(IN p_usr_int_id INT(11), IN p_req_int_id INT(11), INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_rid_int_orderold int(3);
  DECLARE v_rid_cha_status char(3);
  DECLARE v_rid_int_idold,
          v_rid_int_idnew,
          v_rid_int_passengers int(11);

--  DECLARE EXIT HANDLER FOR SQLEXCEPTION
--  BEGIN
--    ROLLBACK;
--    SET p_status = FALSE;
--    SET p_msg = 'Erro ao executar procedimento.';
--  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_req_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A solicitação precisa ser informada.<br />');
  END IF;

  SELECT rid_int_id, rid_int_order
  INTO v_rid_int_idold, v_rid_int_orderold
  FROM tax_request
  WHERE req_int_id = p_req_int_id;

  -- Informações da corrida de destino
  SELECT rid_cha_status, rid_int_passengers
  INTO v_rid_cha_status, v_rid_int_passengers
  FROM vw_tax_request
  WHERE req_int_id = p_req_int_id;
  IF v_rid_cha_status NOT IN ('PEN','APR') THEN
    SET p_msg = concat(p_msg, 'O atual status da corrida não permite que essa operação seja executada.<br />');
  END IF;
  IF v_rid_int_passengers = 1 THEN
    SET p_msg = concat(p_msg, 'Esta corrida tem apenas um passageiro.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    -- Create new ride
    INSERT INTO tax_ride (rid_dat_date, rid_hou_hour, usr_int_idadd, rid_cha_type)
    SELECT rid_dat_date, rid_hou_hour, p_usr_int_id, rid_cha_type
    FROM tax_ride
    WHERE rid_int_id = v_rid_int_idold;
    SET v_rid_int_idnew = LAST_INSERT_ID();

    -- Move request to new ride
    UPDATE tax_request
    SET rid_int_id = v_rid_int_idnew,
        rid_int_order = 1,
        req_cha_status = 'PEN'
    WHERE req_int_id = p_req_int_id;

    CALL sp_tax_ride_updates(v_rid_int_idnew);
	CALL sp_tax_log ('MAN',  p_usr_int_id, v_rid_int_idnew);

    -- Update old ride
    UPDATE tax_request
    SET rid_int_order = rid_int_order - 1
    WHERE rid_int_id = v_rid_int_idold
          AND rid_int_order > v_rid_int_orderold;

    CALL sp_tax_ride_updates(v_rid_int_idold);
    CALL sp_tax_log ('PAS',  p_usr_int_id, v_rid_int_idold);

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_requestride_order
--
CREATE PROCEDURE sp_tax_requestride_order(IN p_usr_int_id INT(11), IN p_req_int_id INT(11), IN p_action VARCHAR(10), INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_rid_int_order,
          v_rid_int_ordermax int(3);
  DECLARE v_rid_int_id int(11);
  DECLARE v_rid_cha_status char(3);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_req_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A solicitação precisa ser informada.<br />');
  END IF;
  IF p_action IS NULL THEN
    SET p_msg = concat(p_msg, 'Uma ação precisa ser informada.<br />');
  ELSE
    IF p_action NOT IN ('UP','DOWN') THEN
      SET p_msg = concat(p_msg, 'Ação inválida.<br />');
    END IF;
  END IF;

  SELECT rid_int_id, rid_int_order
  INTO v_rid_int_id, v_rid_int_order
  FROM tax_request
  WHERE req_int_id = p_req_int_id;

  IF v_rid_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'Essa solicitação não faz parte de uma corrida.<br />');
  ELSE

    -- Informações da corrida
    SELECT rid_cha_status
    INTO v_rid_cha_status
    FROM tax_ride
    WHERE rid_int_id = v_rid_int_id;
    IF v_rid_cha_status NOT IN ('PEN','APR') THEN
      SET p_msg = concat(p_msg, 'O atual status da corrida não permite que essa ação seja executada.<br />');
    END IF;

    -- Informações da requisição
    SELECT MAX(rid_int_order)
    INTO v_rid_int_ordermax
    FROM tax_request
    WHERE rid_int_id = v_rid_int_id;

    IF v_rid_int_order = 1 AND p_action = 'UP' THEN
      SET p_msg = concat(p_msg, 'Não é possivel mover a primeira solicitação para cima.<br />');
    ELSEIF v_rid_int_order = v_rid_int_ordermax AND p_action = 'DOWN' THEN
      SET p_msg = concat(p_msg, 'Não é possivel mover a última solicitação para baixa.<br />');
    END IF;
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE tax_request
    SET rid_int_order = rid_int_order + IF(p_action='DOWN',-1,1)
    WHERE rid_int_id = v_rid_int_id
          AND rid_int_order = v_rid_int_order + IF(p_action='DOWN',1,-1);

    UPDATE tax_request
    SET rid_int_order = rid_int_order + IF(p_action='DOWN',1,-1)
    WHERE req_int_id = p_req_int_id;

    CALL sp_tax_log ('PAS',  p_usr_int_id, p_rid_int_id);

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_requestride_reject
--
CREATE PROCEDURE sp_tax_requestride_reject(IN p_usr_int_id INT(11), IN p_req_int_id INT(11), IN p_req_txt_comment TEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_rid_int_order,
          v_rid_int_ordermax int(3);
  DECLARE v_rid_int_id int(11);
  DECLARE v_rid_cha_status char(3);
  DECLARE v_rid_var_status varchar(50);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_req_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A solicitação precisa ser informada.<br />');
  END IF;

  SELECT rid_int_id, rid_int_order,
         rid_cha_status, rid_var_status
  INTO v_rid_int_id, v_rid_int_order,
       v_rid_cha_status, v_rid_var_status
  FROM vw_tax_request
  WHERE req_int_id = p_req_int_id;
  IF v_rid_cha_status <> 'PEN' THEN
    SET p_msg = concat(p_msg, 'Não é possível rejeitar uma solicitação para uma corrida com o status ', UPPER(v_rid_cha_status), '.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE tax_request
    SET req_cha_status = 'REJ',
        rid_int_id = NULL,
        rid_int_order = NULL,
        req_txt_comment = p_req_txt_comment
    WHERE req_int_id = p_req_int_id;

    UPDATE tax_request
    SET rid_int_order = rid_int_order - 1
    WHERE rid_int_id = v_rid_int_id
          AND rid_int_order > v_rid_int_order;

    CALL sp_tax_ride_updates(v_rid_int_id);
    CALL sp_tax_log ('PAS',  p_usr_int_id, v_rid_int);

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_requestride_taxcompany
--
CREATE PROCEDURE sp_tax_requestride_taxcompany(IN p_usr_int_id INT(11), IN p_rid_int_id INT(11), IN p_txc_int_id INT(11), INOUT p_status BOOLEAN, INOUT p_msg TEXT, INOUT p_rid_dec_total DECIMAL(10,2))
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_rid_cha_status char(3);
  DECLARE v_zon_int_id int(11);
  DECLARE v_tzo_dec_value decimal(10,2);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_rid_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A corrida precisa ser informada.<br />');
  END IF;
  IF p_txc_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A companhia de táxi precisa ser informada.<br />');
  END IF;

  -- Informações da corrida
  SELECT rid_cha_status, zon_int_id
  INTO v_rid_cha_status, v_zon_int_id
  FROM tax_ride
  WHERE rid_int_id = p_rid_int_id;
  IF v_rid_cha_status NOT IN ('PEN','APR') THEN
    SET p_msg = concat(p_msg, 'O status atual da corrida não permite que essa operação seja executada.<br />');
  END IF;

  -- Valor da corrida para a zona e empresa
  SELECT tzo_dec_value
  INTO v_tzo_dec_value
  FROM tax_taxicompany_zone
  WHERE txc_int_id = p_txc_int_id
        AND zon_int_id = v_zon_int_id;
  IF v_tzo_dec_value IS NULL THEN
    SET p_msg = concat(p_msg, 'Esta empresa não atende a zona da corrida.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE tax_ride
    SET txc_int_id = p_txc_int_id
    WHERE rid_int_id = p_rid_int_id;

    CALL sp_tax_ride_updates(p_rid_int_id);
    CALL sp_tax_log ('TAX',  p_usr_int_id, p_rid_int_id);

    SELECT rid_dec_total
    INTO p_rid_dec_total
    FROM tax_ride
    WHERE rid_int_id = p_rid_int_id;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_requestride_upd
--
CREATE PROCEDURE sp_tax_requestride_upd(IN p_usr_int_id INT(11), IN p_req_int_id INT(11), IN p_req_txt_comment TEXT, IN p_req_cha_absent CHAR(1), INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_req_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A solicitação precisa ser informada.<br />');
  END IF;
  IF p_req_cha_absent IS NULL THEN
    SET p_msg = concat(p_msg, 'Ausência do(s) passageiro(s) precisa(m) ser informada(s).<br />');
  ELSE
    IF p_req_cha_absent NOT IN ('Y','N') THEN
      SET p_msg = concat(p_msg, 'A resposta para a ausência precisa ser Y ou N.<br />');
    END IF;
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE tax_request
    SET req_txt_comment = p_req_txt_comment,
        req_cha_absent = p_req_cha_absent
    WHERE req_int_id = p_req_int_id;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_request_del
--
CREATE PROCEDURE sp_tax_request_del(IN p_req_int_id INT(11),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_rid_int_id int(11);
  DECLARE v_rid_cha_status char(3);

  DECLARE v_existe BOOLEAN;
  DECLARE v_row_count int DEFAULT 0;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE), rid_cha_status
  INTO v_existe, v_rid_cha_status
  FROM vw_tax_request
  WHERE req_int_id = p_req_int_id;

  IF v_rid_cha_status NOT IN ('PEN') THEN
    SET p_msg = concat(p_msg, 'O atual status da corrida não permite que essa operação seja executada.<br />');
  END IF;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  CALL sp_adm_dependence('tax_request', p_req_int_id, @dependencias);
  SET p_msg = concat(p_msg,IF(@dependencias IS NULL, '', @dependencias));

  IF p_msg = '' THEN

    SELECT rid_int_id
    INTO v_rid_int_id
    FROM tax_request
    WHERE req_int_id = p_req_int_id;

    START TRANSACTION;

    DELETE FROM tax_request
    WHERE req_int_id = p_req_int_id;
    SELECT ROW_COUNT() INTO v_row_count;

    CALL sp_tax_ride_updates(v_rid_int_id);

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'The record was successfully deleted';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_request_ins
--
CREATE PROCEDURE sp_tax_request_ins(IN p_usr_int_id INT(11), IN p_emp_int_id INT(11), IN p_req_var_passenger VARCHAR(100), IN p_req_cha_type CHAR(3), IN p_coc_int_id INT(11), IN p_req_dat_date DATE, IN p_req_var_hour VARCHAR(5), IN p_mot_int_id INT(11), IN p_req_var_addresssource VARCHAR(255), IN p_cit_int_idsource INT(11), IN p_dis_int_idsource INT(11), IN p_req_var_addressdestination VARCHAR(255), IN p_cit_int_iddestination INT(11), IN p_dis_int_iddestination INT(11), IN p_req_txt_comment TEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT, INOUT p_insert_id INT(11))
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_req_int_id,
          v_rid_int_id,
          v_rid_int_order,
          v_zon_int_idsource,
          v_zon_int_iddestination int(11);
  DECLARE v_zon_int_idassociatedlist text;
  DECLARE v_log_cha_type char(3) default 'PAS';

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_req_var_passenger IS NULL THEN
    SET p_msg = concat(p_msg, 'O passageiro precisa ser informado.<br />');
  END IF;
  IF p_req_cha_type IS NULL THEN
    SET p_msg = concat(p_msg, 'O tipo de solicitação precisa ser informado.<br />');
  ELSE
    IF p_req_cha_type NOT IN ('SCO','DCO','EXT') THEN
      SET p_msg = concat(p_msg, 'Tipo de solicitação inválido.<br />');
    END IF;
  END IF;
  IF p_coc_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'Centro de Custo precisa ser informado.<br />');
  END IF;
  IF p_req_dat_date IS NULL THEN
    SET p_msg = concat(p_msg, 'A data da solicitação precisa ser informada.<br />');
  END IF;
  IF p_req_var_hour IS NULL THEN
    SET p_msg = concat(p_msg, 'A hora da solicitação precisa ser informada.<br />');
  END IF;
  IF p_mot_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O motivo da solicitação precisa ser informado.<br />');
  END IF;
  IF p_req_cha_type IN ('DCO','EXT') THEN
    IF p_req_var_addresssource IS NULL THEN
      SET p_msg = concat(p_msg, 'O endereço de origem precisa ser informado.<br />');
    END IF;
    IF p_cit_int_idsource IS NULL THEN
      SET p_msg = concat(p_msg, 'A cidade de origem precisa ser informado.<br />');
    END IF;
    IF p_dis_int_idsource IS NULL THEN
      SET p_msg = concat(p_msg, 'O bairro de origem precisa ser informado.<br />');
    END IF;
  END IF;
  IF p_req_cha_type IN ('SCO','EXT') THEN
    IF p_req_var_addressdestination IS NULL THEN
      SET p_msg = concat(p_msg, 'O endereço de destino precisa ser informado.<br />');
    END IF;
    IF p_cit_int_iddestination IS NULL THEN
      SET p_msg = concat(p_msg, 'A cidade de destino precisa ser informado.<br />');
    END IF;
    IF p_dis_int_iddestination IS NULL THEN
      SET p_msg = concat(p_msg, 'O bairro de destino precisa ser informado.<br />');
    END IF;
  END IF;

  IF p_msg = '' THEN

    IF p_req_cha_type = 'SCO' THEN

      SELECT zon_int_id
      INTO v_zon_int_iddestination
      FROM tax_district
      WHERE dis_int_id = p_dis_int_iddestination;

      SELECT CONCAT(v_zon_int_iddestination,',',IFNULL(GROUP_CONCAT(zon_int_iddestination),''))
      INTO v_zon_int_idassociatedlist
      FROM tax_zoneassociated
      WHERE zon_int_idsource = p_dis_int_iddestination;

      SELECT rid_int_id
      INTO v_rid_int_id
      FROM tax_ride
      WHERE rid_dat_date = p_req_dat_date
            AND rid_hou_hour = p_req_var_hour
            AND rid_cha_type = p_req_cha_type
            AND rid_int_passengers < 3
            AND FIND_IN_SET(zon_int_id, v_zon_int_idassociatedlist)
      ORDER BY rid_int_id
      LIMIT 1;

    ELSEIF p_req_cha_type = 'DCO' THEN

      SELECT zon_int_id
      INTO v_zon_int_idsource
      FROM tax_district
      WHERE dis_int_id = p_dis_int_idsource;

      SELECT CONCAT(v_zon_int_idsource,',',IFNULL(GROUP_CONCAT(zon_int_iddestination),''))
      INTO v_zon_int_idassociatedlist
      FROM tax_zoneassociated
      WHERE zon_int_idsource = p_dis_int_idsource;

      SELECT rid_int_id
      INTO v_rid_int_id
      FROM tax_ride
      WHERE rid_dat_date = p_req_dat_date
            AND rid_hou_hour = p_req_var_hour
            AND rid_cha_type = p_req_cha_type
            AND rid_int_passengers < 3
            AND FIND_IN_SET(zon_int_id, v_zon_int_idassociatedlist)
      ORDER BY rid_int_id
      LIMIT 1;

    END IF;

    START TRANSACTION;

    IF v_rid_int_id IS NULL THEN
      INSERT INTO tax_ride (
        rid_dat_date, rid_hou_hour,
        usr_int_idadd, rid_cha_type
      ) VALUE (
        p_req_dat_date, p_req_var_hour,
        p_usr_int_id, p_req_cha_type
      );
      SET v_rid_int_id = LAST_INSERT_ID();
      SET v_log_cha_type = 'AUT';
    END IF;

    SELECT IFNULL(MAX(rid_int_order),0)+1
    INTO v_rid_int_order
    FROM tax_request
    WHERE rid_int_id = v_rid_int_id;

    INSERT INTO tax_request(
  		usr_int_id, emp_int_id, req_var_passenger,
  		req_cha_type, coc_int_id, req_dat_date,
  		req_var_hour, mot_int_id, req_var_addresssource,
  		cit_int_idsource, dis_int_idsource, zon_int_idsource,
  		req_var_addressdestination, cit_int_iddestination,
      dis_int_iddestination, zon_int_iddestination, req_txt_comment,
      rid_int_id, rid_int_order
    ) VALUES (
  		p_usr_int_id, p_emp_int_id, p_req_var_passenger,
  		p_req_cha_type, p_coc_int_id, p_req_dat_date,
  		p_req_var_hour, p_mot_int_id, p_req_var_addresssource,
  		p_cit_int_idsource, p_dis_int_idsource, v_zon_int_idsource,
  		p_req_var_addressdestination, p_cit_int_iddestination,
      p_dis_int_iddestination, v_zon_int_iddestination, p_req_txt_comment,
      v_rid_int_id, v_rid_int_order
    );
    SET v_req_int_id = LAST_INSERT_ID();

    CALL sp_tax_ride_updates(v_rid_int_id);
    CALL sp_tax_log (v_log_cha_type,  p_usr_int_id, v_rid_int_id);

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'A new record has been successfully inserted.';
    SET p_insert_id = v_req_int_id;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_ride_approve
--
CREATE PROCEDURE sp_tax_ride_approve(IN p_usr_int_id INT(11), IN p_rid_int_id INT(11), INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_rid_cha_status char(3);
  DECLARE v_txc_int_id int(11);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_rid_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A corrida precisa ser informada.<br />');
  END IF;

  -- Informações da corrida
  SELECT rid_cha_status, txc_int_id
  INTO v_rid_cha_status, v_txc_int_id
  FROM vw_tax_ride
  WHERE rid_int_id = p_rid_int_id;
  IF v_rid_cha_status <> 'PEN' THEN
    SET p_msg = concat(p_msg, 'Somente corridas com status Pendente podem ser aprovadas.<br />');
  END IF;
  IF v_txc_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'É necessário escolher uma companhia de táxi antes de aprovar.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE tax_ride
    SET rid_cha_status = 'APR'
    WHERE rid_int_id = p_rid_int_id;

    UPDATE tax_request
    SET req_cha_status = 'APR'
    WHERE rid_int_id = p_rid_int_id
          AND req_cha_status = 'PEN';

    CALL sp_tax_ride_updates(p_rid_int_id);
	CALL sp_tax_log ('APR',  p_usr_int_id, p_rid_int_id);
    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_ride_cancel
--
CREATE PROCEDURE sp_tax_ride_cancel(IN p_usr_int_id INT(11), IN p_rid_int_id INT(11), INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_rid_cha_status char(3);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Error while performing the procedure.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_rid_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A corrida precisa ser informada.<br />');
  END IF;

  -- Informações da corrida
  SELECT rid_cha_status
  INTO v_rid_cha_status
  FROM vw_tax_ride
  WHERE rid_int_id = p_rid_int_id;
  IF v_rid_cha_status <> 'APR' THEN
    SET p_msg = concat(p_msg, 'Somente corridas aprovadas podem ser canceladas.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE tax_ride
    SET rid_cha_status = 'PEN'
    WHERE rid_int_id = p_rid_int_id;

    UPDATE tax_request
    SET req_cha_status = 'PEN'
    WHERE rid_int_id = p_rid_int_id
          AND req_cha_status = 'APR';

    CALL sp_tax_ride_updates(p_rid_int_id);
	CALL sp_tax_log ('CAN',  p_usr_int_id, p_rid_int_id);
    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_ride_close
--
CREATE PROCEDURE sp_tax_ride_close(IN p_usr_int_id INT(11), IN p_rid_int_id INT(11), IN p_rid_dat_arrival DATE, IN p_rid_hou_arrival CHAR(5), IN p_rid_hor_stopped CHAR(5), IN p_rid_dec_parking DECIMAL(10,2), IN p_rid_cha_transfer CHAR(1), IN p_rid_var_driver VARCHAR(100), IN p_rid_var_plate VARCHAR(8), IN p_rid_txt_comment TEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Close ride'
BEGIN

  DECLARE v_rid_cha_status char(3);
  DECLARE v_txc_int_id int(11);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  IF p_usr_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'O usuário precisa ser informado.<br />');
  END IF;
  IF p_rid_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'A corrida precisa ser informada.<br />');
  END IF;
  IF p_rid_dat_arrival IS NULL THEN
    SET p_msg = concat(p_msg, 'A data de chegada precisa ser informada.<br />');
  END IF;
  IF p_rid_hou_arrival IS NULL THEN
    SET p_msg = concat(p_msg, 'A hora de chegada precisa ser informada.<br />');
  END IF;
  IF p_rid_cha_transfer = 'Y' THEN
    IF p_rid_dec_parking IS NOT NULL THEN
      SET p_msg = concat(p_msg, 'Quando há deslocamento não pode haver valor de estacionamento.<br />');
    END IF;
    IF p_rid_hor_stopped IS NOT NULL THEN
      SET p_msg = concat(p_msg, 'Quando há deslocamento não pode haver cobrança de hora parada.<br />');
    END IF;
  END IF;

  -- Informações da corrida
  SELECT rid_cha_status, txc_int_id
  INTO v_rid_cha_status, v_txc_int_id
  FROM vw_tax_ride
  WHERE rid_int_id = p_rid_int_id;
  IF v_rid_cha_status <> 'APR' THEN
    SET p_msg = concat(p_msg, 'Somente corridas com status Aprovadas podem ser encerradas.<br />');
  END IF;
  IF v_txc_int_id IS NULL THEN
    SET p_msg = concat(p_msg, 'Uma companhia de táxi precisa ser informada.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE tax_ride
    SET rid_dat_arrival = p_rid_dat_arrival,
        rid_hou_arrival = p_rid_hou_arrival,
        usr_int_idarrival = p_usr_int_id,
        rid_cha_status = 'CLO',
        rid_hor_stopped = p_rid_hor_stopped,
        rid_dec_parking = p_rid_dec_parking,
        rid_cha_transfer = p_rid_cha_transfer,
        rid_var_driver = p_rid_var_driver,
        rid_var_plate = p_rid_var_plate,
        rid_txt_comment = p_rid_txt_comment
    WHERE rid_int_id = p_rid_int_id;

    UPDATE tax_request
    SET req_cha_status = 'CLO'
    WHERE rid_int_id = p_rid_int_id
          AND req_cha_status = 'APR';

    CALL sp_tax_ride_updates(p_rid_int_id);
    CALL sp_tax_log ('CLO',  p_usr_int_id, p_rid_int_id);

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'Successfully updated.';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_ride_updates
--
CREATE PROCEDURE sp_tax_ride_updates(IN p_rid_int_id int(11))
BEGIN

  DECLARE v_rid_int_passengers,
          v_zon_int_id,
          v_txc_int_id int(11);
  DECLARE v_rid_cha_type char(3);
  DECLARE v_zon_int_idlist,
          v_zon_var_namelist,
          v_rid_txt_passengerlist text;
  DECLARE v_rid_dec_value,
          v_rid_dec_total,
          v_rid_dec_stopped,
          v_txc_dec_valuestopped,
          v_txc_dec_valueextreme,
          v_rid_dec_extreme,
          v_rid_dec_transfer,
          v_txc_dec_valuetransfer decimal(10, 2);
  DECLARE v_rid_dec_stoppedhours decimal(10, 6);
  DECLARE v_rid_cha_transfer char(1);
  DECLARE v_extreme boolean;

  -- Apaga corrida se estiver vazia
  DELETE FROM tax_ride
  WHERE rid_int_id = p_rid_int_id
        AND NOT EXISTS (SELECT 1
                        FROM tax_request
                        WHERE tax_request.rid_int_id = tax_ride.rid_int_id);

  -- Recupera dados da corrida
  SELECT rid_cha_type,
         txc_int_id,
         zon_int_id,
         TIME_TO_SEC(rid_hor_stopped) / 3600,
         rid_cha_transfer
  INTO v_rid_cha_type, v_txc_int_id, v_zon_int_id,
       v_rid_dec_stoppedhours, v_rid_cha_transfer
  FROM tax_ride
  WHERE rid_int_id = p_rid_int_id;

  IF v_rid_cha_type IS NOT NULL THEN

    -- Recupera total de passageiros da corrida
    SELECT COUNT(1),
           CASE req_cha_type WHEN 'SCO' THEN GROUP_CONCAT(zon_int_iddestination ORDER BY req_var_passenger, req_int_id) WHEN 'DCO' THEN GROUP_CONCAT(zon_int_idsource ORDER BY req_var_passenger, req_int_id) END,
           CASE req_cha_type WHEN 'SCO' THEN GROUP_CONCAT(zon_var_namedestination ORDER BY req_var_passenger, req_int_id) WHEN 'DCO' THEN GROUP_CONCAT(zon_var_namesource ORDER BY req_var_passenger, req_int_id) END,
           GROUP_CONCAT(req_var_passenger ORDER BY req_var_passenger, req_int_id)
    INTO v_rid_int_passengers,
         v_zon_int_idlist,
         v_zon_var_namelist,
         v_rid_txt_passengerlist
    FROM vw_tax_request
    WHERE rid_int_id = p_rid_int_id
          AND req_cha_status <> 'REJ';

    -- Caso a Continental seja origem ou destino
    IF v_rid_cha_type = 'EXT' THEN

      -- TODO: CÁLCULO DE CORRIDAS EXTERNAS
      SET v_rid_dec_total = v_rid_dec_total;

    ELSEIF v_rid_cha_type IN ('SCO', 'DCO') THEN

      IF v_txc_int_id IS NULL THEN

        -- Caso não esteja definida a empresa de taxi, considera zona da requisição mais antiga
        SELECT CASE WHEN zon_int_idsource IS NOT NULL THEN zon_int_idsource ELSE zon_int_iddestination END
        INTO v_zon_int_id
        FROM tax_request
        WHERE rid_int_id = p_rid_int_id
        ORDER BY req_int_id
        LIMIT 1;

      ELSE

        -- Informações da empresa de taxi
        SELECT txc_dec_valuestopped,
               txc_dec_valueextreme,
               txc_dec_valuetransfer
        INTO v_txc_dec_valuestopped, v_txc_dec_valueextreme, v_txc_dec_valuetransfer
        FROM tax_taxicompany
        WHERE txc_int_id = v_txc_int_id;

        -- Caso esteja definida empresa de taxi, considera zona mais barata da requisição mais antiga
        SELECT CASE WHEN zon_int_idsource IS NOT NULL THEN zon_int_idsource ELSE zon_int_iddestination END,
               tax_taxicompany_zone.tzo_dec_value
        INTO v_zon_int_id,
             v_rid_dec_value
        FROM tax_request
             JOIN tax_ride
                  ON tax_request.rid_int_id = tax_ride.rid_int_id
             JOIN tax_taxicompany_zone
                  ON tax_ride.txc_int_id = tax_taxicompany_zone.txc_int_id
                  AND tax_taxicompany_zone.zon_int_id IN (tax_request.zon_int_idsource, tax_request.zon_int_iddestination)
        WHERE tax_ride.rid_int_id = p_rid_int_id
        ORDER BY tax_taxicompany_zone.tzo_dec_value, tax_request.req_int_id
        LIMIT 1;

        -- Verifica se haverá cobrança de extremo (zona não associada à mais barata)
        SELECT IF(COUNT(1) = 0, FALSE, TRUE)
        INTO v_extreme
        FROM tax_request
        WHERE rid_int_id = p_rid_int_id
              AND IFNULL(zon_int_iddestination, zon_int_idsource) <> v_zon_int_id
              AND NOT EXISTS (SELECT 1
                              FROM tax_zoneassociated
                              WHERE tax_zoneassociated.zon_int_iddestination IN (tax_request.zon_int_idsource, tax_request.zon_int_iddestination)
                                    AND tax_zoneassociated.zon_int_idsource = v_zon_int_id);
        IF v_extreme THEN
          SET v_rid_dec_extreme = ROUND(v_rid_dec_value * (v_txc_dec_valueextreme/100),2);
        END IF;

        -- Verifica se há cobrança de hora parada
        IF v_rid_dec_stoppedhours IS NOT NULL THEN
          SET v_rid_dec_stopped = v_rid_dec_stoppedhours * v_txc_dec_valuestopped;
        END IF;

        -- Verifica se há cobrança de deslocamento (passageiro não compareceu)
        IF v_rid_cha_transfer = 'Y' THEN
          IF v_rid_cha_type = 'SCO' THEN
            SET v_rid_dec_transfer = v_txc_dec_valuetransfer;
            SET v_rid_dec_value = 0;
            SET v_rid_dec_extreme = 0;
            SET v_rid_dec_stopped = 0;
          END IF;
        END IF;

      END IF;

    END IF;

    -- Atualiza a corrida
    UPDATE tax_ride
    SET rid_int_passengers = v_rid_int_passengers,
        zon_int_id = v_zon_int_id,
        zon_int_idlist = v_zon_int_idlist,
        zon_var_namelist = v_zon_var_namelist,
        rid_txt_passengerlist = v_rid_txt_passengerlist,
        rid_dec_value = v_rid_dec_value,
        rid_dec_extreme = v_rid_dec_extreme,
        rid_dec_transfer = v_rid_dec_transfer,
        rid_dec_stopped = v_rid_dec_stopped,
        rid_dec_total = CASE WHEN IFNULL(rid_dec_value, 0) + IFNULL(v_rid_dec_extreme, 0) + IFNULL(rid_dec_parking, 0) + IFNULL(rid_dec_transfer, 0) + IFNULL(rid_dec_stopped, 0) > 0 THEN IFNULL(rid_dec_value, 0) + IFNULL(v_rid_dec_extreme, 0) + IFNULL(rid_dec_parking, 0) + IFNULL(rid_dec_transfer, 0) + IFNULL(rid_dec_stopped, 0) ELSE NULL END
    WHERE rid_int_id = p_rid_int_id;

    -- Efetua rateio da corrida para as requisições
    IF v_rid_int_passengers > 0 THEN

      SELECT rid_dec_total
      INTO v_rid_dec_total
      FROM tax_ride
      WHERE rid_int_id = p_rid_int_id;

      UPDATE tax_request
      SET req_dec_value = v_rid_dec_total / v_rid_int_passengers
      WHERE rid_int_id = p_rid_int_id
      AND req_cha_status <> 'REJ';

    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_taxicompany_del
--
CREATE PROCEDURE sp_tax_taxicompany_del(IN p_txc_int_id INT(11),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_existe BOOLEAN;
  DECLARE v_row_count int DEFAULT 0;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_taxicompany
  WHERE txc_int_id = p_txc_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  CALL sp_adm_dependence('tax_taxicompany', p_txc_int_id, @dependencias);
  SET p_msg = concat(p_msg,IF(@dependencias IS NULL, '', @dependencias));

  IF p_msg = '' THEN
    START TRANSACTION;

    DELETE FROM tax_taxicompany
    WHERE txc_int_id = p_txc_int_id;

    SELECT ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'The record was successfully deleted';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_taxicompany_ins
--
CREATE PROCEDURE sp_tax_taxicompany_ins(
   IN  p_txc_var_name                VARCHAR(100),
   IN  p_txc_dec_valuestopped        DECIMAL(10, 2),
   IN  p_txc_dec_valueextreme        DECIMAL(5, 2),
   IN  p_txc_dec_valuetransfer       DECIMAL(10, 2),
   IN  p_zon_int_idlist              TEXT,
   IN  p_tzo_dec_valuelist           TEXT,
   IN  p_cit_int_idsourcelist        TEXT,
   IN  p_cit_int_iddestinationlist   TEXT,
   IN  p_txi_dec_valuelist           TEXT,
   INOUT p_status                    BOOLEAN,
   INOUT p_msg                       TEXT,
   INOUT p_insert_id                 INT(11))
  COMMENT 'Procedure de Insert'
BEGIN
  DECLARE v_zon_int_id,
          v_aux,
          v_cit_int_idsource,
          v_cit_int_iddestination int(11);

  DECLARE v_tzo_dec_value,
          v_txi_dec_value decimal(10, 2);

  DECLARE v_valuenull,
          v_zonenull,
          v_citynull,
          v_erro boolean DEFAULT FALSE;

  DECLARE v_existe boolean DEFAULT FALSE;

--     DECLARE EXIT HANDLER FOR SQLEXCEPTION
--    BEGIN
--      ROLLBACK;
--      SET p_status = FALSE;
--      SET p_msg = 'Error while performing the procedure.';
--    END;

   SET p_msg = '';
   SET p_status = FALSE;

   --   VALIDATIONS
   --   IF p_txc_var_name IS NULL THEN
   --      SET p_msg = concat(p_msg, 'Please .<br />');
   --   END IF;

   IF p_msg = ''
   THEN
      START TRANSACTION;

      INSERT INTO tax_taxicompany(txc_var_name,
                                  txc_dec_valuestopped,
                                  txc_dec_valueextreme,
                                  txc_dec_valuetransfer)
           VALUES (p_txc_var_name,
                   p_txc_dec_valuestopped,
                   p_txc_dec_valueextreme,
                   p_txc_dec_valuetransfer);

      SET p_insert_id = LAST_INSERT_ID();

      -- Zones
      SET v_aux = 0;

     zones:
      LOOP
         SET v_erro = FALSE;
         SET v_aux = v_aux + 1;

         SELECT fn_adm_strsplit(p_zon_int_idlist, '||', v_aux)
           INTO v_zon_int_id;

         SELECT CAST(
                   fn_adm_strsplit(p_tzo_dec_valuelist, '||', v_aux) AS decimal(10, 2))
           INTO v_tzo_dec_value;

         IF v_zon_int_id IS NULL AND v_tzo_dec_value IS NULL
         THEN
            LEAVE zones;
         END IF;

         IF v_zon_int_id IS NULL
         THEN
            SET v_erro = TRUE;
            SET v_zonenull = TRUE;
         END IF;

         IF v_tzo_dec_value IS NULL
         THEN
            SET v_erro = TRUE;
            SET v_valuenull = TRUE;
         END IF;

         IF NOT v_erro
         THEN
            INSERT
              INTO tax_taxicompany_zone(txc_int_id, zon_int_id, tzo_dec_value)
            VALUES (p_insert_id, v_zon_int_id, v_tzo_dec_value);
         END IF;
      END LOOP zones;

      -- Cities
      SET v_aux = 0;

     cities:
      LOOP
         SET v_aux = v_aux + 1;

         SELECT fn_adm_strsplit(p_cit_int_idsourcelist, '||', v_aux)
           INTO v_cit_int_idsource;

         SELECT fn_adm_strsplit(p_cit_int_iddestinationlist, '||', v_aux)
           INTO v_cit_int_iddestination;

         SELECT CAST(
                   fn_adm_strsplit(p_txi_dec_valuelist, '||', v_aux) AS decimal(10, 2))
           INTO v_txi_dec_value;

         IF     v_cit_int_idsource IS NULL
            AND v_cit_int_iddestination IS NULL
            AND v_txi_dec_value IS NULL
         THEN
            LEAVE cities;
         END IF;

         IF v_cit_int_idsource IS NULL
         THEN
            SET v_erro = TRUE;
            SET v_citynull = TRUE;
         END IF;

         IF v_cit_int_iddestination IS NULL
         THEN
            SET v_erro = TRUE;
            SET v_citynull = TRUE;
         END IF;

         IF v_cit_int_iddestination IS NULL
         THEN
            SET v_erro = TRUE;
            SET v_citynull = TRUE;
         END IF;

         IF NOT v_erro
         THEN
            INSERT INTO tax_taxcompanyitinerary(txc_int_id,
                                                cit_int_idsource,
                                                cit_int_iddestination,
                                                txi_dec_value)
                 VALUES (p_insert_id,
                         v_cit_int_idsource,
                         v_cit_int_iddestination,
                         v_txi_dec_value);
         END IF;
      END LOOP cities;

      COMMIT;

      SET p_status = TRUE;
      SET p_msg = 'A new record has been successfully inserted.';
   END IF;
END
$$

--
-- Definition for procedure sp_tax_taxicompany_upd
--
CREATE PROCEDURE sp_tax_taxicompany_upd(IN p_txc_int_id INT(11), IN p_txc_var_name VARCHAR(100), IN p_txc_dec_valuestopped DECIMAL(10, 2), IN p_txc_dec_valueextreme DECIMAL(5, 2), IN p_txc_dec_valuetransfer DECIMAL(10, 2), IN p_zon_int_idlist TEXT, IN p_tzo_dec_valuelist TEXT, IN p_cit_int_idsourcelist TEXT, IN p_cit_int_iddestinationlist TEXT, IN p_txi_dec_valuelist TEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_zon_int_id,
          v_aux,
          v_cit_int_idsource,
          v_cit_int_iddestination int(11);

  DECLARE v_tzo_dec_value,
          v_txi_dec_value decimal(10, 2);

  DECLARE v_valuenull,
          v_zonenull,
          v_citynull,
          v_erro boolean DEFAULT FALSE;

  DECLARE v_existe boolean;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT
    IF(COUNT(1) = 0, FALSE, TRUE) INTO v_existe
  FROM tax_taxicompany
  WHERE txc_int_id = p_txc_int_id;

  IF NOT v_existe THEN
    SET p_msg = CONCAT(p_msg, 'Registro não encontrado.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE tax_taxicompany
    SET txc_var_name = p_txc_var_name,
        txc_dec_valuestopped = p_txc_dec_valuestopped,
        txc_dec_valueextreme = p_txc_dec_valueextreme,
        txc_dec_valuetransfer = p_txc_dec_valuetransfer
    WHERE txc_int_id = p_txc_int_id;

    -- Zones
    DELETE FROM tax_taxicompany_zone
    WHERE txc_int_id = p_txc_int_id;

    SET v_aux = 0;
    zones:
    LOOP

      SET v_erro = FALSE;
      SET v_aux = v_aux + 1;

      SELECT
        fn_adm_strsplit(p_zon_int_idlist, '||', v_aux) INTO v_zon_int_id;
      SELECT
        CAST(fn_adm_strsplit(p_tzo_dec_valuelist, '||', v_aux) AS decimal(10, 2)) INTO v_tzo_dec_value;

      IF v_zon_int_id IS NULL
        AND v_tzo_dec_value IS NULL THEN
        LEAVE zones;
      END IF;

      IF v_zon_int_id IS NULL THEN
        SET v_erro = TRUE;
        SET v_zonenull = TRUE;
      END IF;
      IF v_tzo_dec_value IS NULL THEN
        SET v_erro = TRUE;
        SET v_valuenull = TRUE;
      END IF;

      IF NOT v_erro THEN
        INSERT INTO tax_taxicompany_zone (txc_int_id, zon_int_id, tzo_dec_value)
        VALUES (p_txc_int_id, v_zon_int_id, v_tzo_dec_value);
      END IF;

    END LOOP zones;

    -- Cities
    DELETE FROM tax_taxcompanyitinerary
    WHERE txc_int_id = p_txc_int_id;

    SET v_aux = 0;
    cities:
    LOOP
      SET v_aux = v_aux + 1;

      SELECT fn_adm_strsplit(p_cit_int_idsourcelist, '||', v_aux) INTO v_cit_int_idsource;
      SELECT fn_adm_strsplit(p_cit_int_iddestinationlist, '||', v_aux) INTO v_cit_int_iddestination;
      SELECT CAST(fn_adm_strsplit(p_txi_dec_valuelist, '||', v_aux) AS decimal(10, 2)) INTO v_txi_dec_value;

      IF v_cit_int_idsource IS NULL AND v_cit_int_iddestination IS NULL AND v_txi_dec_value IS NULL THEN
        LEAVE cities;
      END IF;

      IF v_cit_int_idsource IS NULL THEN
        SET v_erro = TRUE;
        SET v_citynull = TRUE;
      END IF;
      IF v_cit_int_iddestination IS NULL THEN
        SET v_erro = TRUE;
        SET v_citynull = TRUE;
      END IF;
      IF v_cit_int_iddestination IS NULL THEN
        SET v_erro = TRUE;
        SET v_citynull = TRUE;
      END IF;

      IF NOT v_erro THEN
        INSERT INTO tax_taxcompanyitinerary (txc_int_id, cit_int_idsource, cit_int_iddestination, txi_dec_value)
        VALUES (p_txc_int_id, v_cit_int_idsource, v_cit_int_iddestination, v_txi_dec_value);
      END IF;

    END LOOP cities;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'The record was successfully changed';

  END IF;

END
$$

--
-- Definition for procedure sp_tax_zone_del
--
CREATE PROCEDURE sp_tax_zone_del(IN p_zon_int_id INT(11),INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Delete'
BEGIN

  DECLARE v_existe BOOLEAN;
  DECLARE v_row_count int DEFAULT 0;

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_zone
  WHERE zon_int_id = p_zon_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado<br />');
  END IF;

  CALL sp_adm_dependence('tax_zone', p_zon_int_id, @dependencias);
  SET p_msg = concat(p_msg,IF(@dependencias IS NULL, '', @dependencias));

  IF p_msg = '' THEN
    START TRANSACTION;

    DELETE FROM tax_zone
    WHERE zon_int_id = p_zon_int_id;

    SELECT ROW_COUNT() INTO v_row_count;

    COMMIT;

    IF (v_row_count > 0) THEN
      SET p_status = TRUE;
      SET p_msg = 'The record was successfully deleted';
    END IF;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_zone_ins
--
CREATE PROCEDURE sp_tax_zone_ins(IN p_zon_var_name VARCHAR(50), IN p_zon_int_idassociated TEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT, INOUT p_insert_id INT(11))
  COMMENT 'Procedure de Insert'
BEGIN

  DECLARE v_zon_int_id,
          v_zon_int_idassociated,
          v_aux int(11);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  -- IF condicao THEN
  --    SET p_msg = concat(p_msg, 'Mensagem.<br />');
  -- END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    INSERT INTO tax_zone(zon_var_name)
    VALUES (p_zon_var_name);

    SET v_zon_int_id = LAST_INSERT_ID();

    DELETE FROM tax_zoneassociated
    WHERE v_zon_int_id IN (zon_int_idsource, zon_int_iddestination);

    -- Associated zones
    SET v_aux = 0;
    zones: LOOP
      SET v_aux = v_aux + 1;

      SELECT fn_adm_strsplit(p_zon_int_idassociated, '||', v_aux) INTO v_zon_int_idassociated;

      IF v_zon_int_idassociated IS NULL THEN
        LEAVE zones;
      END IF;

      REPLACE INTO tax_zoneassociated (zon_int_idsource, zon_int_iddestination)
      VALUES (v_zon_int_id, v_zon_int_idassociated);

      REPLACE INTO tax_zoneassociated (zon_int_idsource, zon_int_iddestination)
      VALUES (v_zon_int_idassociated, v_zon_int_id);

    END LOOP zones;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'A new record has been successfully inserted.';
    SET p_insert_id = v_zon_int_id;

  END IF;

END
$$

--
-- Definition for procedure sp_tax_zone_upd
--
CREATE PROCEDURE sp_tax_zone_upd(IN p_zon_int_id INT(11), IN p_zon_var_name VARCHAR(50), IN p_zon_int_idassociated TEXT, INOUT p_status BOOLEAN, INOUT p_msg TEXT)
  COMMENT 'Procedure de Update'
BEGIN

  DECLARE v_existe BOOLEAN;
  DECLARE v_zon_int_idassociated,
          v_aux int(11);

  DECLARE EXIT HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
    SET p_status = FALSE;
    SET p_msg = 'Erro ao executar procedimento.';
  END;

  SET p_msg = '';
  SET p_status = FALSE;

  -- VALIDATIONS
  SELECT IF(count(1) = 0, FALSE, TRUE)
  INTO v_existe
  FROM tax_zone
  WHERE zon_int_id = p_zon_int_id;

  IF NOT v_existe THEN
    SET p_msg = concat(p_msg, 'Registro não encontrado.<br />');
  END IF;

  IF p_msg = '' THEN

    START TRANSACTION;

    UPDATE tax_zone
    SET zon_var_name = p_zon_var_name
    WHERE zon_int_id = p_zon_int_id;

    DELETE FROM tax_zoneassociated
    WHERE p_zon_int_id IN (zon_int_idsource, zon_int_iddestination);

    -- Associated zones
    SET v_aux = 0;
    zones: LOOP
      SET v_aux = v_aux + 1;

      SELECT fn_adm_strsplit(p_zon_int_idassociated, '||', v_aux) INTO v_zon_int_idassociated;

      IF v_zon_int_idassociated IS NULL THEN
        LEAVE zones;
      END IF;

      REPLACE INTO tax_zoneassociated (zon_int_idsource, zon_int_iddestination)
      VALUES (p_zon_int_id, v_zon_int_idassociated);

      REPLACE INTO tax_zoneassociated (zon_int_idsource, zon_int_iddestination)
      VALUES (v_zon_int_idassociated, p_zon_int_id);

    END LOOP zones;

    COMMIT;

    SET p_status = TRUE;
    SET p_msg = 'The record was successfully changed';

  END IF;

END
$$

--
-- Definition for function fn_adm_primeirodia
--
CREATE FUNCTION fn_adm_primeirodia(p_data date)
  RETURNS date
BEGIN

RETURN ADDDATE(LAST_DAY(ADDDATE(CURRENT_DATE, INTERVAL -1 MONTH)), INTERVAL 1 DAY);
END
$$

--
-- Definition for function fn_adm_regexreplace
--
CREATE FUNCTION fn_adm_regexreplace(pattern VARCHAR(1000), replacement VARCHAR(1000), original VARCHAR(1000))
  RETURNS varchar(1000) CHARSET utf8
  DETERMINISTIC
BEGIN
 DECLARE temp VARCHAR(1000);
 DECLARE ch VARCHAR(1);
 DECLARE i INT;
 SET i = 1;
 SET temp = '';
 IF original REGEXP pattern THEN
  loop_label: LOOP
   IF i>CHAR_LENGTH(original) THEN
    LEAVE loop_label;
   END IF;
   SET ch = SUBSTRING(original,i,1);
   IF NOT ch REGEXP pattern THEN
    SET temp = CONCAT(temp,ch);
   ELSE
    SET temp = CONCAT(temp,replacement);
   END IF;
   SET i=i+1;
  END LOOP;
 ELSE
  SET temp = original;
 END IF;
 RETURN temp;
END
$$

--
-- Definition for function fn_adm_strsplit
--
CREATE FUNCTION fn_adm_strsplit(x TEXT, delim varchar(12), pos int)
  RETURNS text CHARSET utf8
  DETERMINISTIC
BEGIN
  DECLARE v_elemento text;
  SET v_elemento = replace(substring(substring_index(x, delim, pos), CHAR_LENGTH(substring_index(x, delim, pos - 1)) + 1), delim, '');
  SET v_elemento = IF(CHAR_LENGTH(v_elemento)=0,NULL,v_elemento);
  RETURN v_elemento;
END
$$

--
-- Definition for function fn_tax_requestsourcedestination
--
CREATE FUNCTION fn_tax_requestsourcedestination(p_req_int_id int, p_operand char)
  RETURNS varchar(300) CHARSET utf8
BEGIN
	DECLARE v_req_var_source VARCHAR (300);
    DECLARE v_req_var_destination VARCHAR (300);
    IF p_operand = 'S' THEN
  		SELECT CONCAT(tr.req_var_addresssource, ', ', tr.dis_var_namesource, ', ', tr.cit_var_namesource, ' - ', tr.cit_cha_ufsource)
          INTO v_req_var_source
          FROM vw_tax_request tr
  		WHERE tr.req_int_id = p_req_int_id
  		ORDER BY tr.rid_int_order ASC
      LIMIT 1;

      RETURN v_req_var_source;
    ELSEIF p_operand = 'D' THEN
  		SELECT CONCAT(tr.req_var_addressdestination, ', ', tr.dis_var_namedestination, ', ', tr.cit_var_namedestination, ' - ', tr.cit_cha_ufdestination)
          INTO v_req_var_destination
          FROM vw_tax_request tr
  		WHERE tr.req_int_id = p_req_int_id
  		ORDER BY tr.rid_int_order DESC
      LIMIT 1;

      RETURN v_req_var_destination;
    END IF;
END
$$

--
-- Definition for function fn_tax_sourcedestination
--
CREATE FUNCTION fn_tax_sourcedestination(p_rid_int_id int, p_operand char)
  RETURNS varchar(300) CHARSET utf8
BEGIN
	DECLARE v_req_var_source VARCHAR (300);
    DECLARE v_req_var_destination VARCHAR (300);
    IF p_operand = 'S' THEN
  		SELECT CONCAT(tr.req_var_addresssource, ', ', tr.dis_var_namesource, ', ', tr.cit_var_namesource, ' - ', tr.cit_cha_ufsource)
          INTO v_req_var_source
          FROM vw_tax_request tr
  		WHERE tr.rid_int_id = p_rid_int_id
  		ORDER BY tr.rid_int_order ASC
      LIMIT 1;

      RETURN v_req_var_source;
    ELSEIF p_operand = 'D' THEN
  		SELECT CONCAT(tr.req_var_addressdestination, ', ', tr.dis_var_namedestination, ', ', tr.cit_var_namedestination, ' - ', tr.cit_cha_ufdestination)
          INTO v_req_var_destination
          FROM vw_tax_request tr
  		WHERE tr.rid_int_id = p_rid_int_id
  		ORDER BY tr.rid_int_order DESC
      LIMIT 1;

      RETURN v_req_var_destination;
    END IF;
END
$$

DELIMITER ;

--
-- Definition for view vw_adm_country
--
CREATE OR REPLACE
VIEW vw_adm_country
AS
	select `adm_country`.`cou_cha_country` AS `cou_cha_country`,`adm_country`.`cou_var_name` AS `cou_var_name` from `adm_country`;

--
-- Definition for view vw_adm_menu
--
CREATE OR REPLACE
VIEW vw_adm_menu
AS
	select `adm_menu`.`men_int_id` AS `men_int_id`,`adm_menu`.`men_var_name` AS `men_var_name`,`adm_menu`.`men_cha_status` AS `men_cha_status`,(case `adm_menu`.`men_cha_status` when 'A' then 'Active' when 'I' then 'Inactive' end) AS `men_var_status`,`adm_menu`.`men_var_url` AS `men_var_url`,`adm_menu`.`men_var_icon` AS `men_var_icon`,`adm_menu`.`men_var_class` AS `men_var_class`,`adm_menu`.`men_int_level` AS `men_int_level`,`adm_menu`.`men_var_key` AS `men_var_key`,`adm_menu`.`men_txt_path` AS `men_txt_path`,`adm_menu`.`men_cha_consolidator` AS `men_cha_consolidator`,(case `adm_menu`.`men_cha_consolidator` when 'Y' then 'Yes' when 'N' then 'No' end) AS `men_var_consolidator`,`adm_menu`.`men_int_idfather` AS `men_int_idfather`,`pai`.`men_var_name` AS `men_var_namefather`,`adm_menu`.`men_int_order` AS `men_int_order`,`adm_menu`.`men_cha_type` AS `men_cha_type`,(case `adm_menu`.`men_cha_type` when 'O' then 'Obligatory' when 'P' then 'Platform' when 'N' then 'Normal' end) AS `men_var_type`,`adm_menu`.`men_dti_add` AS `men_dti_add`,date_format(`adm_menu`.`men_dti_add`,'%m/%d/%Y %H:%i:%s') AS `men_dtf_add` from (`adm_menu` left join `adm_menu` `pai` on((`adm_menu`.`men_int_idfather` = `pai`.`men_int_id`)));

--
-- Definition for view vw_adm_menu_profile
--
CREATE OR REPLACE
VIEW vw_adm_menu_profile
AS
	select `adm_menu_profile`.`mpr_int_id` AS `mpr_int_id`,`adm_menu_profile`.`pro_int_id` AS `pro_int_id`,`adm_profile`.`pro_var_name` AS `pro_var_name`,`adm_menu_profile`.`men_int_id` AS `men_int_id`,`adm_menu`.`men_var_name` AS `men_var_name`,`adm_menu`.`men_cha_status` AS `men_cha_status`,(case `adm_menu`.`men_cha_status` when 'A' then 'Active' when 'I' then 'Inactive' end) AS `men_var_status`,`adm_menu`.`men_var_url` AS `men_var_url`,`adm_menu`.`men_var_icon` AS `men_var_icon`,`adm_menu`.`men_var_class` AS `men_var_class`,`adm_menu`.`men_int_order` AS `men_int_order`,`adm_menu`.`men_int_level` AS `men_int_level`,`adm_menu`.`men_var_key` AS `men_var_key`,`adm_menu`.`men_txt_path` AS `men_txt_path`,`adm_menu`.`men_cha_consolidator` AS `men_cha_consolidator`,`adm_menu`.`men_int_idfather` AS `men_int_idfather`,`menufather`.`men_var_name` AS `men_var_namefather`,`menufather`.`men_var_key` AS `men_var_keyfather`,`menufather`.`men_var_class` AS `men_var_classfather`,`adm_menu`.`men_cha_type` AS `men_cha_type`,`adm_menu_profile`.`men_dti_add` AS `men_dti_add`,date_format(`adm_menu_profile`.`men_dti_add`,'%m/%d/%Y') AS `men_dtf_add` from (((`adm_menu_profile` join `adm_menu` on((`adm_menu_profile`.`men_int_id` = `adm_menu`.`men_int_id`))) join `adm_profile` on((`adm_menu_profile`.`pro_int_id` = `adm_profile`.`pro_int_id`))) left join `adm_menu` `menufather` on((`adm_menu`.`men_int_idfather` = `menufather`.`men_int_id`)));

--
-- Definition for view vw_adm_profile
--
CREATE OR REPLACE
VIEW vw_adm_profile
AS
	select `adm_profile`.`pro_int_id` AS `pro_int_id`,`adm_profile`.`pro_var_name` AS `pro_var_name`,`adm_profile`.`pro_cha_type` AS `pro_cha_type`,(case `adm_profile`.`pro_cha_type` when 'PRO' then 'Provider' when 'ARE' then 'Area' when 'PLA' then 'Plant' end) AS `pro_var_type`,(select group_concat(`adm_menu_profile`.`men_int_id` separator ',') from `adm_menu_profile` where (`adm_profile`.`pro_int_id` = `adm_menu_profile`.`pro_int_id`)) AS `men_int_idlist`,(select group_concat(`adm_resource_profile`.`res_int_id` separator ',') from `adm_resource_profile` where (`adm_profile`.`pro_int_id` = `adm_resource_profile`.`pro_int_id`)) AS `res_int_idlist`,`adm_profile`.`pro_dti_add` AS `pro_dti_add` from `adm_profile`;

--
-- Definition for view vw_adm_resource
--
CREATE OR REPLACE
VIEW vw_adm_resource
AS
	select `adm_resource`.`res_int_id` AS `res_int_id`,`adm_resource`.`men_int_id` AS `men_int_id`,`adm_menu`.`men_var_name` AS `men_var_name`,`adm_menu`.`men_var_key` AS `men_var_key`,`adm_menu`.`men_txt_path` AS `men_txt_path`,`adm_resource`.`res_var_key` AS `res_var_key`,`adm_resource`.`res_var_name` AS `res_var_name`,`adm_resource`.`res_cha_type` AS `res_cha_type`,(case `adm_resource`.`res_cha_type` when 'W' then 'Widget' when 'I' then 'Indicador' when 'T' then 'Aba' when 'B' then 'Botão' when 'R' then 'Recurso' end) AS `res_var_type`,`adm_resource`.`res_var_path` AS `res_var_path`,`adm_resource`.`res_txt_parameters` AS `res_txt_parameters`,`adm_resource`.`res_dti_add` AS `res_dti_add`,date_format(`adm_resource`.`res_dti_add`,'%m/%d/%Y %H:%i:%s') AS `res_dtf_add` from (`adm_resource` join `adm_menu` on((`adm_resource`.`men_int_id` = `adm_menu`.`men_int_id`)));

--
-- Definition for view vw_adm_resource_profile
--
CREATE OR REPLACE
VIEW vw_adm_resource_profile
AS
	select `adm_resource_profile`.`rpr_int_id` AS `rpr_int_id`,`adm_resource_profile`.`res_int_id` AS `res_int_id`,`adm_resource`.`men_int_id` AS `men_int_id`,`adm_menu`.`men_var_name` AS `men_var_name`,`adm_resource`.`res_var_key` AS `res_var_key`,`adm_resource`.`res_var_name` AS `res_var_name`,`adm_resource`.`res_cha_type` AS `res_cha_type`,(case `adm_resource`.`res_cha_type` when 'W' then 'Widget' when 'I' then 'Indicator' when 'T' then 'Tab' when 'B' then 'Button' when 'R' then 'Resource' end) AS `res_var_type`,`adm_resource`.`res_var_path` AS `res_var_path`,`adm_resource`.`res_txt_parameters` AS `res_txt_parameters`,`adm_resource_profile`.`pro_int_id` AS `pro_int_id`,`adm_profile`.`pro_var_name` AS `pro_var_name`,`adm_resource_profile`.`rpr_dti_add` AS `rpr_dti_add`,date_format(`adm_resource_profile`.`rpr_dti_add`,'%d/%m/%Y %H:%i:%s') AS `rpr_dtf_add` from (((`adm_resource_profile` join `adm_resource` on((`adm_resource_profile`.`res_int_id` = `adm_resource`.`res_int_id`))) join `adm_profile` on((`adm_resource_profile`.`pro_int_id` = `adm_profile`.`pro_int_id`))) join `adm_menu` on((`adm_resource`.`men_int_id` = `adm_menu`.`men_int_id`)));

--
-- Definition for view vw_adm_user
--
CREATE OR REPLACE
VIEW vw_adm_user
AS
	select `adm_user`.`usr_int_id` AS `usr_int_id`,`adm_user`.`pro_int_id` AS `pro_int_id`,`adm_profile`.`pro_var_name` AS `pro_var_name`,`adm_profile`.`pro_cha_type` AS `pro_cha_type`,`adm_user`.`usr_var_name` AS `usr_var_name`,`adm_user`.`usr_var_email` AS `usr_var_email`,`adm_user`.`usr_var_password` AS `usr_var_password`,`adm_user`.`usr_cha_status` AS `usr_cha_status`,(case `adm_user`.`usr_cha_status` when 'I' then 'Inactive' when 'A' then 'Active' end) AS `usr_var_status`,`adm_user`.`usr_var_token` AS `usr_var_token`,`adm_user`.`usr_dti_lastaccess` AS `usr_dti_lastaccess`,date_format(`adm_user`.`usr_dti_lastaccess`,'%m/%d/%Y %H:%i:%s') AS `usr_dtf_lastaccess`,`adm_user`.`usr_dti_add` AS `usr_dti_add`,date_format(`adm_user`.`usr_dti_add`,'%m/%d/%Y %H:%i:%s') AS `usr_dtf_add` from (`adm_user` join `adm_profile` on((`adm_user`.`pro_int_id` = `adm_profile`.`pro_int_id`)));

--
-- Definition for view vw_tax_city
--
CREATE OR REPLACE
VIEW vw_tax_city
AS
	select `tax_city`.`cit_int_id` AS `cit_int_id`,`tax_city`.`cit_var_name` AS `cit_var_name`,`tax_city`.`cit_cha_uf` AS `cit_cha_uf` from `tax_city`;

--
-- Definition for view vw_tax_costcenter
--
CREATE OR REPLACE
VIEW vw_tax_costcenter
AS
	select `tax_costcenter`.`coc_int_id` AS `coc_int_id`,`tax_costcenter`.`coc_var_key` AS `coc_var_key`,`tax_costcenter`.`coc_var_name` AS `coc_var_name` from `tax_costcenter`;

--
-- Definition for view vw_tax_costcenter_user
--
CREATE OR REPLACE
VIEW vw_tax_costcenter_user
AS
	select `tax_costcenter_user`.`cus_int_id` AS `cus_int_id`,`tax_costcenter_user`.`coc_int_id` AS `coc_int_id`,`tax_costcenter`.`coc_var_key` AS `coc_var_key`,`tax_costcenter`.`coc_var_name` AS `coc_var_name`,`tax_costcenter_user`.`usr_int_id` AS `usr_int_id`,`adm_user`.`usr_var_name` AS `usr_var_name`,`adm_user`.`usr_var_email` AS `usr_var_email`,`adm_user`.`usr_cha_status` AS `usr_cha_status` from ((`tax_costcenter_user` join `adm_user` on((`tax_costcenter_user`.`usr_int_id` = `adm_user`.`usr_int_id`))) join `tax_costcenter` on((`tax_costcenter_user`.`coc_int_id` = `tax_costcenter`.`coc_int_id`)));

--
-- Definition for view vw_tax_costcenterimport
--
CREATE OR REPLACE
VIEW vw_tax_costcenterimport
AS
	select `tax_costcenterimport`.`cci_int_id` AS `cci_int_id`,date_format(`tax_costcenterimport`.`cci_dat_date`,'%Y-%m-%d') AS `cci_dat_date`,date_format(`tax_costcenterimport`.`cci_dat_date`,'%d/%m/%Y') AS `cci_daf_date`,`tax_costcenterimport`.`cci_hou_hour` AS `cci_hou_hour`,`tax_costcenterimport`.`cci_var_filename` AS `cci_var_filename`,`tax_costcenterimport`.`cci_var_result` AS `cci_var_result`,`tax_costcenterimport`.`usr_int_id` AS `usr_int_id`,`adm_user`.`usr_var_name` AS `usr_var_name` from (`tax_costcenterimport` left join `adm_user` on((`tax_costcenterimport`.`usr_int_id` = `adm_user`.`usr_int_id`)));

--
-- Definition for view vw_tax_district
--
CREATE OR REPLACE
VIEW vw_tax_district
AS
	select `tax_district`.`dis_int_id` AS `dis_int_id`,`tax_district`.`zon_int_id` AS `zon_int_id`,`tz`.`zon_var_name` AS `zon_var_name`,`tax_district`.`cit_int_id` AS `cit_int_id`,`tc`.`cit_var_name` AS `cit_var_name`,`tc`.`cit_cha_uf` AS `cit_cha_uf`,`tax_district`.`dis_var_name` AS `dis_var_name` from ((`tax_district` join `tax_city` `tc` on((`tax_district`.`cit_int_id` = `tc`.`cit_int_id`))) join `tax_zone` `tz` on((`tax_district`.`zon_int_id` = `tz`.`zon_int_id`)));

--
-- Definition for view vw_tax_employee
--
CREATE OR REPLACE
VIEW vw_tax_employee
AS
	select `tax_employee`.`emp_int_id` AS `emp_int_id`,`tax_employee`.`coc_int_id` AS `coc_int_id`,`tax_costcenter`.`coc_var_key` AS `coc_var_key`,`tax_costcenter`.`coc_var_name` AS `coc_var_name`,`tax_employee`.`emp_var_key` AS `emp_var_key`,`tax_employee`.`emp_var_name` AS `emp_var_name`,`tax_employee`.`emp_var_address` AS `emp_var_address`,`tax_employee`.`emp_var_cep` AS `emp_var_cep`,`tax_employee`.`cit_int_id` AS `cit_int_id`,`tax_city`.`cit_var_name` AS `cit_var_name`,`tax_city`.`cit_cha_uf` AS `cit_cha_uf`,`tax_employee`.`dis_int_id` AS `dis_int_id`,`tax_district`.`dis_var_name` AS `dis_var_name` from (((`tax_employee` join `tax_costcenter` on((`tax_employee`.`coc_int_id` = `tax_costcenter`.`coc_int_id`))) left join `tax_city` on((`tax_employee`.`cit_int_id` = `tax_city`.`cit_int_id`))) left join `tax_district` on((`tax_employee`.`dis_int_id` = `tax_district`.`dis_int_id`)));

--
-- Definition for view vw_tax_employeeimport
--
CREATE OR REPLACE
VIEW vw_tax_employeeimport
AS
	select `tax_employeeimport`.`emi_int_id` AS `emi_int_id`,date_format(`tax_employeeimport`.`emi_dat_date`,'%Y-%m-%d') AS `emi_dat_date`,date_format(`tax_employeeimport`.`emi_dat_date`,'%d/%m/%Y') AS `emi_daf_date`,`tax_employeeimport`.`emi_hou_hour` AS `emi_hou_hour`,`tax_employeeimport`.`emi_var_filename` AS `emi_var_filename`,`tax_employeeimport`.`emi_var_result` AS `emi_var_result`,`tax_employeeimport`.`usr_int_id` AS `usr_int_id`,`adm_user`.`usr_var_name` AS `usr_var_name` from (`tax_employeeimport` left join `adm_user` on((`tax_employeeimport`.`usr_int_id` = `adm_user`.`usr_int_id`)));

--
-- Definition for view vw_tax_log
--
CREATE OR REPLACE
VIEW vw_tax_log
AS
	select `tax_log`.`log_int_id` AS `log_int_id`,`tax_log`.`usr_int_id` AS `usr_int_id`,`adm_user`.`usr_var_name` AS `usr_var_name`,`tax_log`.`log_cha_type` AS `log_cha_type`,(case `tax_log`.`log_cha_type` when 'AUT' then 'Criação Automática de Corrida' when 'MAN' then 'Criação Manual de Corrida' when 'TAX' then 'Escolha da Empresa de Táxi' when 'HOU' then 'Alteração do Horário da Corrida' when 'APR' then 'Aprovação da Corrida' when 'CAN' then 'Cancelamento da Corrida' when 'PAS' then 'Movimentação de Passageiros' when 'CLO' then 'Encerramento da Corrida' end) AS `log_var_type`,`tax_log`.`log_dat_date` AS `log_dat_date`,date_format(`tax_log`.`log_dat_date`,'%d/%m/%Y') AS `log_daf_date`,`tax_log`.`log_hou_hour` AS `log_hou_hour`,`tax_log`.`rid_int_id` AS `rid_int_id`,`tax_log`.`log_txt_status` AS `log_txt_status` from ((`tax_log` left join `adm_user` on((`tax_log`.`usr_int_id` = `adm_user`.`usr_int_id`))) left join `tax_ride` on((`tax_log`.`rid_int_id` = `tax_ride`.`rid_int_id`)));

--
-- Definition for view vw_tax_motive
--
CREATE OR REPLACE
VIEW vw_tax_motive
AS
	select `tax_motive`.`mot_int_id` AS `mot_int_id`,`tax_motive`.`mot_var_name` AS `mot_var_name` from `tax_motive`;

--
-- Definition for view vw_tax_request
--
CREATE OR REPLACE
VIEW vw_tax_request
AS
	select `tax_request`.`req_int_id` AS `req_int_id`,`tax_request`.`usr_int_id` AS `usr_int_id`,`adm_user`.`usr_var_name` AS `usr_var_name`,`tax_request`.`emp_int_id` AS `emp_int_id`,`tax_employee`.`emp_var_name` AS `emp_var_name`,`tax_request`.`req_var_passenger` AS `req_var_passenger`,`tax_request`.`req_cha_type` AS `req_cha_type`,(case `tax_request`.`req_cha_type` when 'SCO' then 'Origem Continental' when 'DCO' then 'Destino Continental' when 'EXT' then 'Corrida Externa' end) AS `req_var_type`,`tax_request`.`coc_int_id` AS `coc_int_id`,`tax_costcenter`.`coc_var_key` AS `coc_var_key`,`tax_costcenter`.`coc_var_name` AS `coc_var_name`,`tax_request`.`req_dat_date` AS `req_dat_date`,date_format(`tax_request`.`req_dat_date`,'%d/%m/%Y') AS `req_daf_date`,`tax_request`.`req_var_hour` AS `req_var_hour`,`tax_request`.`mot_int_id` AS `mot_int_id`,`tax_motive`.`mot_var_name` AS `mot_var_name`,`tax_request`.`req_var_addresssource` AS `req_var_addresssource`,`tax_request`.`cit_int_idsource` AS `cit_int_idsource`,`tax_citysource`.`cit_var_name` AS `cit_var_namesource`,`tax_citysource`.`cit_cha_uf` AS `cit_cha_ufsource`,`tax_request`.`dis_int_idsource` AS `dis_int_idsource`,`tax_districtsource`.`dis_var_name` AS `dis_var_namesource`,`tax_request`.`zon_int_idsource` AS `zon_int_idsource`,`tax_zonesource`.`zon_var_name` AS `zon_var_namesource`,`tax_request`.`req_var_addressdestination` AS `req_var_addressdestination`,`tax_request`.`cit_int_iddestination` AS `cit_int_iddestination`,`tax_citydestination`.`cit_var_name` AS `cit_var_namedestination`,`tax_citydestination`.`cit_cha_uf` AS `cit_cha_ufdestination`,`tax_request`.`dis_int_iddestination` AS `dis_int_iddestination`,`tax_districtdestination`.`dis_var_name` AS `dis_var_namedestination`,`tax_request`.`zon_int_iddestination` AS `zon_int_iddestination`,`tax_zonedestination`.`zon_var_name` AS `zon_var_namedestination`,`tax_request`.`req_txt_comment` AS `req_txt_comment`,`tax_request`.`req_cha_absent` AS `req_cha_absent`,(case `tax_request`.`req_cha_absent` when 'Y' then 'Yes' when 'N' then 'No' end) AS `req_var_absent`,`tax_request`.`req_cha_status` AS `req_cha_status`,(case `tax_request`.`req_cha_status` when 'PEN' then 'Pendente' when 'REJ' then 'Rejeitada' when 'APP' then 'Aprovada' when 'CLO' then 'Fechada' end) AS `req_var_status`,`tax_request`.`rid_int_id` AS `rid_int_id`,`tax_request`.`rid_int_order` AS `rid_int_order`,`tax_ride`.`rid_cha_status` AS `rid_cha_status`,`tax_ride`.`rid_hou_hour` AS `rid_hou_hour`,`tax_ride`.`rid_cha_type` AS `rid_cha_type`,(case `tax_ride`.`rid_cha_type` when 'SCO' then 'Origem Continental' when 'DCO' then 'Destino Continental' when 'EXT' then 'Corrida Externa' end) AS `rid_var_type`,(case `tax_ride`.`rid_cha_status` when 'PEN' then 'Pendente' when 'APR' then 'Aprovada' when 'CLO' then 'Fechada' end) AS `rid_var_status`,`tax_ride`.`rid_int_passengers` AS `rid_int_passengers`,`tax_request`.`req_dec_value` AS `req_dec_value`,`tax_request`.`req_dti_add` AS `req_dti_add`,date_format(`tax_request`.`req_dti_add`,'%d/%m/%Y %H:%m:%s') AS `req_dtf_add`,date_format(`tax_request`.`req_dti_add`,'%Y-%m-%d') AS `req_dat_add`,date_format(`tax_request`.`req_dti_add`,'%d/%m/%Y') AS `req_daf_add` from (((((((((((`tax_request` left join `adm_user` on((`tax_request`.`usr_int_id` = `adm_user`.`usr_int_id`))) left join `tax_employee` on((`tax_request`.`emp_int_id` = `tax_employee`.`emp_int_id`))) left join `tax_costcenter` on((`tax_request`.`coc_int_id` = `tax_costcenter`.`coc_int_id`))) left join `tax_motive` on((`tax_request`.`mot_int_id` = `tax_motive`.`mot_int_id`))) left join `tax_city` `tax_citysource` on((`tax_request`.`cit_int_idsource` = `tax_citysource`.`cit_int_id`))) left join `tax_city` `tax_citydestination` on((`tax_request`.`cit_int_iddestination` = `tax_citydestination`.`cit_int_id`))) left join `tax_district` `tax_districtsource` on((`tax_request`.`dis_int_idsource` = `tax_districtsource`.`dis_int_id`))) left join `tax_district` `tax_districtdestination` on((`tax_request`.`dis_int_iddestination` = `tax_districtdestination`.`dis_int_id`))) left join `tax_zone` `tax_zonesource` on((`tax_request`.`zon_int_idsource` = `tax_zonesource`.`zon_int_id`))) left join `tax_zone` `tax_zonedestination` on((`tax_request`.`zon_int_iddestination` = `tax_zonedestination`.`zon_int_id`))) left join `tax_ride` on((`tax_request`.`rid_int_id` = `tax_ride`.`rid_int_id`)));

--
-- Definition for view vw_tax_ride
--
CREATE OR REPLACE
VIEW vw_tax_ride
AS
	select `tax_ride`.`rid_int_id` AS `rid_int_id`,`tax_ride`.`rid_cha_type` AS `rid_cha_type`,(case `tax_ride`.`rid_cha_type` when 'SCO' then 'Origem Continental' when 'DCO' then 'Destino Continental' when 'EXT' then 'Corrida Externa' end) AS `rid_var_type`,`tax_ride`.`rid_dat_date` AS `rid_dat_date`,date_format(`tax_ride`.`rid_dat_date`,'%d/%m/%Y') AS `rid_daf_date`,`tax_ride`.`rid_hou_hour` AS `rid_hou_hour`,`tax_ride`.`rid_cha_status` AS `rid_cha_status`,(case `tax_ride`.`rid_cha_status` when 'PEN' then 'Pendente' when 'APR' then 'Aprovada' when 'CLO' then 'Fechada' end) AS `rid_var_status`,`tax_ride`.`rid_int_passengers` AS `rid_int_passengers`,`tax_ride`.`zon_int_id` AS `zon_int_id`,`tax_zone`.`zon_var_name` AS `zon_var_name`,`tax_ride`.`zon_int_idlist` AS `zon_int_idlist`,`tax_ride`.`zon_var_namelist` AS `zon_var_namelist`,`tax_ride`.`rid_txt_passengerlist` AS `rid_txt_passengerlist`,`tax_ride`.`txc_int_id` AS `txc_int_id`,`tax_taxicompany`.`txc_var_name` AS `txc_var_name`,`tax_ride`.`rid_dec_value` AS `rid_dec_value`,`tax_ride`.`rid_dec_extreme` AS `rid_dec_extreme`,`tax_ride`.`rid_hor_stopped` AS `rid_hor_stopped`,`tax_ride`.`rid_dec_stopped` AS `rid_dec_stopped`,`tax_ride`.`rid_dec_parking` AS `rid_dec_parking`,`tax_ride`.`rid_cha_transfer` AS `rid_cha_transfer`,(case `tax_ride`.`rid_cha_transfer` when 'Y' then 'Sim' when 'N' then 'Não' end) AS `rid_var_transfer`,`tax_ride`.`rid_dec_transfer` AS `rid_dec_transfer`,`tax_ride`.`rid_dec_total` AS `rid_dec_total`,`tax_ride`.`usr_int_idadd` AS `usr_int_idadd`,`adm_user_add`.`usr_var_name` AS `usr_var_nameadd`,`adm_user_add`.`usr_var_email` AS `usr_var_emailadd`,`tax_ride`.`usr_int_idarrival` AS `usr_int_idarrival`,`adm_user_arrival`.`usr_var_name` AS `usr_var_namearrival`,`adm_user_arrival`.`usr_var_email` AS `usr_var_emailarrival`,`tax_ride`.`rid_var_plate` AS `rid_var_plate`,`tax_ride`.`rid_txt_comment` AS `rid_txt_comment`,`tax_ride`.`rid_var_driver` AS `rid_var_driver`,`tax_ride`.`rid_dat_arrival` AS `rid_dat_arrival`,date_format(`tax_ride`.`rid_dat_arrival`,'%d/%m/%Y') AS `rid_daf_arrival`,`tax_ride`.`rid_hou_arrival` AS `rid_hou_arrival`,`tax_ride`.`rid_dti_add` AS `rid_dti_add`,date_format(`tax_ride`.`rid_dti_add`,'%d/%m/%Y %H:%m:%s') AS `rid_dtf_add` from ((((`tax_ride` join `tax_zone` on((`tax_ride`.`zon_int_id` = `tax_zone`.`zon_int_id`))) join `adm_user` `adm_user_add` on((`tax_ride`.`usr_int_idadd` = `adm_user_add`.`usr_int_id`))) left join `tax_taxicompany` on((`tax_ride`.`txc_int_id` = `tax_taxicompany`.`txc_int_id`))) left join `adm_user` `adm_user_arrival` on((`tax_ride`.`usr_int_idadd` = `adm_user_arrival`.`usr_int_id`)));

--
-- Definition for view vw_tax_taxcompanyitinerary
--
CREATE OR REPLACE
VIEW vw_tax_taxcompanyitinerary
AS
	select `tax_taxcompanyitinerary`.`txi_int_id` AS `txi_int_id`,`tax_taxcompanyitinerary`.`txc_int_id` AS `txc_int_id`,`tax_taxicompany`.`txc_var_name` AS `txc_var_name`,`tax_taxcompanyitinerary`.`cit_int_idsource` AS `cit_int_idsource`,`tax_city_destination`.`cit_var_name` AS `cit_var_namesource`,`tax_city_destination`.`cit_cha_uf` AS `cit_cha_ufsource`,`tax_taxcompanyitinerary`.`cit_int_iddestination` AS `cit_int_iddestination`,`tax_city_source`.`cit_var_name` AS `cit_var_namedestination`,`tax_city_source`.`cit_cha_uf` AS `cit_cha_ufdestination`,`tax_taxcompanyitinerary`.`txi_dec_value` AS `txi_dec_value` from (((`tax_taxcompanyitinerary` join `tax_taxicompany` on((`tax_taxcompanyitinerary`.`txc_int_id` = `tax_taxicompany`.`txc_int_id`))) join `tax_city` `tax_city_destination` on((`tax_taxcompanyitinerary`.`cit_int_iddestination` = `tax_city_destination`.`cit_int_id`))) join `tax_city` `tax_city_source` on((`tax_taxcompanyitinerary`.`cit_int_idsource` = `tax_city_source`.`cit_int_id`)));

--
-- Definition for view vw_tax_taxicompany
--
CREATE OR REPLACE
VIEW vw_tax_taxicompany
AS
	select `tax_taxicompany`.`txc_int_id` AS `txc_int_id`,`tax_taxicompany`.`txc_var_name` AS `txc_var_name`,`tax_taxicompany`.`txc_dec_valuestopped` AS `txc_dec_valuestopped`,`tax_taxicompany`.`txc_dec_valueextreme` AS `txc_dec_valueextreme`,`tax_taxicompany`.`txc_dec_valuetransfer` AS `txc_dec_valuetransfer` from `tax_taxicompany`;

--
-- Definition for view vw_tax_taxicompany_user
--
CREATE OR REPLACE
VIEW vw_tax_taxicompany_user
AS
	select `tax_taxicompany_user`.`tus_int_id` AS `tus_int_id`,`tax_taxicompany_user`.`txc_int_id` AS `txc_int_id`,`tax_taxicompany`.`txc_var_name` AS `txc_var_name`,`tax_taxicompany_user`.`usr_int_id` AS `usr_int_id`,`adm_user`.`usr_var_name` AS `usr_var_name`,`adm_user`.`usr_var_email` AS `usr_var_email` from ((`tax_taxicompany_user` join `adm_user` on((`tax_taxicompany_user`.`usr_int_id` = `adm_user`.`usr_int_id`))) join `tax_taxicompany` on((`tax_taxicompany_user`.`txc_int_id` = `tax_taxicompany`.`txc_int_id`)));

--
-- Definition for view vw_tax_taxicompany_zone
--
CREATE OR REPLACE
VIEW vw_tax_taxicompany_zone
AS
	select `tax_taxicompany_zone`.`tzo_int_id` AS `tzo_int_id`,`tax_taxicompany_zone`.`txc_int_id` AS `txc_int_id`,`tax_taxicompany_zone`.`zon_int_id` AS `zon_int_id`,`tax_taxicompany_zone`.`tzo_dec_value` AS `tzo_dec_value`,`tax_taxicompany`.`txc_var_name` AS `txc_var_name`,`tax_zone`.`zon_var_name` AS `zon_var_name` from ((`tax_taxicompany_zone` join `tax_taxicompany` on((`tax_taxicompany_zone`.`txc_int_id` = `tax_taxicompany`.`txc_int_id`))) join `tax_zone` on((`tax_taxicompany_zone`.`zon_int_id` = `tax_zone`.`zon_int_id`)));

--
-- Definition for view vw_tax_zone
--
CREATE OR REPLACE
VIEW vw_tax_zone
AS
	select `tax_zone`.`zon_int_id` AS `zon_int_id`,`tax_zone`.`zon_var_name` AS `zon_var_name` from `tax_zone`;

--
-- Definition for view vw_tax_zoneassociated
--
CREATE OR REPLACE
VIEW vw_tax_zoneassociated
AS
	select `tax_zoneassociated`.`zoa_int_id` AS `zoa_int_id`,`tax_zoneassociated`.`zon_int_idsource` AS `zon_int_idsource`,`tax_zone_source`.`zon_var_name` AS `zon_var_namesource`,`tax_zoneassociated`.`zon_int_iddestination` AS `zon_int_iddestination`,`tax_zone_destination`.`zon_var_name` AS `zon_var_namedestination` from ((`tax_zoneassociated` join `tax_zone` `tax_zone_destination` on((`tax_zoneassociated`.`zon_int_iddestination` = `tax_zone_destination`.`zon_int_id`))) join `tax_zone` `tax_zone_source` on((`tax_zoneassociated`.`zon_int_idsource` = `tax_zone_source`.`zon_int_id`)));

--
-- Dumping data for table adm_country
--
INSERT INTO adm_country VALUES
('AF', 'Afghanistan'),
('AX', 'Aland Islands'),
('AL', 'Albania'),
('DZ', 'Algeria'),
('AS', 'American Samoa'),
('AD', 'Andorra'),
('AO', 'Angola'),
('AI', 'Anguilla'),
('AQ', 'Antarctica'),
('AG', 'Antigua and Barbuda'),
('AR', 'Argentina'),
('AM', 'Armenia'),
('AW', 'Aruba'),
('AU', 'Australia'),
('AT', 'Austria'),
('AZ', 'Azerbaijan'),
('BS', 'Bahamas'),
('BH', 'Bahrain'),
('BD', 'Bangladesh'),
('BB', 'Barbados'),
('BY', 'Belarus'),
('BE', 'Belgium'),
('BZ', 'Belize'),
('BJ', 'Benin'),
('BM', 'Bermuda'),
('BT', 'Bhutan'),
('BO', 'Bolivia'),
('BQ', 'Bonaire, Saint Eustatius and Saba '),
('BA', 'Bosnia and Herzegovina'),
('BW', 'Botswana'),
('BV', 'Bouvet Island'),
('BR', 'Brazil'),
('IO', 'British Indian Ocean Territory'),
('VG', 'British Virgin Islands'),
('BN', 'Brunei'),
('BG', 'Bulgaria'),
('BF', 'Burkina Faso'),
('BI', 'Burundi'),
('KH', 'Cambodia'),
('CM', 'Cameroon'),
('CA', 'Canada'),
('CV', 'Cape Verde'),
('KY', 'Cayman Islands'),
('CF', 'Central African Republic'),
('TD', 'Chad'),
('CL', 'Chile'),
('CN', 'China'),
('CX', 'Christmas Island'),
('CC', 'Cocos Islands'),
('CO', 'Colombia'),
('KM', 'Comoros'),
('CK', 'Cook Islands'),
('CR', 'Costa Rica'),
('HR', 'Croatia'),
('CU', 'Cuba'),
('CW', 'Curaçao'),
('CY', 'Cyprus'),
('CZ', 'Czech Republic'),
('CD', 'Democratic Republic of the Congo'),
('DK', 'Denmark'),
('DJ', 'Djibouti'),
('DM', 'Dominica'),
('DO', 'Dominican Republic'),
('TL', 'East Timor'),
('EC', 'Ecuador'),
('EG', 'Egypt'),
('SV', 'El Salvador'),
('GQ', 'Equatorial Guinea'),
('ER', 'Eritrea'),
('EE', 'Estonia'),
('ET', 'Ethiopia'),
('FK', 'Falkland Islands'),
('FO', 'Faroe Islands'),
('FJ', 'Fiji'),
('FI', 'Finland'),
('FR', 'France'),
('GF', 'French Guiana'),
('PF', 'French Polynesia'),
('TF', 'French Southern Territories'),
('GA', 'Gabon'),
('GM', 'Gambia'),
('GE', 'Georgia'),
('DE', 'Germany'),
('GH', 'Ghana'),
('GI', 'Gibraltar'),
('GR', 'Greece'),
('GL', 'Greenland'),
('GD', 'Grenada'),
('GP', 'Guadeloupe'),
('GU', 'Guam'),
('GT', 'Guatemala'),
('GG', 'Guernsey'),
('GN', 'Guinea'),
('GW', 'Guinea-Bissau'),
('GY', 'Guyana'),
('HT', 'Haiti'),
('HM', 'Heard Island and McDonald Islands'),
('HN', 'Honduras'),
('HK', 'Hong Kong'),
('HU', 'Hungary'),
('IS', 'Iceland'),
('IN', 'India'),
('ID', 'Indonesia'),
('IR', 'Iran'),
('IQ', 'Iraq'),
('IE', 'Ireland'),
('IM', 'Isle of Man'),
('IL', 'Israel'),
('IT', 'Italy'),
('CI', 'Ivory Coast'),
('JM', 'Jamaica'),
('JP', 'Japan'),
('JE', 'Jersey'),
('JO', 'Jordan'),
('KZ', 'Kazakhstan'),
('KE', 'Kenya'),
('KI', 'Kiribati'),
('XK', 'Kosovo'),
('KW', 'Kuwait'),
('KG', 'Kyrgyzstan'),
('LA', 'Laos'),
('LV', 'Latvia'),
('LB', 'Lebanon'),
('LS', 'Lesotho'),
('LR', 'Liberia'),
('LY', 'Libya'),
('LI', 'Liechtenstein'),
('LT', 'Lithuania'),
('LU', 'Luxembourg'),
('MO', 'Macao'),
('MK', 'Macedonia'),
('MG', 'Madagascar'),
('MW', 'Malawi'),
('MY', 'Malaysia'),
('MV', 'Maldives'),
('ML', 'Mali'),
('MT', 'Malta'),
('MH', 'Marshall Islands'),
('MQ', 'Martinique'),
('MR', 'Mauritania'),
('MU', 'Mauritius'),
('YT', 'Mayotte'),
('MX', 'Mexico'),
('FM', 'Micronesia'),
('MD', 'Moldova'),
('MC', 'Monaco'),
('MN', 'Mongolia'),
('ME', 'Montenegro'),
('MS', 'Montserrat'),
('MA', 'Morocco'),
('MZ', 'Mozambique'),
('MM', 'Myanmar'),
('NA', 'Namibia'),
('NR', 'Nauru'),
('NP', 'Nepal'),
('NL', 'Netherlands'),
('AN', 'Netherlands Antilles'),
('NC', 'New Caledonia'),
('NZ', 'New Zealand'),
('NI', 'Nicaragua'),
('NE', 'Niger'),
('NG', 'Nigeria'),
('NU', 'Niue'),
('NF', 'Norfolk Island'),
('KP', 'North Korea'),
('MP', 'Northern Mariana Islands'),
('NO', 'Norway'),
('OM', 'Oman'),
('PK', 'Pakistan'),
('PW', 'Palau'),
('PS', 'Palestinian Territory'),
('PA', 'Panama'),
('PG', 'Papua New Guinea'),
('PY', 'Paraguay'),
('PE', 'Peru'),
('PH', 'Philippines'),
('PN', 'Pitcairn'),
('PL', 'Poland'),
('PT', 'Portugal'),
('PR', 'Puerto Rico'),
('QA', 'Qatar'),
('CG', 'Republic of the Congo'),
('RE', 'Reunion'),
('RO', 'Romania'),
('RU', 'Russia'),
('RW', 'Rwanda'),
('BL', 'Saint Barthélemy'),
('SH', 'Saint Helena'),
('KN', 'Saint Kitts and Nevis'),
('LC', 'Saint Lucia'),
('MF', 'Saint Martin'),
('PM', 'Saint Pierre and Miquelon'),
('VC', 'Saint Vincent and the Grenadines'),
('WS', 'Samoa'),
('SM', 'San Marino'),
('ST', 'Sao Tome and Principe'),
('SA', 'Saudi Arabia'),
('SN', 'Senegal'),
('RS', 'Serbia'),
('CS', 'Serbia and Montenegro'),
('SC', 'Seychelles'),
('SL', 'Sierra Leone'),
('SG', 'Singapore'),
('SX', 'Sint Maarten'),
('SK', 'Slovakia'),
('SI', 'Slovenia'),
('SB', 'Solomon Islands'),
('SO', 'Somalia'),
('ZA', 'South Africa'),
('GS', 'South Georgia and the South Sandwich Islands'),
('KR', 'South Korea'),
('SS', 'South Sudan'),
('ES', 'Spain'),
('LK', 'Sri Lanka'),
('SD', 'Sudan'),
('SR', 'Suriname'),
('SJ', 'Svalbard and Jan Mayen'),
('SZ', 'Swaziland'),
('SE', 'Sweden'),
('CH', 'Switzerland'),
('SY', 'Syria'),
('TW', 'Taiwan'),
('TJ', 'Tajikistan'),
('TZ', 'Tanzania'),
('TH', 'Thailand'),
('TG', 'Togo'),
('TK', 'Tokelau'),
('TO', 'Tonga'),
('TT', 'Trinidad and Tobago'),
('TN', 'Tunisia'),
('TR', 'Turkey'),
('TM', 'Turkmenistan'),
('TC', 'Turks and Caicos Islands'),
('TV', 'Tuvalu'),
('VI', 'U.S. Virgin Islands'),
('UG', 'Uganda'),
('UA', 'Ukraine'),
('AE', 'United Arab Emirates'),
('GB', 'United Kingdom'),
('US', 'United States'),
('UM', 'United States Minor Outlying Islands'),
('UY', 'Uruguay'),
('UZ', 'Uzbekistan'),
('VU', 'Vanuatu'),
('VA', 'Vatican'),
('VE', 'Venezuela'),
('VN', 'Vietnam'),
('WF', 'Wallis and Futuna'),
('EH', 'Western Sahara'),
('YE', 'Yemen'),
('ZM', 'Zambia'),
('ZW', 'Zimbabwe');

--
-- Dumping data for table adm_dependence
--

-- Table taxi.adm_dependence does not contain any data (it is empty)

--
-- Dumping data for table adm_menu
--
INSERT INTO adm_menu VALUES
(1, 'Dashboard', 'A', 'dashboard/dashboard.php', 'fa fa-home', NULL, 1, 1, '1', 'Dashboard', 'N', NULL, 'O', '2013-04-01 22:30:13'),
(3, 'Cadastros', 'A', NULL, 'fa fa-briefcase', NULL, 20, 1, '6', 'Cadastros', 'S', NULL, 'N', '2013-09-20 13:51:48'),
(5, 'Cidades', 'A', 'entries/city/city.php', NULL, NULL, 10, 2, '6.1', 'Cadastros > Cidades', 'N', 3, 'N', '2013-11-08 09:16:24'),
(6, 'Zonas', 'A', 'entries/zone/zone.php', NULL, NULL, 15, 2, '6.2', 'Cadastros > Zonas', 'N', 3, 'N', '2013-11-08 08:39:35'),
(7, 'Bairros', 'A', 'entries/district/district.php', NULL, NULL, 20, 2, '6.3', 'Cadastros > Bairros', 'N', 3, 'N', '2013-09-20 14:06:24'),
(8, 'Motivos', 'A', 'entries/motive/motive.php', NULL, NULL, 25, 2, '6.4', 'Cadastros > Motivos', 'N', 3, 'N', '2014-05-13 20:35:55'),
(9, 'Config', 'A', 'entries/motive/motive.php', 'fa fa-cogs', NULL, 400, 1, '7', 'Config', 'S', NULL, 'N', '2013-11-04 11:16:15'),
(10, 'Usuários', 'A', 'config/user/user.php', NULL, NULL, 10, 2, '7.1', 'Config > Usuários', 'N', 9, 'N', '2014-10-28 19:21:59'),
(11, 'Perfis', 'A', 'config/profile/profile.php', NULL, NULL, 100, 2, '7.6', 'Config > Perfis', 'N', 9, 'N', '2014-10-28 19:26:59'),
(12, 'Logout', 'A', 'login/logout.php', 'fa fa-power-off', NULL, 999, 1, '9', 'Logout', 'N', NULL, 'O', '2013-07-16 00:09:44'),
(19, 'Admin', 'I', NULL, NULL, NULL, 500, 1, '8', 'Admin', 'N', NULL, 'P', '2015-08-17 21:10:36'),
(20, 'Menu', 'A', 'admin/menu/menu.php', NULL, NULL, 90, 2, '7.5', 'Config > Menu', 'N', 9, 'N', '2015-08-17 21:11:13'),
(26, 'Parâmetros', 'A', 'config/parameter/parameter.php', NULL, NULL, 30, 2, '7.2', 'Config > Parâmetros', 'N', 9, 'N', '2015-09-04 11:39:55'),
(27, 'Empresas de táxi', 'A', 'entries/taxicompany/taxicompany.php', NULL, NULL, 30, 2, '6.5', 'Cadastros > Empresas de táxi', 'N', 3, 'N', '2015-11-04 14:17:33'),
(29, 'Solicitações', 'A', 'main/request/request.php', 'fa fa-file-pdf-o', NULL, 2, 1, '2', 'Solicitações', 'N', NULL, 'N', '2015-12-12 16:12:48'),
(30, 'Corridas', 'A', 'main/ride/ride.php', 'fa fa-taxi', NULL, 3, 1, '3', 'Corridas', 'S', NULL, 'N', '2015-12-23 16:53:10'),
(31, 'Relatórios', 'A', NULL, 'fa fa-area-chart', NULL, 5, 1, '5', 'Relatórios', 'S', NULL, 'N', '2015-12-23 18:24:36'),
(32, 'Rateio entre Centros de Custo', 'A', 'reports/sharing/share.php', NULL, NULL, 30, 2, '5.1', 'Relatórios > Rateio entre Centros de Custo', 'N', 31, 'N', '2015-12-23 18:27:05'),
(33, 'Faturamento de Empresas de Taxi', 'A', 'reports/billing/billing.php', NULL, NULL, 40, 2, '5.2', 'Relatórios > Faturamento de Empresas de Taxi', 'N', 31, 'N', '2015-12-23 18:27:53'),
(34, 'Empresa de Táxi', 'A', 'main/taxi/taxi.php', 'fa fa-flag-checkered', NULL, 4, 1, '4', 'Empresa de Táxi', 'N', NULL, 'N', '2016-01-05 17:44:06'),
(35, 'Encerramento de Corridas', 'A', 'main/closing/closing.php', NULL, NULL, 25, 2, '3.2', 'Corridas > Encerramento de Corridas', 'N', 30, 'N', '2016-01-06 15:21:59'),
(36, 'Corridas', 'A', 'main/ride/ride.php', NULL, NULL, 23, 2, '3.1', 'Corridas > Corridas', 'N', 30, 'N', '2016-01-06 16:29:41'),
(37, 'Importação de Centros de Custo', 'A', 'import/costcenter/costcenter.php', NULL, NULL, 70, 2, '7.3', 'Config > Importação de Centros de Custo', 'N', 9, 'N', '2016-01-20 17:30:10'),
(38, 'Importação de Funcionários', 'A', 'import/employee/employee.php', NULL, NULL, 80, 2, '7.4', 'Config > Importação de Funcionários', 'N', 9, 'N', '2016-01-21 14:36:00');

--
-- Dumping data for table adm_menu_profile
--
INSERT INTO adm_menu_profile VALUES
(1074, 4, 1, '2015-12-12 16:15:10'),
(1075, 4, 29, '2015-12-12 16:15:10'),
(1076, 4, 12, '2015-12-12 16:15:10'),
(1206, 5, 1, '2016-01-08 20:07:33'),
(1207, 5, 34, '2016-01-08 20:07:33'),
(1208, 5, 12, '2016-01-08 20:07:33'),
(1245, 8, 1, '2016-01-12 19:05:37'),
(1246, 8, 29, '2016-01-12 19:05:37'),
(1247, 8, 32, '2016-01-12 19:05:37'),
(1248, 8, 33, '2016-01-12 19:05:37'),
(1249, 8, 12, '2016-01-12 19:05:37'),
(1256, 2, 1, '2016-01-12 19:06:33'),
(1257, 2, 36, '2016-01-12 19:06:33'),
(1258, 2, 35, '2016-01-12 19:06:33'),
(1259, 2, 12, '2016-01-12 19:06:33'),
(1286, 1, 1, '2016-01-12 19:09:57'),
(1287, 1, 29, '2016-01-12 19:09:57'),
(1288, 1, 36, '2016-01-12 19:09:57'),
(1289, 1, 35, '2016-01-12 19:09:57'),
(1290, 1, 32, '2016-01-12 19:09:57'),
(1291, 1, 33, '2016-01-12 19:09:57'),
(1292, 1, 5, '2016-01-12 19:09:57'),
(1293, 1, 6, '2016-01-12 19:09:57'),
(1294, 1, 7, '2016-01-12 19:09:57'),
(1295, 1, 8, '2016-01-12 19:09:57'),
(1296, 1, 27, '2016-01-12 19:09:57'),
(1297, 1, 10, '2016-01-12 19:09:57'),
(1298, 1, 12, '2016-01-12 19:09:57'),
(1310, 7, 1, '2016-01-21 14:36:43'),
(1311, 7, 29, '2016-01-21 14:36:43'),
(1312, 7, 36, '2016-01-21 14:36:43'),
(1313, 7, 35, '2016-01-21 14:36:43'),
(1314, 7, 34, '2016-01-21 14:36:43'),
(1315, 7, 32, '2016-01-21 14:36:43'),
(1316, 7, 33, '2016-01-21 14:36:43'),
(1317, 7, 5, '2016-01-21 14:36:43'),
(1318, 7, 6, '2016-01-21 14:36:43'),
(1319, 7, 7, '2016-01-21 14:36:43'),
(1320, 7, 8, '2016-01-21 14:36:43'),
(1321, 7, 27, '2016-01-21 14:36:43'),
(1322, 7, 10, '2016-01-21 14:36:43'),
(1323, 7, 26, '2016-01-21 14:36:43'),
(1324, 7, 37, '2016-01-21 14:36:43'),
(1325, 7, 38, '2016-01-21 14:36:43'),
(1326, 7, 20, '2016-01-21 14:36:43'),
(1327, 7, 11, '2016-01-21 14:36:43'),
(1328, 7, 12, '2016-01-21 14:36:43'),
(1342, 9, 1, '2016-07-12 09:42:17'),
(1343, 9, 36, '2016-07-12 09:42:17'),
(1344, 9, 35, '2016-07-12 09:42:17'),
(1345, 9, 32, '2016-07-12 09:42:17'),
(1346, 9, 33, '2016-07-12 09:42:17'),
(1347, 9, 5, '2016-07-12 09:42:17'),
(1348, 9, 6, '2016-07-12 09:42:17'),
(1349, 9, 7, '2016-07-12 09:42:17'),
(1350, 9, 8, '2016-07-12 09:42:17'),
(1351, 9, 27, '2016-07-12 09:42:17'),
(1352, 9, 10, '2016-07-12 09:42:17'),
(1353, 9, 37, '2016-07-12 09:42:17'),
(1354, 9, 38, '2016-07-12 09:42:17'),
(1355, 9, 12, '2016-07-12 09:42:17');

--
-- Dumping data for table adm_profile
--
INSERT INTO adm_profile VALUES
(1, 'Gestor TI', 'ADM', '2013-06-07 09:18:23'),
(2, 'Operador Transportes', 'TRA', '2014-10-30 13:34:52'),
(4, 'Solicitante', 'SOL', '2014-11-28 09:05:53'),
(5, 'Empresa de Taxi', 'EMP', '2014-11-28 09:06:10'),
(7, 'Plataforma', 'Z', '2016-01-11 17:33:36'),
(8, 'Gestor de Área', 'GAR', '2016-01-12 19:05:00'),
(9, 'Gestor Transportes', 'GTR', '2016-01-12 19:09:08');

--
-- Dumping data for table adm_user
--
INSERT INTO adm_user VALUES
(13, 7, 'Salvador Torres', 'salvador@inactu.com.br', '2e6f9b0d5885b6010f9167787445617f553a735f', 'A', 'c74e97bfdb25d8ae39c281c099184d7d02f22bac', '2016-08-16 16:32:33', '2015-09-03 16:55:56'),
(21, 1, 'Vinicius Dias', 'vinicius@inactu.com.br', '2e6f9b0d5885b6010f9167787445617f553a735f', 'A', NULL, '2015-10-14 09:16:23', '2015-10-13 14:52:06'),
(36, 4, 'Solicitante', 'solicitante@inactu.com.br', '2e6f9b0d5885b6010f9167787445617f553a735f', 'A', '2e6f9b0d5885b6010f9167787445617f553a735f', '2016-08-15 14:08:14', '2016-01-08 13:47:53'),
(37, 2, 'Transporte', 'transporte@inactu.com.br', '2e6f9b0d5885b6010f9167787445617f553a735f', 'A', 'd4a58af837a55c6d1c8cc1ee0cf72693da67d590', '2016-08-02 10:44:59', '2016-01-11 13:09:24'),
(38, 5, 'Cooperelite', 'taxi@inactu.com.br', '2e6f9b0d5885b6010f9167787445617f553a735f', 'A', 'e2ef1fb85703180b4fb256973d116ce5efc6f974', '2016-02-02 09:36:18', '2016-01-11 13:09:49'),
(39, 1, 'Administrador', 'adm@inactu.com.br', '2e6f9b0d5885b6010f9167787445617f553a735f', 'A', 'd8b2f96b2b5b901c1161ca53e3fbc3ecaf946e71', '2016-05-31 09:33:34', '2016-01-11 17:40:24'),
(40, 8, 'teste', 'teste123@inactu.com.br', '848c48db55a046e2b197572dd1195af298b43c12', 'A', 'ba5b11ad9321186aa2f731fd838c69f8c83a96b1', NULL, '2016-01-12 19:56:32'),
(41, 9, 'Gestor Transportes', 'gestrans@inactu.com.br', '2e6f9b0d5885b6010f9167787445617f553a735f', 'A', '5938b6687871574983b559daaffff94e4a9f50bc', '2016-08-12 08:17:34', '2016-01-25 15:09:36'),
(42, 8, 'Gestor de Área', 'gesarea@inactu.com.br', '2e6f9b0d5885b6010f9167787445617f553a735f', 'A', 'ddffa12fa7b1d5dfedeeac9c7b68976933969427', '2016-03-31 10:49:02', '2016-01-25 15:17:48'),
(43, 2, 'Daniela Gomes', 'transporte_ext@conti.com.br', 'f7f894a4557da23f4949b77b4a4c97fd6a5e2a7c', 'A', 'd7f904cd13cce24aae970fda43b03723b07ce134', '2016-07-16 00:19:23', '2016-07-15 08:59:33'),
(44, 4, 'MICHELLE ROCHA', 'michelle.rocha_ext@conti.com.br', '4699769d66086e0594c7063df1d1d10934559361', 'A', 'bff36755b614fd5ae261e01efd157ce170fb74ba', '2016-07-20 08:39:10', '2016-07-20 08:36:49'),
(45, 1, 'Osvaldo Cezar Bacciotti', 'cezar.bacciotti@conti.com.br', '063e05613c12f981dd9c33193c957031ba94fca2', 'A', 'ca530aaf35fcf126200c6b9ba43db8db60524be2', '2016-08-12 08:31:26', '2016-08-12 08:20:38');

--
-- Dumping data for table tax_city
--
INSERT INTO tax_city VALUES
(1, 'SALVADOR', 'BA'),
(2, 'Camaçari', 'BA'),
(3, 'LAURO DE FREITAS', 'BA'),
(4, 'Monte Gordo', 'BA'),
(5, 'DIAS D AVILA', 'BA'),
(6, 'SIMOES FILHO', 'BA'),
(7, 'Feira de Santana', 'BA'),
(8, 'Alagoinhas', 'BA'),
(9, 'Amélia Rodrigues', 'BA'),
(10, 'MATA DE SAO JOAO', 'BA'),
(11, 'Pojuca', 'BA'),
(12, 'Barra de Jacuípe', 'BA'),
(13, 'CASCALHEIRA', 'BA'),
(14, 'CATÚ', 'BA'),
(15, 'ITACIMIRIM', 'BA'),
(16, 'JAUÁ', 'BA'),
(17, 'MADRE DE DEUS', 'BA'),
(18, 'PARAFUSO', 'BA'),
(19, 'PRAIA DO FORTE', 'BA'),
(20, 'SANTO AMARO', 'BA'),
(22, 'SÃO SEBASTIÃO PASSÉ', 'BA'),
(23, 'VILA DE ABRANTES', 'BA'),
(24, 'T. NOVA', 'BA'),
(25, 'AREIAS', 'BA'),
(26, 'CACHOEIRA', 'BA'),
(27, 'C. JACUIPE', 'BA'),
(28, 'GUARAJUBA', 'BA'),
(29, 'CETREL', 'BA'),
(30, 'CATU DE ABRANTES', 'BA'),
(31, 'SERRINHA', 'BA'),
(32, 'MARAGOGIPE', 'BA'),
(33, 'IMBASSAI', 'BA'),
(34, 'SÃO FRANCISCO DO CONDE', 'BA'),
(35, 'BARRA DE POJUCA', 'BA'),
(36, 'COSTA DO SAUIPE', 'BA'),
(37, 'AREMBEPE', 'BA'),
(38, 'Abrantes', 'BA'),
(39, 'BARRA DO POJUCA', 'BA'),
(40, 'Candeias', 'BA'),
(41, 'Cidade não informada', 'BA'),
(42, 'CAMACAN', 'BA');

--
-- Dumping data for table tax_costcenter
--
INSERT INTO tax_costcenter VALUES
(160, '11000', '11000 - BG - Gerencia Geral Fabrica'),
(161, '11100', '11100 - BA - Trainees'),
(162, '13000', '13000 - BA - Meio Ambiente'),
(163, '13100', '13100 - BA - Segurança do Trabalho'),
(164, '14000', '14000 - BA - Serviços Medicos'),
(165, '20000', '20000 - BA - Gerente Geral da Producao'),
(166, '20010', '20010 - BA - Afastamento'),
(167, '20100', '20100 - BA - Setor de Apoio Tecnico a Producao'),
(168, '20200', '20200 - BA - Programacao'),
(169, '20300', '20300 - BA - Tooling'),
(170, '20600', '20600 - BA - Treinamento Tecnico'),
(171, '21100', '21100 - BA - Misturacao'),
(172, '21300', '21300 - BA - Calandra (Metalica e Textil)'),
(173, '21400', '21400 - BA - Pequena Linha de Montagem'),
(174, '21500', '21500 - BA - Work-off'),
(175, '22100', '22100 - BA - Extrusao (PLT)'),
(176, '22200', '22200 - BA - Innerliner (PLT)'),
(177, '22300', '22300 - BA - Corte (PLT)'),
(178, '22500', '22500 - BA - Construcao Pneu (PLT)'),
(179, '22550', '22550 - BA - Produção de ETO (PLT)'),
(180, '22630', '22630 - BA - Vulcanizacao (PLT)'),
(181, '22650', '22650 - BA - Oficina Moldes (PLT)'),
(182, '22700', '22700 - BA - Inspecao Final (PLT)'),
(183, '22800', '22800 - BA - Paletização (PLT)'),
(184, '23100', '23100 - BA - Extrusao e Montagem (CVT)'),
(185, '23200', '23200 - BA - Innerliner (CVT)'),
(186, '23300', '23300 - BA - Corte (CVT)'),
(187, '23350', '23350 - BA - Super Assembly (CVT)'),
(188, '23400', '23400 - BA - Talao (CVT)'),
(189, '23500', '23500 - BA - Construcao de Pneus (CVT)'),
(190, '23630', '23630 - BA - Vulcanizacao (CVT)'),
(191, '23650', '23650 - BA - Oficina de Moldes'),
(192, '23700', '23700 - BA - Inspecao Final (CVT)'),
(193, '23800', '23800 - BA - Paletização (CVT)'),
(194, '31000', '31000 - BA - Ger Qualidade'),
(195, '31100', '31100 - BA - Laboratório/Sist Qual/Metrologia'),
(196, '31200', '31200 - BA - Scrap Attack'),
(197, '32100', '32100 - BA - Qualidade (PLT)'),
(198, '32200', '32200 - BA - Grader (PLT)'),
(199, '32300', '32300 - BA - Gerenciamento de Yield'),
(200, '33100', '33100 - BA - Qualidade (CVT)'),
(201, '33200', '33200 - BA - Grader (CVT)'),
(202, '41000', '41000 - BA - Gerencia Engenharia'),
(203, '41100', '41100 - BA - Automação'),
(204, '41200', '41200 - BA - Manutencao e Energia'),
(205, '41400', '41400 - BA - Manutenção Preventiva'),
(206, '41500', '41500 - BA - Casa de Energia'),
(207, '41550', '41550 - BA - Utilidades'),
(208, '41700', '41700 - BA - Manutenção Misturacao'),
(209, '41800', '41800 - BA - Manutenção Prep a Quente'),
(210, '42100', '42100 - BA - Manut Prep a Frio/Construção (PLT)'),
(211, '42200', '42200 - BA - Manutenção Vulcan/Ins FinaI (PLT)'),
(212, '43100', '43100 - BA - Manutenção CVT'),
(213, '44000', '44000 - BA - Projeto de Expansao'),
(214, '45000', '45000 - BA - Controls & Drives Corporativo'),
(215, '51000', '51000 - BA - Ger Engenharia Industrial'),
(216, '61000', '61000 - BA - Ger Ind Produto'),
(217, '61200', '61200 - BA - IP Misturacao/Calandra'),
(218, '62100', '62100 - BA - IP (PLT)'),
(219, '63100', '63100 - BA - IP (CVT)'),
(220, '71000', '71000 - BA - Gerencia Financeira'),
(221, '71200', '71200 - BA - Controladoria'),
(222, '71500', '71500 - BA - Tecnologia da Informacao'),
(223, '81000', '81000 - BA - Ger Operacoes'),
(224, '81100', '81100 - BA - Logistica'),
(225, '81500', '81500 - BA - Gestao Materiais/Compras'),
(226, '81600', '81600 - BA - Deposito Materia Prima'),
(227, '81800', '81800 - BA - Depósito de Peças'),
(228, '82200', '82200 - BA - D Prod Acab (PLT)'),
(229, '83200', '83200 - BA - D Prod Acab (CVT)'),
(230, '84000', '84000 - BA - Compras Corporativas.'),
(231, '91000', '91000 - BA - Ger. Recursos Humanos'),
(232, '91100', '91100 - BA - Recrutamento de Seleção'),
(233, '91200', '91200 - BA - Comunicação'),
(234, '91300', '91300 - BA - Treinamento'),
(235, '91400', '91400 - BA - Administracao de Pessoal'),
(236, '10100', '10100 - Sem Descrição'),
(237, '22400', '22400 - Não identificado'),
(238, '91700', '91700 - Não identificado');

--
-- Dumping data for table tax_costcenter_user
--
INSERT INTO tax_costcenter_user VALUES
(35, 236, 36),
(36, 160, 36),
(37, 161, 36),
(38, 162, 36),
(39, 163, 36),
(40, 164, 36),
(41, 165, 36),
(42, 166, 36),
(43, 167, 36),
(44, 168, 36),
(45, 169, 36),
(46, 170, 36),
(47, 171, 36),
(48, 172, 36),
(49, 173, 36),
(50, 174, 36),
(51, 175, 36),
(52, 176, 36),
(53, 177, 36),
(54, 178, 36),
(55, 179, 36),
(56, 180, 36),
(57, 181, 36),
(58, 182, 36),
(59, 183, 36),
(60, 184, 36),
(61, 185, 36),
(62, 186, 36),
(63, 187, 36),
(64, 188, 36),
(65, 189, 36),
(66, 190, 36),
(67, 191, 36),
(68, 192, 36),
(69, 193, 36),
(70, 194, 36),
(71, 195, 36),
(72, 196, 36),
(73, 197, 36),
(74, 198, 36),
(75, 199, 36),
(76, 200, 36),
(77, 201, 36),
(78, 202, 36),
(79, 203, 36),
(80, 204, 36),
(81, 205, 36),
(82, 206, 36),
(83, 207, 36),
(84, 208, 36),
(85, 209, 36),
(86, 210, 36),
(87, 211, 36),
(88, 212, 36),
(89, 213, 36),
(90, 214, 36),
(91, 215, 36),
(92, 216, 36),
(93, 217, 36),
(94, 218, 36),
(95, 219, 36),
(96, 220, 36),
(97, 221, 36),
(98, 222, 36),
(99, 223, 36),
(100, 224, 36),
(101, 225, 36),
(102, 226, 36),
(103, 227, 36),
(104, 228, 36),
(105, 229, 36),
(106, 230, 36),
(107, 231, 36),
(108, 232, 36),
(109, 233, 36),
(110, 234, 36),
(111, 235, 36),
(162, 162, 44),
(163, 236, 44),
(164, 160, 44),
(165, 161, 44),
(166, 163, 44),
(167, 164, 44),
(168, 165, 44),
(169, 166, 44),
(170, 167, 44),
(171, 168, 44),
(172, 169, 44),
(173, 170, 44),
(174, 171, 44),
(175, 172, 44),
(176, 173, 44),
(177, 174, 44),
(178, 175, 44),
(179, 176, 44),
(180, 177, 44),
(181, 178, 44),
(182, 179, 44),
(183, 180, 44),
(184, 181, 44),
(185, 182, 44),
(186, 183, 44),
(187, 184, 44),
(188, 185, 44),
(189, 186, 44),
(190, 187, 44),
(191, 188, 44),
(192, 189, 44),
(193, 190, 44),
(194, 191, 44),
(195, 192, 44),
(196, 193, 44),
(197, 194, 44),
(198, 195, 44),
(199, 196, 44),
(200, 197, 44),
(201, 198, 44),
(202, 199, 44),
(203, 200, 44),
(204, 201, 44),
(205, 202, 44),
(206, 203, 44),
(207, 204, 44),
(208, 205, 44),
(209, 206, 44),
(210, 207, 44),
(211, 208, 44),
(212, 209, 44),
(213, 210, 44),
(214, 211, 44),
(215, 212, 44),
(216, 213, 44),
(217, 214, 44),
(218, 215, 44),
(219, 216, 44),
(220, 217, 44),
(221, 218, 44),
(222, 219, 44),
(223, 220, 44),
(224, 221, 44),
(225, 222, 44),
(226, 223, 44),
(227, 224, 44),
(228, 225, 44),
(229, 226, 44),
(230, 227, 44),
(231, 228, 44),
(232, 229, 44),
(233, 230, 44),
(234, 231, 44),
(235, 232, 44),
(236, 233, 44),
(237, 234, 44),
(238, 235, 44);

--
-- Dumping data for table tax_district
--
INSERT INTO tax_district VALUES
(15, 1, 1, 'Campo Grande'),
(16, 6, 1, 'Pituba'),
(17, 1, 1, 'Canela'),
(18, 1, 1, 'Vitória'),
(19, 1, 1, 'Ondina'),
(20, 1, 1, 'Barra'),
(21, 2, 1, 'Federação'),
(22, 2, 1, 'Eng. Velho Federação'),
(23, 2, 1, 'Santa Cruz'),
(24, 2, 1, 'Rio Vermelho'),
(25, 2, 1, 'Amaralina'),
(26, 3, 1, 'Garcia'),
(27, 3, 1, 'Barris'),
(28, 3, 1, 'Tororó'),
(29, 3, 1, 'Nazaré'),
(30, 3, 1, 'Pelourinho'),
(31, 3, 1, 'Comécio'),
(32, 3, 1, 'Barbalho'),
(33, 3, 1, 'Macaúbas'),
(34, 4, 1, 'Acupe de Brotas'),
(35, 4, 1, 'Eng. Velho de Brotas'),
(36, 4, 1, 'Cosme de Farias'),
(37, 4, 1, 'Matatu'),
(38, 4, 1, 'Vila Laura'),
(39, 5, 1, 'Horto Florestal'),
(40, 5, 1, 'Candeal'),
(41, 5, 1, 'Brotas'),
(42, 5, 1, 'Parque bela vista'),
(43, 5, 1, 'Campinas de Brotas'),
(44, 6, 1, 'Itaigara'),
(45, 6, 1, 'Costa Azul'),
(46, 6, 1, 'Armação'),
(47, 6, 1, 'Stiep'),
(48, 6, 1, 'Caminho das Árvores'),
(49, 7, 1, 'Pernambués'),
(50, 7, 1, 'Narandiba'),
(51, 7, 1, 'Cabula'),
(52, 7, 1, 'Resgate'),
(53, 7, 1, 'Saboeiro'),
(54, 7, 1, 'Doron'),
(55, 7, 1, 'Cabula VI'),
(56, 7, 1, 'Engomadeira'),
(57, 7, 1, 'São Gonçalo'),
(58, 8, 1, 'Cidade Nova'),
(59, 8, 1, 'Baixa de Quintas'),
(60, 8, 1, 'IAPI'),
(61, 8, 1, 'Santa Mônica'),
(62, 8, 1, 'Pero Vaz'),
(63, 8, 1, 'Liberdade'),
(64, 9, 1, 'Boca do Rio'),
(65, 9, 1, 'Imbuí'),
(66, 9, 1, 'Pituaçu'),
(67, 9, 1, 'Patamares'),
(68, 9, 1, 'Jaguaribe'),
(69, 9, 1, 'Piatã'),
(70, 10, 1, 'Tancredo Neves'),
(71, 10, 1, 'Barreiras'),
(72, 10, 1, 'Mata Escura'),
(73, 10, 1, 'Calabetão'),
(74, 10, 1, 'Novo Horizonte'),
(75, 10, 1, 'Sussuarana'),
(76, 10, 1, 'CAB'),
(77, 11, 1, 'Lobato'),
(78, 11, 1, 'Capelinha'),
(79, 11, 1, 'Campinas de Pirajá'),
(80, 11, 1, 'São Caetano'),
(81, 11, 1, 'Fazenda Grande do Retiro'),
(82, 12, 1, 'Bonfim'),
(83, 12, 1, 'Caminho de Areia'),
(84, 12, 1, 'Boa Viagem'),
(85, 12, 1, 'Roma'),
(86, 12, 1, 'Uruguai'),
(87, 12, 1, 'Calçada'),
(88, 12, 1, 'Água de Meninos'),
(89, 13, 1, 'Praia do Flamengo'),
(90, 13, 1, 'Nova Brasília de Itapuã'),
(91, 13, 1, 'Itapuã'),
(92, 13, 1, 'Alto do Coqueirinho'),
(93, 13, 1, 'Jardim Placaford'),
(94, 13, 1, 'Stella Maris'),
(95, 14, 1, 'Areia Branca'),
(96, 14, 1, 'Barragem de Ipitanga'),
(97, 14, 1, 'São Cristóvão'),
(98, 14, 1, 'Mussurunga'),
(99, 14, 1, 'Bairro da Paz'),
(100, 25, 1, 'Vila Canária'),
(101, 25, 1, 'Sete de Abril'),
(102, 25, 1, 'Jardim Nova Esperança'),
(103, 25, 1, 'Nova Brasília'),
(104, 25, 1, 'Pau da Lima'),
(105, 25, 1, 'Canabrava'),
(106, 25, 1, 'São Marcos'),
(107, 25, 1, 'Trobogy'),
(108, 25, 1, 'Alfha Vile'),
(109, 22, 1, 'Ceasa'),
(110, 22, 1, 'Palestina'),
(111, 22, 1, 'Boca da Mata de Valeria'),
(112, 22, 1, 'Valeria'),
(113, 22, 1, 'São João do Cabrito'),
(114, 22, 1, 'Pirajá'),
(115, 22, 1, 'Porto seco Pirajá'),
(116, 22, 1, 'Marechal Rondon'),
(117, 22, 1, 'Jardim Santo Inácio'),
(118, 22, 1, 'Alto do Cabrito'),
(119, 22, 1, 'Don Avelar'),
(120, 22, 1, 'Castelo Branco'),
(121, 24, 1, 'Plataforma'),
(122, 24, 1, 'Itacaranha'),
(123, 24, 1, 'Ilha Amarela'),
(124, 24, 1, 'Alto da Terezinha'),
(125, 24, 1, 'Praia Grande'),
(126, 24, 1, 'Periperi'),
(127, 24, 1, 'Coutos'),
(128, 24, 1, 'Paripe'),
(129, 24, 1, 'São Tomé de Paripe'),
(130, 26, 1, 'Águas Claras'),
(131, 26, 1, 'Boca da Mata'),
(133, 8, 1, 'Pau Miúdo'),
(134, 3, 1, 'Barroquinha'),
(135, 5, 1, 'Engenho Velho de Brotas'),
(136, 12, 1, 'Ribeira'),
(137, 2, 1, 'Engenho Velho da Federação'),
(138, 14, 1, 'Mussurunga I'),
(139, 11, 1, 'Boa Vista de São Caetano'),
(140, 10, 1, 'Arenoso'),
(141, 22, 1, 'Boa Vista do Lobato'),
(142, 24, 1, 'Fazenda Coutos'),
(143, 12, 1, 'Massaranduba'),
(144, 8, 1, 'Caixa D''Água'),
(145, 14, 1, 'Jardim das Margaridas'),
(146, 12, 1, 'Vila Ruy Barbosa'),
(147, 8, 1, 'Curuzu'),
(148, 1, 1, 'Alto das Pombas'),
(149, 7, 1, 'Horto Bela Vista'),
(150, 27, 8, 'Alagoinhas'),
(151, 28, 9, 'Amélia Rodrigues'),
(152, 29, 25, 'AREIAS'),
(153, 30, 35, 'BARRA DE POJUCA'),
(154, 31, 12, 'Barra de Jacuipe'),
(155, 23, 27, 'C.JACUIPE'),
(156, 32, 26, 'CACHOEIRA'),
(157, 33, 2, 'Camaçari'),
(158, 34, 13, 'CASCALHEIRA'),
(159, 35, 14, 'CATU'),
(160, 36, 30, 'CATU DE ABRANTES'),
(161, 37, 29, 'CETREL'),
(162, 38, 36, 'COSTA DO SAUIPE'),
(163, 39, 5, 'DIAS D AVILA'),
(164, 40, 7, 'Feira de Santana'),
(165, 41, 28, 'GUARAJUBA'),
(166, 42, 33, 'IMBASSAI'),
(167, 43, 15, 'ITACIMIRIM'),
(168, 46, 17, 'MADRE DE DEUS'),
(169, 47, 32, 'MARAGOGIPE'),
(170, 48, 10, 'MATA DE SAO JOAO'),
(171, 66, 4, 'Monte Gordo'),
(172, 50, 18, 'PARAFUSO'),
(173, 51, 11, 'Pojuca'),
(174, 52, 19, 'PRAIA DO FORTE'),
(175, 53, 20, 'SANTO AMARO'),
(176, 54, 34, 'SÃO FRANCISCO DO CONDE'),
(177, 55, 22, 'SÃO SEBASTIÃO PASSÉ'),
(178, 56, 31, 'SERRINHA'),
(179, 57, 6, 'SIMÕES FILHO'),
(180, 58, 24, 'T. NOVA'),
(181, 59, 23, 'ABRANTES'),
(182, 59, 23, 'SEM BAIRRO'),
(183, 60, 3, 'LAURO DE FREITAS'),
(184, 61, 16, 'JAUÁ'),
(186, 33, 2, 'Gleba C'),
(187, 24, 1, 'ALTO DE COUTOS'),
(188, 3, 1, 'CENTRO'),
(189, 1, 1, 'CHAME CHAME'),
(190, 6, 1, 'CIDADE JARDIM'),
(191, 4, 1, 'DANIEL LISBOA'),
(192, 1, 1, 'DOIS DE JULHO'),
(193, 24, 1, 'ESCADA ITACARANHA'),
(194, 1, 1, 'GRAÇA'),
(195, 8, 1, 'GUARANI'),
(196, 9, 1, 'GUILHERME MARBACK'),
(197, 12, 1, 'ITAPAGIPE'),
(199, 1, 1, 'JARDIM APIPEMA'),
(200, 12, 1, 'JARDIM CRUZEIRO'),
(201, 8, 1, 'LARGO DO TANQUE'),
(202, 4, 1, 'LUIS ANSELMO'),
(203, 2, 1, 'NORDESTE'),
(204, 2, 1, 'NORDESTE DE AMARALINA'),
(205, 25, 1, 'PARALELA'),
(206, 8, 1, 'RETIRO'),
(207, 24, 1, 'RIO SENA'),
(208, 8, 1, 'SAN MARTIN'),
(209, 8, 1, 'SAN MATINS'),
(210, 4, 1, 'Santa Teresa'),
(211, 25, 1, 'São Rafael'),
(212, 25, 1, 'Trobogy paralela park'),
(213, 2, 1, 'VALE DAS PEDRINHAS'),
(214, 60, 3, 'Ipitanga'),
(215, 60, 3, 'Vila Praiana'),
(216, 60, 3, 'Vilas do Atlântico'),
(218, 60, 3, 'Pitangueiras'),
(219, 60, 3, 'Buraquinho'),
(220, 60, 3, 'Centro'),
(221, 60, 3, 'Recreio Ipitanga'),
(222, 60, 3, 'Itinga'),
(223, 60, 3, 'Portão'),
(224, 60, 3, 'Caixa D''Água'),
(225, 60, 3, 'Caji'),
(226, 60, 3, 'Vida Nova'),
(227, 60, 3, 'Quingoma'),
(228, 60, 3, 'Parque São Paulo'),
(229, 60, 3, 'Capelão'),
(230, 60, 3, 'Jambeiro'),
(231, 60, 3, 'Areia Branca'),
(232, 60, 3, 'Barro Duro'),
(233, 39, 5, 'Jacumirim'),
(234, 39, 5, 'Concórdia'),
(236, 39, 5, 'Urbis'),
(237, 39, 5, 'Genaro'),
(238, 39, 5, 'BOSQUE'),
(239, 39, 5, 'BOSQUE DIAS D AVILA'),
(240, 39, 5, 'Bosque de Dias D Avila'),
(241, 39, 5, 'CRISTO REI'),
(242, 39, 5, 'ENTRONCAMENTO'),
(243, 39, 5, 'IMBASSAY'),
(244, 39, 5, 'JARDIM ALVORADA'),
(245, 39, 5, 'MATA DE SAO JOAO'),
(246, 39, 5, 'NOVA DIAS D AVILA'),
(247, 39, 5, 'SANTA HELENA'),
(248, 39, 5, 'SANTA TEREZINHA'),
(251, 33, 2, 'PHOC III'),
(255, 33, 2, 'GLEBA H'),
(256, 33, 2, 'BARRA DE JACUIPE'),
(257, 33, 2, 'DOIS DE JULHO'),
(259, 33, 2, 'ALTO TRIANGULO'),
(260, 33, 2, 'Natal'),
(261, 33, 2, 'DOS 46'),
(262, 33, 2, 'Bairro Novo'),
(263, 33, 2, 'AREIAS'),
(264, 33, 2, 'AREMBEPE'),
(265, 33, 2, 'BARRA DE POJUCA'),
(266, 33, 2, 'BELA VISTA INOCOOP'),
(267, 33, 2, 'Inocoop'),
(269, 33, 2, 'BURI SATUBA'),
(271, 33, 2, 'BURIS DE ABRANTES'),
(274, 33, 2, 'VILA DE ABRANTES'),
(276, 33, 2, 'MONTE GORDO'),
(277, 33, 2, 'PARAFUSO'),
(278, 33, 2, 'CETREL'),
(279, 33, 2, 'COQUEIRO DE AREMBEPE'),
(280, 33, 2, 'ESPAÇO ALPHA'),
(281, 33, 2, 'Verdes Horizontes'),
(282, 33, 2, 'PARQUE VERDE I'),
(283, 5, 1, 'ENGENHO VELHO BROTAS'),
(284, 33, 2, 'BUSCA VIDA'),
(285, 60, 3, 'Vila Centenário'),
(286, 60, 3, 'VILAS DO ATALNTICO'),
(289, 33, 2, 'VERDE HORIZONTE'),
(291, 33, 2, 'PARQUE VERDE II'),
(292, 33, 2, 'RUA NOVA'),
(295, 39, 5, 'CENTRO'),
(296, 40, 7, 'Rua Nova'),
(297, 57, 6, 'CRISTO REI'),
(298, 33, 2, 'NOVO HORIZONTE'),
(300, 27, 8, 'Silva Jardim'),
(301, 60, 3, 'Jardim Jockey Clube'),
(302, 33, 2, 'PIACAVEIRA'),
(303, 57, 6, 'CENTRO'),
(306, 10, 1, 'TANCREDO NEVES'),
(308, 57, 6, 'km 25'),
(309, 57, 6, 'NOVA VITORIA'),
(311, 33, 2, 'parque das mangabas'),
(312, 33, 2, 'Limoeiro'),
(313, 48, 10, 'CENTRO'),
(314, 3, 1, 'GRAVATA'),
(315, 33, 2, 'NOVA VITORIA'),
(317, 33, 2, 'PRAIA  DE AREIAS'),
(318, 33, 2, 'PQ SATELITE'),
(319, 33, 2, 'BARRA DO JACUIPE'),
(321, 33, 2, 'PARQUE FLORESTAL'),
(323, 33, 2, 'CENTRO VILLA DE ABRANTES'),
(324, 22, 1, 'DOM AVELAR'),
(325, 33, 2, '2 DE JULHO'),
(326, 33, 2, 'ALAGOINHAS VELHA'),
(327, 33, 2, 'Bairro do Natal'),
(328, 33, 2, 'BARRA DO POJUCA'),
(330, 33, 2, 'BOMBA GLEBA B'),
(331, 33, 2, 'BOMBA NATAL'),
(334, 33, 2, 'CATU DE ABRANTES / VILA DE ABRANTES'),
(337, 33, 2, 'CENTRO DE MONTE GORDO'),
(338, 33, 2, 'CENTRO PARAFUSO'),
(339, 33, 2, 'COLOMBIA BOA UNIAO'),
(340, 33, 2, 'COND RES CAMACARI LIFE'),
(341, 33, 2, 'DOM AVELAR'),
(342, 33, 2, 'FICAM'),
(343, 33, 2, 'FICAM 2'),
(344, 33, 2, 'FICAM II'),
(347, 33, 2, 'INDUSTRIAL URBANA'),
(349, 33, 2, 'JARDIM BRASILIA'),
(352, 33, 2, 'JARDIM LIMOEIRO PARAFUSO'),
(353, 33, 2, 'JAUA VILA DE ABRANTES'),
(354, 33, 2, 'JAUA/ VILA DE ABRANTES'),
(355, 33, 2, 'JD LIMOEIRO'),
(356, 33, 2, 'LOT COQ AREMBEPE'),
(357, 33, 2, 'Loteamento Parque Verde I'),
(358, 33, 2, 'MACHADINHO'),
(359, 33, 2, 'MANGUEIRAL'),
(360, 33, 2, 'N VITORIA'),
(361, 33, 2, 'NOVA CONQUISTA'),
(362, 33, 2, 'PARQIE DAS PALMEIRAS'),
(363, 33, 2, 'PARQUE SATELITE'),
(364, 33, 2, 'PARQUE VERDE 2'),
(365, 33, 2, 'Parque Verde III'),
(366, 33, 2, 'Polo Petroquímico'),
(367, 33, 2, 'PQ VERDE'),
(368, 33, 2, 'PQ VERDE II'),
(369, 33, 2, 'PRAIA DE BALEIAS'),
(370, 33, 2, 'SANTO ANTONIO'),
(371, 33, 2, 'SERRA VERDE'),
(372, 33, 2, 'SETOR INDUSTRIAL URBANO PONTO CERTO'),
(373, 33, 2, 'TANCREDO NEVES'),
(376, 33, 2, 'URBIS'),
(377, 33, 2, 'VILA GOIANIA'),
(378, 27, 8, 'JD PEDRO BRAGA'),
(379, 27, 8, 'Mangalo'),
(380, 27, 8, 'Alagoinhas Velha'),
(381, 28, 9, 'CENTRO'),
(382, 28, 9, 'PATRONATO'),
(383, 40, 7, 'Muchila'),
(384, 40, 7, 'Jardim Cruzeiro'),
(385, 66, 4, 'Centro'),
(386, 40, 7, 'Santa Monica'),
(388, 59, 38, 'LAURO FREITAS'),
(389, 59, 38, 'BUSCA VIDA'),
(390, 57, 6, 'LOTEAMENTO LUIZ EDUARDO MAGALHAES'),
(391, 57, 6, 'ARATU'),
(392, 57, 6, 'CEBTRO'),
(393, 57, 6, 'CENTRO ARATU'),
(394, 57, 6, 'CENTRO INDUSTIAL DE ARATU'),
(395, 57, 6, 'CERAMICA'),
(396, 57, 6, 'CEZAR BORGES'),
(397, 57, 6, 'CIA'),
(398, 57, 6, 'CIA 1'),
(399, 57, 6, 'CIA 2'),
(400, 57, 6, 'CIA I'),
(403, 57, 6, 'Cia II'),
(404, 57, 6, 'CIA II Q 7'),
(405, 57, 6, 'CIA SUL'),
(406, 57, 6, 'COMPANHIA I'),
(407, 57, 6, 'CONJ SIMOES FILHO I'),
(408, 57, 6, 'COVA DA GIA'),
(409, 57, 6, 'CRISTO REY'),
(410, 57, 6, 'EUCALIPTO'),
(411, 57, 6, 'GOES CALMON'),
(412, 57, 6, 'GOES CALMON - SIMOES FILHO I'),
(413, 57, 6, 'GOV CESAR BORGES'),
(414, 57, 6, 'GOVERNADOR CESAR BORGES'),
(415, 57, 6, 'ILHA DE SAO JOAO'),
(416, 57, 6, 'JARDIM DOURADO'),
(417, 57, 6, 'JARDIM ELDORADO'),
(418, 57, 6, 'JARDINS ELDORADO'),
(420, 57, 6, 'KM 30'),
(421, 57, 6, 'LUIS EDUARDO MANGABEIRA'),
(424, 57, 6, 'NOVA PITANGA'),
(425, 57, 6, 'PALMARES'),
(426, 57, 6, 'PARQUE CONTINENTAL'),
(427, 57, 6, 'PAULO SOUTO'),
(428, 57, 6, 'PITANGUINHA'),
(429, 57, 6, 'PITUBA'),
(430, 57, 6, 'PONTO DE PARADA'),
(432, 57, 6, 'Ponto Parada'),
(433, 57, 6, 'PQ CONTINENTAL'),
(434, 57, 6, 'REC EUCALIPTOS'),
(435, 57, 6, 'ROD CANDEIAS'),
(436, 57, 6, 'SIMOES FILHO 1'),
(437, 57, 6, 'SIMOES FILHO I'),
(438, 57, 6, 'VIDA NOVA'),
(439, 57, 6, 'VIDA NOVA - CIA'),
(442, 59, 38, 'Vila de Abrantes'),
(443, 59, 38, 'VILAS DE ABRANTES'),
(445, 62, 37, 'Arembepe'),
(446, 62, 37, 'CAMINHO MAR III'),
(447, 33, 2, 'ABRANTES'),
(448, 33, 2, 'ALTO DA CRUZ'),
(449, 33, 2, 'Bairro dos 46'),
(452, 33, 2, 'BOMBA'),
(454, 33, 2, 'CAMACARI DE DENTRO'),
(455, 33, 2, 'CATU DE ABRANTES'),
(456, 33, 2, 'CENTRO'),
(459, 33, 2, 'G E'),
(460, 33, 2, 'Gleba A'),
(461, 33, 2, 'Gleba B'),
(463, 33, 2, 'Gleba E'),
(464, 33, 2, 'Gravatá'),
(466, 33, 2, 'JAEDIM DAS MARGARIDAS'),
(467, 33, 2, 'Jardim Limoeiro'),
(468, 33, 2, 'Jaua'),
(469, 33, 2, 'Lama Preta'),
(472, 33, 2, 'Parque Verde'),
(474, 33, 2, 'Phoc I'),
(475, 33, 2, 'Phoc II'),
(476, 33, 2, 'PONTO CERTO'),
(477, 33, 2, 'Setor Industrial Urbano'),
(478, 33, 2, 'SETOR INDUSTRIAL URBANO - PONTO CERTO'),
(479, 33, 2, 'Triângulo'),
(482, 33, 2, 'VILAS DE ABRANTES'),
(483, 65, 39, 'Barra de Pojuca'),
(484, 39, 5, 'CENTRO DIAS D AVILA'),
(485, 39, 5, 'ENTRONCAMENTO DIAS DAVILA'),
(486, 39, 5, 'GARCIA DAVILA'),
(487, 33, 2, 'BOMBA - NATAL'),
(488, 33, 2, 'JARDIM LIMOEIRO / PARAFUSO'),
(489, 33, 2, 'JARDIM LIMOEIRO - PARAFUSO'),
(490, 39, 5, 'DIAS D''ÁVILA'),
(491, 60, 3, 'ARAQUI'),
(492, 60, 3, 'AREMBEPE'),
(493, 60, 3, 'CONDOMINIO VILAS DO BOSQUE'),
(494, 60, 3, 'ESTRADA DO COCO'),
(495, 60, 3, 'JARDIM JOVKEI'),
(496, 60, 3, 'MIRAGEM'),
(497, 60, 3, 'PITANGUEIRA'),
(498, 60, 3, 'PORTAO/ LAURO DE FREITAS'),
(499, 60, 3, 'PRAIA DE IPITANGA'),
(500, 48, 10, 'AMADO BAHIA'),
(501, 48, 10, 'CABORE'),
(502, 66, 4, 'BAIRRO NOVO'),
(503, 66, 4, 'DOIS DE JULHO'),
(504, 51, 11, 'LOS ANGELES'),
(505, 51, 11, 'CENTRO'),
(506, 51, 11, 'CAJAZEIRA'),
(507, 26, 1, 'Cajazeiras 10'),
(508, 26, 1, 'CAJAZEIRAS IV'),
(509, 26, 1, 'CAJAZEIRAS VI'),
(510, 26, 1, 'Cajazeiras VIII'),
(511, 26, 1, 'Cazajeira 4'),
(512, 24, 1, 'FAZENDA COUTOS I'),
(513, 24, 1, 'FAZENDA COUTOS III'),
(514, 11, 1, 'FAZENDA GRANDE I'),
(515, 11, 1, 'FAZENDA GRANDE IV'),
(516, 26, 1, 'CAJAZEIRA'),
(517, 24, 1, 'Vista Alegre'),
(518, 4, 1, 'Matatu de Brotas'),
(519, 11, 1, 'Lobato II'),
(520, 14, 1, 'mussurunga II'),
(521, 5, 1, 'PQ BELA VISTA'),
(522, 27, 8, 'JARDIM PETROLAX'),
(523, 1, 1, 'PONTO CERTO'),
(524, 1, 1, 'JARDIM PETROLAR'),
(527, 26, 1, 'Cajazeiras'),
(528, 33, 2, 'CENTRO MONTE GORDO'),
(529, 33, 2, 'NOVA NITORIA'),
(530, 33, 2, 'PAIÇAVEIRA'),
(531, 33, 2, 'PARQUE VERDE  II'),
(534, 33, 2, 'VILA DE BRANTES'),
(535, 33, 2, 'VILA DE AABRANTES'),
(536, 39, 5, 'NOVA DIAS DAVILA'),
(537, 39, 5, 'NOVO DIAS DAVILA'),
(538, 57, 6, 'EUCALIPTOS'),
(539, 57, 6, 'MAPELE'),
(540, 68, 40, 'Candeias'),
(609, 69, 41, 'NOVA VITORIA'),
(610, 69, 41, 'VASCO DA GAMA'),
(611, 69, 41, 'PRAIA DE AREIAS'),
(612, 69, 41, 'PARQUE DAS PALMEIRAS'),
(613, 69, 41, 'CENTRO - PARAFUSO'),
(614, 69, 41, 'JAUA'),
(615, 69, 41, 'ABRAHAO ALAB'),
(616, 69, 41, 'JAGAURIPE I'),
(617, 69, 41, 'BELA VISTA DE SAOCAETANO'),
(618, 69, 41, 'KM25'),
(619, 69, 41, 'GRANJAS RURAIS'),
(620, 69, 41, ' LOTEAMENTO LUIZ EDUARDO MAGALHAES'),
(621, 69, 41, 'ITINGA'),
(622, 69, 41, 'JAGUARIPE I'),
(623, 69, 41, 'BOA VISTA SAO CAETANO'),
(624, 69, 41, 'VILA RUI BARBOSA'),
(625, 69, 41, 'SAN MARTINS');

--
-- Dumping data for table tax_motive
--
INSERT INTO tax_motive VALUES
(1, 'Perdeu o transporte regular'),
(2, 'Hora Extra'),
(3, 'Situação Excepcional'),
(4, 'Desligamento'),
(5, 'Eventos'),
(6, 'Extra'),
(7, 'Treinamento'),
(8, 'Aeroporto - Fábrica'),
(9, 'Fábrica - Aeroporto'),
(10, 'Aeroporto - Residência'),
(11, 'Residência - Aeroporto'),
(12, 'Trânsito Documtos / Materiais'),
(13, 'Reunião'),
(14, 'Visita'),
(15, 'Serviço Médico'),
(16, 'Saída Antecipada');

--
-- Dumping data for table tax_request
--

-- Table taxi.tax_request does not contain any data (it is empty)

--
-- Dumping data for table tax_taxcompanyitinerary
--
INSERT INTO tax_taxcompanyitinerary VALUES
(181, 16, 2, 1, 70.62),
(182, 16, 2, 2, 25.89),
(183, 16, 2, 8, 99.34),
(184, 16, 1, 33, 110.52),
(185, 16, 1, 34, 84.80),
(186, 16, 1, 5, 78.86),
(187, 16, 1, 4, 98.87),
(188, 16, 1, 16, 81.92),
(189, 16, 1, 8, 135.24),
(190, 16, 1, 35, 100.75),
(191, 16, 1, 38, 64.74),
(192, 16, 1, 7, 156.54),
(193, 16, 1, 3, 55.67),
(194, 16, 1, 1, 54.38),
(195, 16, 1, 37, 93.92),
(196, 16, 1, 19, 83.46),
(197, 16, 1, 36, 121.55),
(198, 16, 6, 7, 93.92),
(199, 16, 6, 16, 75.80),
(200, 16, 6, 6, 35.31),
(201, 16, 6, 38, 47.08),
(202, 16, 6, 1, 54.38),
(203, 16, 6, 5, 64.15),
(204, 16, 3, 30, 47.08),
(205, 16, 3, 3, 46.01),
(206, 16, 3, 6, 50.31),
(207, 16, 3, 37, 64.74),
(208, 16, 3, 5, 70.62),
(209, 16, 13, 38, 43.25),
(210, 16, 5, 37, 60.20),
(211, 16, 19, 19, 25.89);

--
-- Dumping data for table tax_taxicompany
--
INSERT INTO tax_taxicompany VALUES
(16, 'Cooperelite', 12.00, 50.00, 70.62);

--
-- Dumping data for table tax_zone
--
INSERT INTO tax_zone VALUES
(1, 'Zona 1'),
(2, 'Zona 2'),
(3, 'Zona 3'),
(4, 'Zona 4'),
(5, 'Zona 5'),
(6, 'Zona 6'),
(7, 'Zona 7'),
(8, 'Zona 8'),
(9, 'Zona 9'),
(10, 'Zona 10'),
(11, 'Zona 11'),
(12, 'Zona 12'),
(13, 'Zona 13'),
(14, 'Zona 14'),
(22, 'Zona 16'),
(23, 'Zona 24'),
(24, 'Zona 17'),
(25, 'Zona 15'),
(26, 'Zona 18'),
(27, 'Zona 19'),
(28, 'Zona 20'),
(29, 'Zona 21'),
(30, 'Zona 22'),
(31, 'Zona 23'),
(32, 'Zona 25'),
(33, 'Zona 26'),
(34, 'Zona 27'),
(35, 'Zona 28'),
(36, 'Zona 29'),
(37, 'Zona 30'),
(38, 'Zona 31'),
(39, 'Zona 32'),
(40, 'Zona 33'),
(41, 'Zona 34'),
(42, 'Zona 35'),
(43, 'Zona 36'),
(44, 'Zona 37'),
(45, 'Zona 38'),
(46, 'Zona 39'),
(47, 'Zona 40'),
(48, 'Zona 41'),
(49, 'Zona 42'),
(50, 'Zona 43'),
(51, 'Zona 44'),
(52, 'Zona 45'),
(53, 'Zona 46'),
(54, 'Zona 47'),
(55, 'Zona 48'),
(56, 'Zona 49'),
(57, 'Zona 50'),
(58, 'Zona 51'),
(59, 'Zona 52'),
(60, 'Zona 53'),
(61, 'Zona 54'),
(62, 'Zona 55'),
(65, 'Zona 56'),
(66, 'Zona 57'),
(68, 'Zona 58'),
(69, 'Zona não informada');

--
-- Dumping data for table adm_resource
--

-- Table taxi.adm_resource does not contain any data (it is empty)

--
-- Dumping data for table adm_zone
--

-- Table taxi.adm_zone does not contain any data (it is empty)

--
-- Dumping data for table tax_costcenterimport
--
INSERT INTO tax_costcenterimport VALUES
(1, '2016-02-24', '00:00', 'CENTRO_CUSTO_TESTE_II-virgula.csv', 'Importação com Sucesso', 13),
(2, '2016-02-24', NULL, 'CENTRO_CUSTO_TESTE_II-virgula.csv', 'Importação com Sucesso', 13),
(3, '2016-02-24', NULL, 'CENTRO_CUSTO_TESTE_II-virgula.csv', 'Importação com Sucesso', 13),
(4, '2016-02-25', NULL, 'CENTRO_CUSTO_TESTE_II-virgula.csv', 'Importação com Sucesso', 13),
(5, '2016-02-25', '14:53', 'CENTRO_CUSTO_TESTE_II-virgula.csv', 'Importação com Sucesso', 13),
(6, '2016-06-01', '11:40', 'CENTRO_CUSTO_TESTE.csv', 'Importação com Sucesso', 41),
(7, '2016-07-15', '12:01', 'CENTRO_CUSTO_TESTE.csv', 'Importação com Sucesso', 13),
(8, '2016-07-15', '12:05', 'CENTRO_CUSTO_TESTE.csv', 'Falha na importação na linha 2<br>', 13),
(9, '2016-07-15', '12:06', 'CENTRO_CUSTO_TESTE.csv', 'Importação com Sucesso', 13),
(10, '2016-07-15', '12:06', 'CENTRO_CUSTO_TESTE.csv', 'Importação com Sucesso', 13);

--
-- Dumping data for table tax_employee
--
INSERT INTO tax_employee VALUES
(27705, 236, '600797', 'ALINE CIRILO SOBREIRA DA SILVA', 'RUA ABARE', '42800000', 2, 186),
(27706, 236, '691325', 'GIULIANA DE ALCANTARA SANTOS', 'RUA Esperanto', '40391232', 1, 80),
(27707, 236, '603960', 'DAVID FREITAS GOES', 'RUA TIBURCIO JOAQUIM DE CASTRO APTO 002', '41770800', 1, 47),
(27708, 236, '603827', 'FERNANDA DELA CELA ARGOLO', 'R ARISTON BERTINO DE CARVALHO', '40285360', 1, 41),
(27709, 236, '600913', 'LIVIA MARIA MORAES DE SANT ANA', 'RUA DAS IRIS ALPHAVILLE', '41730101', 1, 205),
(27710, 236, '601104', 'MARIA CAROLINA BARRETO E BARRETO', 'AV PRINCESA ISABEL', '40130030', 1, 20),
(27711, 236, '601511', 'NATALIA SANTOS BASILIO DE BRITO', 'R RENATO DE MENEZES BERENGUER', '41830315', 1, 16),
(27712, 236, '601959', 'RAQUEL DE FREITAS TRECE', 'AV PROFESSOR MAGALHAES NETO', '41810011', 1, 16),
(27713, 236, '601509', 'TULIO PINHEIRO BACELAR SILVA', 'RUA DAS PATATIVAS', '41720100', 1, 196),
(27714, 160, '691347', 'ICARO ARAGAO CERQUEIRA', 'Rua Queira Deus Cond. Chacara do Rio Joanes', '42700000', 3, 223),
(27715, 160, '603958', 'BRUNO PERRONI VITA', 'Avenida Sete de Setembro', '40130000', 1, 20),
(27716, 160, '601517', 'ERICA BARBOSA BARRETO', 'AL PRAIA DE GUARATUBA', '41600270', 1, 94),
(27717, 160, '600006', 'SERGIO CARLOS ROCHA', 'AL PRAIA PRAIA DE CARATINGUI', '41600060', 1, 94),
(27718, 161, '604056', 'LAIS BARBOSA CASTEJON MAIA', 'RUA MENANDRO MENAHIM', '42700000', 3, 214),
(27719, 161, '604139', 'LUIZA SENA MORENO FISHER', 'Rua Waldemar Falcão', '40295010', 1, 39),
(27720, 162, '603501', 'VANESSA DOS SANTOS DE SOUZA', 'TV JARDIM BRASILIA', '42806140', 2, 454),
(27721, 162, '601995', 'ROSEANE DA CRUZ SANTOS', 'QUINTA TV DA SUISSA', '42850000', 5, 236),
(27722, 162, '691341', 'GABRIELLA FREITAS SANTOS MENEZES RIBEIRO', 'Rua Augusto Frederico Schmith', '40140390', 1, 20),
(27723, 162, '600429', 'EDSON ROCHA SILVA', 'EST DO COQUEIRO GRANDE', '41343855', 1, 527),
(27724, 163, '691344', 'EVELLY KIMBERLY SOUSA ANTUNES', 'RUA PATAMARES', '42802540', 2, 281),
(27725, 163, '601841', 'LAIRANE GONCALVES DANTAS DA SILVA', 'R ITACIMIRIM', '42801010', 2, 267),
(27726, 163, '601944', 'MICHELLE RODRIGUES NASCIMENTO', 'TV ANTONIO FELIX MARTINS', '42803170', 2, 282),
(27727, 163, '604248', 'SANDRO RODRIGUES SANTANA RIBEIRO', 'Cond. Portal de Arembepe', '42835000', 37, 445),
(27728, 163, '603808', 'MARCIO ANDRADE GOMES ESPINOLA BRITTO', 'Rua Doutor Rômulo Serrano', '40220005', 1, 283),
(27729, 163, '601159', 'CARLOS CLEMENTE DE CAMPOS FILHO', 'Edith Mendes da Gama e Abreu', '41815010', 1, 44),
(27730, 163, '600662', 'FABIO SOUZA DA SILVA', 'ALA BOSQUE DO AEROPORTO', '41350540', 1, 103),
(27731, 163, '603394', 'MARCOS FELIX BEZERRA', 'TV REGIS PACHECO', '40450060', 1, 86),
(27732, 163, '603099', 'SIDNEY PAULO DUARTE SANTOS', 'Afrânio Peixoto', '40720690', 1, 125),
(27733, 165, '600045', 'FABIO GUALBERTO ANDRADE SILVA', 'RUA MARIA EMILIA I', '40807020', 2, 454),
(27734, 165, '603779', 'GESSICA ANANDA NEVES DOS SANTOS FONSECA', 'AV SUL', '42801070', 2, 267),
(27735, 165, '603330', 'LUIZ EDUARDO DA COSTA FERNANDES', 'DO COCO KM 8 5', '42840000', 2, 284),
(27736, 165, '600258', 'NELSON AFONSO DE CARVALHO FILHO', 'RUA PADRE CAMILO TORREND', '42800000', 5, 295),
(27737, 165, '604199', 'ANGELO TORCHIO FILHO', 'Av. Santos Dumont Cond. Marina Riverside Estrada do Coco, Km 7,5', '42700000', 3, 285),
(27738, 165, '603770', 'FERNANDO JOAQUIM BASTOS CABRAL', 'AVENIDALUIZ TARQUINIO PONTE', '42700000', 3, 286),
(27739, 165, '601994', 'SERGIO VIANA', 'RUA EDGARD B FRANCO QUADRA T LOTE 16', '42700000', 3, 183),
(27740, 165, '600024', 'ANAILTON COSTA DOS SANTOS', 'Mucambo', '41745037', 1, 107),
(27741, 165, '603123', 'ANTONIO MIZAEL DO CARMO SANTOS JUNIOR', 'HILTON RODRIGUES', '41830630', 1, 44),
(27742, 165, '600042', 'JEANDERSON ALMEIDA AMORIM', 'Poetisa Cora Coralina', '40265070', 1, 210),
(27743, 166, '601464', 'ANDRE LUIZ FERREIRA DE SOUZA', 'R NOVA ESPERANCA  SN', '42800650', 2, 257),
(27744, 166, '602061', 'CRISTIANE COUTINHO DA SILVA', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(27745, 166, '603559', 'DANIEL DE JESUS DAMACENO', 'RUA PAGE', '42804740', 2, 251),
(27746, 166, '600616', 'EDMAR DIAS MEDEIROS LIMA', 'RUA MARTE I', '42809700', 2, 464),
(27747, 166, '603239', 'ERINALDO DE JESUS CARVALHO', 'RUAS DOS CONTINENTES', '42802570', 2, 289),
(27748, 166, '601761', 'EVANILDO ALVES DOS SANTOS', 'RUA ANGICO DE CIMA', '42840000', 2, 277),
(27749, 166, '601145', 'FABIO MOREIRA DA CRUZ', 'AV RIO BANDEIRA', '42807171', 2, 464),
(27750, 166, '603023', 'HEBERT DE OLIVEIRA CARVALHO', 'Industrial Urbana', '42802570', 2, 477),
(27751, 166, '600654', 'JADIELSON JOSE DA SILVA', 'R EIXO URBANO CENTRAL', '42800110', 2, 456),
(27752, 166, '600454', 'JOTEMILDO MARIO R CERQUEIRA DA SILVA', 'CAMINHO RIO TOCANTINS', '42800000', 2, 186),
(27753, 166, '600509', 'KLEBER WILLIAM DOS SANTOS', 'Seis do Canal', '42807560', 2, 460),
(27754, 166, '603034', 'LUCAS DA SILVA CONCEICAO', 'R JARDIM BRASILIA', '42806200', 2, 454),
(27755, 166, '601471', 'MERCIA SENNA PEREIRA DE ALMEIDA', 'RUA DO MORRINHO', '42800000', 2, 469),
(27756, 166, '600819', 'MILTON GONCALVES LIMA JUNIOR', 'ESTRADA DO COCO', '42835000', 2, 264),
(27757, 166, '601887', 'NADIEJE SANTOS ARAUJO DAS NEVES', 'R QUINTA LIGACAO', '42809210', 2, 461),
(27758, 166, '600292', 'RAIMUNDO PEREIRA DE ARAUJO', 'RUA PILOTO', '42800970', 2, 454),
(27759, 166, '600274', 'REINALDO OLIVEIRA PEREIRA', 'RUA LUIZ CAETANO', '42800000', 2, 291),
(27760, 166, '601250', 'JIVANILDO SOUZA DOS ANJOS', 'RUA BOTAFOGO', '42850000', 5, 243),
(27761, 166, '603583', 'JAILSON JESUS OLIVEIRA', 'RUA HERACLITO DE CARVALHO', '44149999', 7, 296),
(27762, 166, '601023', 'EDER CRISOSTOMO MENEZES DOS SANTOS', 'RUA MANOEL DOS SANTOS', '42700000', 3, 220),
(27763, 166, '603604', 'AIRAN MELO DOS SANTOS', 'Cascata', '40713845', 1, 122),
(27764, 166, '603600', 'DILEINE XAVIER DE OLIVEIRA', 'RUA DAS ROSAS', '42800000', 1, 523),
(27765, 166, '603458', 'MARCELO MACIEL DOS SANTOS', 'NOVA BRASILIA', '40710590', 1, 121),
(27766, 166, '603379', 'MARCOS FERREIRA DA PAIXAO', 'Local 06-Setor 05', '41345191', 1, 527),
(27767, 166, '601481', 'MARCIO MUNIZ DE SOUZA', 'RUA PANTANAL', '43700000', 6, 297),
(27768, 167, '603974', 'ANDERSON FRANCISCO FERREIRA', 'CONDOMINIO PRAIA DE ITACIMIRIM', '42802590', 2, 262),
(27769, 167, '600137', 'ADAILSON ALVES GOMES', 'R DA CURVA GRANDE', '42809120', 2, 461),
(27770, 167, '600610', 'ANDRE LUIS DA SILVA SANTOS', 'RUA DA MATRIZ', '42840000', 2, 274),
(27771, 167, '600524', 'CLAUDIVANDO DA SILVA ARAUJO', 'Rio Bandeira', '42807171', 2, 464),
(27772, 167, '600252', 'CRISPIM LUCIANO MARINHO DOS SANTOS', 'RUA EUCLIDES DA CUNHA', '42807400', 2, 448),
(27773, 167, '600410', 'EDER KNUPFER', 'R NOVA DO NATAL', '42809080', 2, 260),
(27774, 167, '603372', 'GILVAN LEITE DA SILVA', 'R QUATORZE DO CANAL', '42807640', 2, 460),
(27775, 167, '600114', 'JOAO CARLOS MORAIS GOMES', 'CAMINHO GARIBALDI', '42801240', 2, 298),
(27776, 167, '600443', 'JOAO EDVALDO JUNIOR DE SANTANA', 'CAM TRINTA E CINCO', '42804350', 2, 463),
(27777, 167, '600696', 'JOILSON JOSE DOS SANTOS', 'RUA DA AURORA', '42800000', 2, 464),
(27778, 167, '600115', 'JOSIVALDO DA SILVA LIMA', 'AV INDUSTRIAL URBANA', '42802570', 2, 478),
(27779, 167, '604219', 'JULIANE DE JESUS COSTA SANTANA', 'AV INDUSTRIAL URBANA 9999 BLOCO 12 APTO 204', '42802570', 2, 477),
(27780, 167, '601107', 'MAURICIO ALMEIDA DE OLIVEIRA', 'TV EIXO 4', '42800000', 2, 289),
(27781, 167, '600351', 'NEIRIVALDO BRAGA FERREIRA', 'R DO POETAS', '42800000', 2, 463),
(27782, 167, '600699', 'ESDRAS ALVES BRITO', 'Inácio Bastos', '48060090', 8, 300),
(27783, 167, '601392', 'FABIO SANTOS DE OLIVEIRA', 'RUA DO BOTA FOGO', '42850000', 5, 243),
(27784, 167, '604165', 'LUCIANA GONÇALVES MOREIRA RIBEIRO NETTO', 'ECO VILLAS QUADR B', '42700000', 3, 216),
(27785, 167, '600133', 'JOSE RONALDO CORDEIRO DE OLIVEIRA', 'Rua Bernardino Dos Santos', '42700000', 3, 301),
(27786, 167, '600032', 'ORLANDO FONSECA DO NASCIMENTO', 'AV AMARILIO THIAGO DOS SANTOS', '42700000', 3, 183),
(27787, 167, '691329', 'MAIARA DANTAS FREITAS DOS SANTOS', 'Rua Angelina Rodrigues', '40355420', 1, 81),
(27788, 167, '601721', 'ANDREA LOPES DE OLIVEIRA PASSOS', 'PINTASSILGOS, DOS', '41720030', 1, 196),
(27789, 167, '600026', 'BRUNO JOSE ACTIS DOS SANTOS', 'Adelaide Fernandes da Costa apto 1201', '41760040', 1, 45),
(27790, 167, '600027', 'EDIELSON SANTOS LIMA FILHO', 'RUA BAHIA DE PARIPE', '40720970', 1, 128),
(27791, 167, '600034', 'FILIPE GUEDES PEREIRA DA CRUZ', 'RUA NILSON COSTA', '40270620', 1, 38),
(27792, 167, '600057', 'GERALDO JOSE LEAL DE OLIVEIRA', 'R GENESIO SALES', '40270240', 1, 38),
(27793, 167, '600658', 'IBSON LOBATO DOS ANJOS', 'TV NOVA ESPERANCA', '41610250', 1, 91),
(27794, 168, '600431', 'ALEX MURILO DOS SANTOS OLIVEIRA', 'R CORONEL TAMARINDO', '42807120', 2, 454),
(27795, 168, '600112', 'BRUNO ALVES DOS SANTOS', 'CONDOMINIO PRAIA DE ITACIMIRIM', '42800000', 2, 262),
(27796, 168, '600402', 'CARLOS ALBERTO DOS SANTOS NASCIMENTO', 'RUA ABARE', '42800000', 2, 186),
(27797, 168, '600330', 'CLEBER SAO PEDRO DE JESUS', 'CAMIINHO DA AMIZADE', '42800000', 2, 302),
(27798, 168, '601253', 'JULIO CESAR DOREA DA SILVA', 'INDUSTRIAL URBANA', '42802570', 2, 477),
(27799, 168, '603018', 'JURAILTON CARVALHO SILVA', 'RUA PETROLINA', '42802540', 2, 281),
(27800, 168, '603040', 'TIAGO DE PAULO COSTA DE JESUS', 'CD PRAIA DE JAUA', '42802590', 2, 262),
(27801, 168, '600408', 'VIVALDO DE MOURA PEREIRA JUNIOR', 'RUA 10 DO PARQUE', '42800000', 2, 461),
(27802, 168, '603294', 'ANDERSON ALVES DOS SANTOS', 'R CEARA', '41830450', 1, 16),
(27803, 168, '600589', 'CLEITISSON SANTOS DA SILVA', 'R PATATIVAS', '41720100', 1, 196),
(27804, 168, '602057', 'DIEGO NASCIMENTO DOS SANTOS', 'R SILVEIRA MARTINS CD POMAR DO CABULA', '41150000', 1, 51),
(27805, 168, '603686', 'JAIME MASATO MIHARA', 'RUA TTRAVASSO DE DENTRO', '40415365', 1, 82),
(27806, 168, '603117', 'JONAS COSTA SANTOS', 'EUNICE MOREIRA', '40713730', 1, 122),
(27807, 168, '601706', 'NATHALIA FIGUEREDO MACEDO', 'R NORTE', '41905000', 1, 204),
(27808, 168, '601725', 'ANA RITA DE JESUS ALMEIDA', 'RUA EUNAPOLIS', '43700000', 6, 297),
(27809, 168, '603481', 'EDER PEREIRA SOARES', 'RUA COREIA DO NORTE', '43700000', 6, 303),
(27810, 169, '600925', 'ALESSANDRO DOMINGOS DOS SANTOS', 'R JACOBINA', '42805230', 2, 475),
(27811, 169, '601689', 'DIEGO MENEZES DE LIMA', 'CAM D', '42801470', 2, 298),
(27812, 169, '601194', 'FABIO DOS SANTOS', 'INDUSTRIAL URBANA AP 203 BLOCO 18', '42802570', 2, 477),
(27813, 169, '600621', 'JORGE DA SILVA DE BARROS', 'R GUARANY QD 20 LOTE 03', '42804730', 2, 251),
(27814, 169, '600347', 'NEIRIVALDO SILVA SOUSA', 'RUA DA LINHA', '42803000', 2, 449),
(27815, 169, '600234', 'NILSON DE JESUS RIBEIRO', 'AV INDUSTRIAL URBANA', '42802570', 2, 476),
(27816, 169, '600220', 'PAULO ROBERTO SILVA SANTOS', 'RUA DAS FLORES II CAM CINQUENTA', '42804500', 2, 463),
(27817, 169, '601387', 'ROBERTO ARAUJO DE OLIVEIRA', 'GUARANYS', '42804730', 2, 373),
(27818, 169, '601426', 'UZIAS DOS SANTOS MAIA', 'SEGUNDA TV ANTONIO FELIX MARTINS', '42800000', 2, 282),
(27819, 169, '601421', 'VANDERLEI NUNES DE MATOS', 'RUA ACACIA ROSA', '42800000', 2, 463),
(27820, 169, '600692', 'WURTEMBERG SOUSA DE JESUS', 'CAM DEZESSEIS', '42804160', 2, 463),
(27821, 169, '604276', 'JONATAN ALVES FREIRE', 'Rua Chorora', '42850000', 5, 246),
(27822, 169, '600259', 'RAFAEL NEVES IVO', 'ESTRADA VELHA DE MONTE GORDO SN', '42820000', 4, 502),
(27823, 169, '601188', 'CLEBER SOUZA COSTA', 'RUA JOSE ARAUJO', '41620850', 1, 91),
(27824, 169, '600933', 'FLAVIO SILVA SOUZA', 'RUA TRINTA E UM DE MARCO', '41926040', 1, 23),
(27825, 169, '600597', 'JONES GUSMAO CERQUEIRA', 'RUA DA PAZ', '40715505', 1, 207),
(27826, 169, '600493', 'JUAREZ ANDRADE DOS SANTOS', 'AV ALIOMAR BALEEIRO', '42599999', 1, 103),
(27827, 169, '600706', 'MARINALDO DOS SANTOS DIAS', 'Luís Viana', '41730101', 1, 205),
(27828, 169, '601311', 'PAULO CEZAR TEIXEIRA DOS SANTOS', 'sao jose', '43700000', 6, 308),
(27829, 169, '601215', 'UBIRACI MARQUES DOS SANTOS', 'CON NOVA CONQUISTA QUADRA 03', '43700000', 6, 309),
(27830, 170, '600609', 'ADELMO OLEGARIO BORGES', 'TV DOIS DE MAIO', '42800530', 2, 456),
(27831, 170, '600990', 'GENILDO DA SILVA', 'AVENIDA JARDIM LIMOEIRO', '42649999', 2, 467),
(27832, 170, '600687', 'JOSE NILTON DE JESUS CARVALHO SENA', 'VERDES HORIZONTES', '42802540', 2, 281),
(27833, 170, '600966', 'LEANDRO DA COSTA DOS SANTOS', 'Rua jorge amado', '42849999', 2, 311),
(27834, 170, '600496', 'RUBEM OLIVEIRA MACIEL DOS SANTOS', 'RUA 8 DO CANAL', '42800000', 2, 476),
(27835, 170, '603075', 'TIAGO MENEZES DE MATOS', 'CONDOMINIO RESIDENCIAL PRAIA DE JAUA', '42802590', 2, 312),
(27836, 170, '600338', 'JAIRO SANTANA ROCHA', 'RUA  DA LUANDA', '42800000', 10, 313),
(27837, 170, '600648', 'ZENILSON SILVA DA CRUZ', 'TRAVESSA CRISTO REDENTOR', '41750300', 1, 314),
(27838, 171, '604310', 'MARIVANDO HERMES DA SILVA', 'Vinte e Oito de Dezembro', '42801160', 2, 476),
(27839, 171, '600984', 'ADELSON LEONARDO DA SILVA LIMA', 'RUA DA MANGUEIRA', '42840000', 2, 274),
(27840, 171, '603312', 'ADENILTON DE MOURA SANTANA', 'CAM DA AMIZADE', '42800000', 2, 302),
(27841, 171, '601241', 'ADRIANO DE BRITO FONSECA', 'CAM DEZESSETE', '42803230', 2, 186),
(27842, 171, '603925', 'ALEX BATISTA DOS SANTOS', 'RUA LAMARCA', '42800510', 2, 315),
(27843, 171, '601390', 'ALEX NEVES GOMES', 'R NOVA DO NATAL', '42809080', 2, 452),
(28445, 171, '601684', 'ALEXANDRE SOUZA DE JESUS', 'RUA GUILHERME MACHADO', '42835000', 2, 264),
(28446, 171, '601577', 'ALEXSANDRO PEREIRA', 'TV CONCENTRICA', '42849999', 2, 260),
(28447, 171, '601681', 'ALLAN SANTOS SOUZA', 'LT VILA DOS ARTISTAS', '42843000', 2, 468),
(28448, 171, '600487', 'ANDERSON DA SILVA RAMOS', 'RUA GAJURUS', '42800000', 2, 317),
(28449, 171, '600943', 'ANDRE LUIZ SILVA DOS SANTOS', 'TV RADIAL C', '42800000', 2, 318),
(28450, 171, '600942', 'ANGELO BARBOSA DOS SANTOS', 'RUA DAS CONCHINHAS', '42806330', 2, 469),
(28451, 171, '600546', 'ANTONIO CARLOS DOS ANJOS PINTO', 'R CORONEL TAMARINDO', '42807120', 2, 454),
(28452, 171, '601578', 'BRUNO DE OLIVEIRA FREITAS', 'RUA DA SAUDADE', '42849999', 2, 186),
(28453, 171, '601066', 'CARLOS EDUARDO DOS SANTOS', 'CORPO SANTO', '42803270', 2, 449),
(28454, 171, '603523', 'CELIONE ANTONIO DA SILVA', 'AV SUL', '42801070', 2, 267),
(28455, 171, '603112', 'CICERO EDUARDO OLIVEIRA DOS SANTOS', 'R PAULO DE TARCO', '42806200', 2, 454),
(28456, 171, '600825', 'CICERO FERREIRA LIMA', 'R GUARANYS', '42804730', 2, 251),
(28457, 171, '603071', 'CID RONALD CARVALHO DA PAZ', 'RUA DAS ALMAS', '42805000', 2, 449),
(28458, 171, '603502', 'CLAUDINEI SABINO', 'TRAVESSA MANOEL LEAL', '42833000', 2, 319),
(28459, 171, '600928', 'CLAUDIO ROBERTO MATOS PEREIRA', 'R ANA GALVAO', '42806090', 2, 454),
(28460, 171, '603636', 'CLERISTON GALDINO SOARES', 'R ALVORADA', '42807740', 2, 464),
(28461, 171, '600460', 'CLEVERSON LUIZ CAMPOS', 'RUA IBICARAI', '42800000', 2, 186),
(28462, 171, '603527', 'CRISTIAN DOS SANTOS', 'CD VIVER CAMACARI, QDA J RUA A 6 B', '42849000', 2, 464),
(28463, 171, '600302', 'DANIEL DE OLIVEIRA JARDIM NETO', 'RUA DO AREIAL', '42800000', 2, 472),
(28464, 171, '600407', 'DERIVAL FERREIRA DOS SANTOS', 'RUA TIRADENTES', '42800000', 2, 271),
(28465, 171, '603506', 'DERIVALDO SILVA GONCALVES', 'R IRIS', '42809370', 2, 321),
(28466, 171, '601424', 'DEVESON EDUARDO FAGUNDES DOS SANTOS LIMA', 'CAMINHO GUAPORE', '42800000', 2, 302),
(28467, 171, '600301', 'EDIMAR DA SILVA SANTOS', 'CAM A 20', '42802460', 2, 302),
(28468, 171, '600434', 'ELIEL DOS SANTOS TORRES', 'CAM TRES', '42804030', 2, 463),
(28469, 171, '603265', 'ELPIDIO BISPO MOREIRA JUNIOR', 'RUA MANGUEIRA', '42847000', 2, 263),
(28470, 171, '603667', 'ERIVAL DA SILVA VIEIRA', 'LOT VERDES HORIZONTES', '42802540', 2, 281),
(28471, 171, '603475', 'EUGENIO FERREIRA DA SILVA', 'CORONEL TAMARINDO', '42807120', 2, 469),
(28472, 171, '600308', 'EVANILDO BISPO DE OLIVEIRA', 'R DOS BOMBEIROS', '42801120', 2, 476),
(28473, 171, '602083', 'FERNANDO JOAQUIM DA SILVA JUNIOR', 'R CATUAMA', '42804680', 2, 373),
(28474, 171, '601080', 'FRANCISCO SEVERO DE JESUS', 'AV CONCENTRICA', '42809050', 2, 452),
(28475, 171, '601020', 'FREDERICO COSTA FEITOZA', 'R ACACIA GEOVANICA', '42804580', 2, 463),
(28476, 171, '603524', 'FREDISON SANTOS DA SILVA', 'RUA SUMARE', '42800510', 2, 315),
(28477, 171, '603651', 'GILBERTO DAS CHAGAS DE SANTANA', 'AV RIO CAMACARI', '42806100', 2, 454),
(28478, 171, '601084', 'GILVAN JOSE DA SILVA', 'AV FLORESTAL', '42809340', 2, 321),
(28479, 171, '601021', 'GLEIDSON MATOS SANTOS', 'RUA DA CURVA GRANDE', '42800000', 2, 461),
(28480, 171, '600642', 'GLEISON LIMA LUCIANO', 'R ACACIA ROSA', '42804590', 2, 463),
(28481, 171, '601611', 'HAIRTON HARTLEY GENIPAPEIRO LEAO', 'TV BURIS DE ABRANTES', '42849999', 2, 274),
(28482, 171, '603930', 'HELMUTH COSTA SILVA', 'R ACACIA ROSA', '42804590', 2, 463),
(28483, 171, '603169', 'IGOR DE JESUS BASTOS', 'CAMAÇARI DUO', '42802570', 2, 476),
(28484, 171, '601552', 'IGOR NASCIMENTO ALVES', 'RUA AUGUSTO ALCANTARA', '42847000', 2, 263),
(28485, 171, '603292', 'ITALO LOPES DO NASCIMENTO JUNIOR', 'RUA ALICE UZEDA', '42843000', 2, 274),
(28486, 171, '603461', 'IVANILDO ARAGAO DA SILVA', 'RUA PINTASSILGO', '42800001', 2, 454),
(28487, 171, '600708', 'IVANILTON MIRANDA GALIZA', 'RUA DO JACARE', '42800520', 2, 337),
(28488, 171, '602084', 'IVONEI MIRANDA GALIZA', 'RUA DO JACARE', '42820971', 2, 456),
(28489, 171, '600377', 'IVONILDO BRITO DO AMOR DIVINO', 'R FONTE', '42840000', 2, 323),
(28490, 171, '603530', 'JADSON SANTOS PEREIRA', 'RUA DO SERENO', '42849000', 2, 341),
(28491, 171, '603664', 'JOAO AUGUSTO BISPO DOS SANTOS GAMA', 'RUA DA ALVORADA', '42800000', 2, 363),
(28492, 171, '601427', 'JOAO HERCULANO MARINHO NETO', 'LOT FONTE DAS PEDRAS', '42849999', 2, 264),
(28493, 171, '600822', 'JOAO LUIS OLIVEIRA DA SILVA', 'RUA DOS PINHEIRO', '42800000', 2, 362),
(28494, 171, '603268', 'JOAO NETO DA SILVA NOBREGA', 'RUA DAS MALVINAN', '42825000', 2, 328),
(28495, 171, '603681', 'JOELSON MARQUES DE JESUS', 'CJ AREMBEPE', '42801020', 2, 267),
(28496, 171, '601591', 'JOHN ROBERT FELIX SANTOS DA COSTA', 'R DECIMA DO PARQUE', '42809320', 2, 461),
(28497, 171, '600215', 'JORGE ADRIANO CORREIA DOS SANTOS', 'TRAVESSA JARDIM BRASILIA 10 A', '42800000', 2, 454),
(28498, 171, '603270', 'JORGE CESAR BISPO DO CARMO', 'TRAVESSA DA LINHA', '42804780', 2, 472),
(28499, 171, '600216', 'JOSE CONCEICAO DE JESUS', 'RUA ALTO BOA VISTA', '42800000', 2, 452),
(28500, 171, '603093', 'JOSE MARTINS', 'RUA DANDARA', '42800970', 2, 315),
(28501, 171, '601383', 'JOSEVAL GOMES DOS SANTOS', 'RUA DA AURORA', '42800000', 2, 464),
(28502, 171, '601251', 'JOSMARIO DE JESUS EVANGELISTA', 'RUA DO NATAL', '42800000', 2, 260),
(28503, 171, '600270', 'LASARO SILVA SANTOS', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(28504, 171, '603425', 'LEONARDO MARCOS DOS SANTOS', 'AV PADRE PAULA MARIA TONUCCI', '42800510', 2, 360),
(28505, 171, '603272', 'LUCAS MAURICIO DE SOUZA', 'RUA DA CAIXA DAGUA', '42804790', 2, 277),
(28703, 180, '603562', 'ELENILTON DE JESUS REIS', 'RUA COPA I CJ ILHA DE SAO JOAO', '43700000', 6, 415),
(28704, 180, '601501', 'FABIO SANTOS CARNEIRO', 'CJ. SIMOES FILHO I', '43700000', 6, 411),
(28705, 180, '601833', 'GENILSON RIBEIRO DOS SANTOS', 'TV PRESIDENTE CASTELO BRANCO', '43700000', 6, 432),
(28706, 180, '603462', 'JECIMAR LOPES DOS SANTOS', 'RUA BELARMINO RIBEIRO', '42700000', 6, 428),
(28707, 180, '603628', 'JOAO PAULO FERREIRA RODRIGUES', 'RUA BEM TE VI', '43700000', 6, 420),
(28708, 180, '602047', 'JOSE ADILSON SANTANA DA SILVA', 'RUA RIO VERMELHO', '43700000', 6, 432),
(28709, 180, '603589', 'JULIO CORREIA DA CONCEICAO', 'RUA INOCENCIO ANTONIO ROCHA', '43700000', 6, 432),
(28710, 180, '601413', 'LEONARDO NUNES LIMA', 'AV ENGENHEIRO WALTER ARAGAO DE SOUZA', '42700000', 6, 420),
(28711, 180, '602050', 'MOISES MENEZES DE JESUS', 'AV WASHINGTON LUIZ', '43700000', 6, 303),
(28712, 181, '603867', 'NALBERTO GOMES DE SOUSA JUNIOR', 'Avenida Industrial Urbana', '42802570', 2, 477),
(28713, 181, '603409', 'DEILSON SILVA DOS SANTOS SOUZA', 'R GARATINGA', '42803000', 2, 186),
(28714, 181, '601199', 'JEFERSON RICARDO ARAUJO DE OLIVEIRA', 'TRAVESSA 02 DA CARAUNA', '42800000', 2, 264),
(28715, 181, '600217', 'MAGNO DA SILVA NEVES', 'RUA SEIS DO PARQUE', '42800000', 2, 461),
(28716, 181, '601036', 'VALBERTO DOS SANTOS RIBEIRO', 'AV INDUSTRIAL URBANA', '42800000', 2, 476),
(28717, 181, '603175', 'MAICON CESAR BATISTA DA SILVA', 'TRAVESSA CLAUDIO CAJADO', '42850000', 5, 234),
(28718, 181, '600896', 'GEORGE SANTOS BATISTA', 'RUA JACIARA FERREIRA FREITAS', '42700000', 3, 222),
(28719, 181, '603027', 'ARIVALDO JESUS DOS SANTOS', 'MAESTRO WANDERLEY', '41195420', 1, 51),
(28720, 182, '603989', 'DJAILSON SILVA CARQUEIJA', 'Rua Júlio Leitão', '42806080', 2, 454),
(28721, 182, '601997', 'ADILSON DA SILVA OLIVEIRA', 'CAM C 04 SABARA', '42801480', 2, 298),
(28722, 182, '603534', 'ALBERTSON MOURA DOS SANTOS', 'VL LUIZA MAIA', '42806300', 2, 469),
(28723, 182, '601923', 'ALEXANDRO PEREIRA DE SANTANA', 'CAM PORTO SEGURO', '42803230', 2, 186),
(28724, 182, '601379', 'ALEXNALDO NASCIMENTO DOS SANTOS', 'RUA CASTELO BRANCO', '42800000', 2, 463),
(28725, 182, '601497', 'ANTONIO CARLOS OLIVEIRA DA CONCEICAO', 'CAMPO, DO RUA', '42806010', 2, 449),
(28726, 182, '603618', 'ANTONIO DE JESUS ALVES', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(28727, 182, '603089', 'ARI MARCOS DE BRITO DOS SANTOS', 'R JACOBINA', '42805240', 2, 475),
(28728, 182, '601632', 'ARY BOREL DE AGUIAR NETO', 'R AMIZADE', '42805440', 2, 474),
(28729, 182, '603569', 'CARLOS DE LIMA CORDEIRO FILHO', 'RUA ANTONIO BISPO DE SOUZA', '42806340', 2, 469),
(28730, 182, '603625', 'CARLOS EDUARDO DOS ANJOS', 'LOTEAMENTO FONTE DAS AGUAS', '42835000', 2, 264),
(28731, 182, '603673', 'CHRISTIANO TADEU MOREIRA DOS SANTOS', 'AV RADIAL A', '42807000', 2, 454),
(28732, 182, '603615', 'COSME CORDEIRO DO ROSARIO', 'RUA AUGUSTO SANDINO', '42800510', 2, 315),
(28733, 182, '603079', 'DIEGO CARVALHO DA SILVA', 'Residencial Alpha V', '42802580', 2, 312),
(28734, 182, '600999', 'EDILSONEI BRAZ VASCONCELOS', 'RUA VENUS II', '42807440', 2, 464),
(28735, 182, '603090', 'EDINALDO SANTOS DE JESUS', 'R ILHEUS A', '42805110', 2, 475),
(28736, 182, '603567', 'EDROALDO DE ARAUJO OLIVEIRA', 'RUA DA INGAZEIRA', '42820000', 2, 456),
(28737, 182, '602019', 'ELIOMAR CARLOS DOS SANTOS', 'CAM QUARENTA E SETE', '42804500', 2, 463),
(28738, 182, '601295', 'ELOISIO SENA VILELA', 'RUA DO AMPARO', '42800000', 2, 464),
(28739, 182, '601403', 'EVILAZARO DA SILVA VILAS BOAS', 'CAM VINTE E SETE', '42804270', 2, 463),
(28740, 182, '601763', 'EWERTON FELIPE DA SILVA PELANDA', 'RUA B FLOR DE LOTOS', '42806340', 2, 255),
(28741, 182, '603049', 'FABIO HENRIQUE DOS SANTOS', 'TV LAURO DE FREITAS', '42804780', 2, 472),
(28742, 182, '601325', 'FABRICIO FERREIRA ARAUJO', 'Curió', '42806150', 2, 454),
(28743, 182, '603620', 'FAGNER DE JESUS LIMA', 'RUA DA MANGUEIRA', '42847000', 2, 534),
(28744, 182, '603065', 'FLAVIO ROBERTO RAMOS DE JESUS', 'RIO BANDEIRA', '42807171', 2, 464),
(28745, 182, '603490', 'FREDINILTON CONCEICAO SPECHT', 'RUA GANDU', '42849000', 2, 315),
(28746, 182, '601550', 'GEAN MARCEL CARNEIRO DE OLIVEIRA', 'RUA BAURU', '42849999', 2, 298),
(28747, 182, '603083', 'GILCINALDO BISPO DOS SANTOS', 'RUA MACALI', '42800510', 2, 315),
(28748, 182, '603092', 'GIVALDO JOSE SEVERO', 'R SEGUNDA LIGACAO', '42809180', 2, 461),
(28749, 182, '603195', 'JONATAS MIRANDA RIBEIRO', 'R MANGA ITAMARACA', '42808260', 2, 359),
(28750, 182, '603161', 'JOSE GEOVA RODRIGUES', 'R SEGUNDO CENDES', '42809150', 2, 461),
(28751, 182, '603622', 'JOZIEL LIMA DE ALMEIDA', 'RUA LAMARCA', '42800001', 2, 315),
(28752, 182, '600965', 'JURACI DA CRUZ DOS SANTOS', 'RUA DO NATAL', '42800000', 2, 260),
(28753, 182, '602026', 'LEANDRO DO AMPARO MACHADO', 'LOT PARQUE VERDE I RUA OLAVO BILAC', '42804780', 2, 531),
(28754, 182, '601308', 'MARCELO DA SILVA AZEVEDO', 'TV SAO JOSE', '42807480', 2, 448),
(28755, 182, '601774', 'MARCELO SOARES DE OLIVEIRA', 'LOTEAMENTO BOSQUE DE GUARAIPE', '42807010', 2, 319),
(28756, 182, '603141', 'MARCIO SANTANA DOS SANTOS', 'R ACACIA ROSA', '42804590', 2, 463),
(28757, 182, '603192', 'MARCO AURELIO PIMENTEL NASCIMENTO', 'CAM D', '42801360', 2, 298),
(28758, 182, '601370', 'MARIO EDSON DA SILVA', 'AVENIDA SUL', '40000000', 2, 341),
(28759, 182, '601705', 'MARIO MENDES MAGALHAES', 'R SEGUNDO SENDES', '42809150', 2, 461),
(28760, 182, '603081', 'MARIO SERGIO SAMPAIO DE SOUZA', 'TRAVESSA DO PROFETA', '42804790', 2, 472),
(28761, 182, '603563', 'MARLON BRUNO OLIVEIRA ARIZE', 'CAM C 9', '42802310', 2, 302),
(28762, 182, '603073', 'NEILSON CONCEICAO SANTOS', 'NOVO HORIZONTE', '42801480', 2, 298),
(28763, 182, '601576', 'ODICEIA BONFIM SANTOS DE JESUS', 'TV MACHADO DE ASSIS', '42849999', 2, 469),
(28764, 182, '603179', 'ORLANDO SANTOS DE SOUZA', 'R PALHA, DA', '42800640', 2, 257),
(28765, 182, '601212', 'PAULO FERREIRA DE SOUZA', 'RUA MANOEL LEAL', '42849999', 2, 256),
(28766, 182, '603096', 'PAULO WELLINGTON CARNEIRO SILVA', 'VIA PARAFUSO SIN RESIDENCIAL LUCAIA', '42849000', 2, 298),
(28767, 182, '603143', 'ROBERTO CESAR DOS SANTOS CANABRAVA', 'AV CONCENTRICA', '42809051', 2, 461),
(28768, 182, '600525', 'ROBSON OLIVEIRA LEITE', 'RUA GANDU', '42800000', 2, 315),
(28769, 182, '600096', 'SILAS SOUZA DE OLIVEIRA', 'RUA SEGUNDO CENDES', '42800000', 2, 461),
(28770, 182, '600981', 'VAGNER FERREIRA LIMA', 'R ABRANTES', '42802000', 2, 267),
(28771, 182, '603619', 'VAILSON NASCIMENTO DE MELO', 'CON ALGAROBAS III', '42806330', 2, 469),
(28772, 182, '603191', 'VALDIR DA SILVA FILHO', 'LOT FONTE DAS AGUAS', '42835000', 2, 264),
(28773, 182, '603450', 'VALMIR BISPO DOS SANTOS', 'RUA DA LINHA', '42849000', 2, 257),
(28774, 182, '600451', 'WEDER MARTINS DE MATOS', 'CAM GLAUBER ROCHA', '42802120', 2, 302),
(28775, 182, '602027', 'LUCIANO ARAGAO CARDOSO', 'RUA CHORORA', '41181900', 5, 246),
(28776, 182, '603139', 'MARCELO MACHADO DOS SANTOS', 'RUA JOSE HERCULINO FILHO', '42850000', 5, 243),
(28777, 182, '601846', 'NILSON DE SOUZA SACRAMENTO JUNIOR', 'RUA BOA ESPERANCA', '42850000', 5, 241),
(28778, 182, '603921', 'DAILTON FRANCISCO DE SANTANA FILHO', 'RUA SAO JOAO', '42700000', 3, 215),
(28779, 182, '603624', 'DENNYS ARAUJO DOS SANTOS', 'MARIA QUITERIA', '42700000', 3, 225),
(28780, 182, '604048', 'DANIEL SANTOS DO NASCIMENTO', 'Rua Eixo 28', '40731525', 1, 142),
(28781, 182, '603610', 'ADRIANO BRITO BITENCOURT', 'CIRILO GONCALVES OLIVEIRA', '40367300', 1, 63),
(28782, 182, '601844', 'ALEXANDRE DE JESUS SALES', 'R RAIMUNDA PINHEIRO', '40387250', 1, 519),
(28783, 182, '603109', 'ANDERSON VIANA DA SILVA SOARES', 'RUA DO BOM JUA', '40353390', 1, 206),
(28784, 182, '603577', 'ANDRE DOS SANTOS SILVA', '2 de Julho', '40750146', 1, 127),
(28785, 182, '603127', 'ANTONIO CARLOS SOUZA CONCEICAO', 'Ipitanga', '41611660', 1, 90),
(28786, 182, '600892', 'ELENILDO SANTANA', 'R PROFESSOR SOEIRO', '40310300', 1, 133),
(28787, 182, '601819', 'JAILSON SANTOS DA SILVA', 'CINQUENTA', '40731390', 1, 512),
(28788, 182, '603180', 'JARDEL MOREIRA BARROS', 'RUA PIATA', '41500681', 1, 97),
(28789, 182, '600046', 'JEAN EMMANUEL FERREIRA FRANCA', 'dos Canários', '41152135', 1, 52),
(28790, 182, '603612', 'JEFFERSON PEREIRA ALVES DA SILVA', 'Primeiro de Janeiro', '40393190', 1, 78),
(28791, 182, '600028', 'JERIVALDO DA SILVA SANTOS', 'R PIAUI', '40750040', 1, 128),
(28792, 182, '602006', 'JOAO CEZAR SANTOS ARAUJO', 'CJ MUSSURUNGA II', '41510220', 1, 98),
(28793, 182, '601821', 'JOAO VITOR LIMA DOS SANTOS', 'R GENGIBIRRA DE BAIXO', '40370590', 1, 195),
(28794, 182, '603094', 'JUDNEI MELO DE FREITAS', 'RUA 3 DE MAIO 14 CS 1 ANDAR', '41390410', 1, 100),
(28795, 182, '601333', 'LUCIANO BATISTA EVANGELISTA', 'ALAMEDA B 55 2B24', '40487020', 1, 77),
(28796, 182, '603605', 'MADSON DE SOUZA PEREIRA', '29 de Outubro', '41611186', 1, 90),
(28797, 182, '600676', 'NAILSON SILVA OLIVEIRA', 'R NOVA TRAVESSA DA SAUDADE', '41130240', 1, 49),
(28798, 182, '603119', 'ORLANDO XAVIER JUNIOR', 'Vale do Abaré', '41213122', 1, 75),
(28799, 182, '601052', 'ROGERIO JOSE DE OLIVEIRA', 'R MANOEL DRUMOND', '40320670', 1, 144),
(28800, 182, '604291', 'ROGERIO DE ALMEIDA DOS SANTOS', 'Rua dos Abrigados', '43700000', 6, 432),
(28801, 182, '601629', 'ALISSON OLIVEIRA DE SOUZA', 'RUA POLIVALENTE', '43700000', 6, 413),
(28802, 182, '600724', 'CHARLES DA PAIXAO COSTA', 'RUA D  QD 11 BL 7B AP 102', '43700000', 6, 437),
(28803, 182, '603621', 'DURVAL SANTOS PARAGUASSU', 'CA 3 QDA 423', '43700000', 6, 397),
(28804, 182, '601191', 'ELINALDO DE JESUS DOS SANTOS', 'RUA DA PALINHA', '43700000', 6, 409),
(28805, 182, '601360', 'ELIOMAR MATOS DE SOUZA', 'RUA TURQUIA', '43700000', 6, 421),
(28806, 182, '603086', 'GERALDO FERREIRA DA SILVA', 'RUA ANISIO TEIXEIRA', '43700000', 6, 398),
(28807, 182, '603617', 'JESSIVALDO DA SILVA PEREIRA', 'RESIDENCIAL SIMOES FILHO I', '43700000', 6, 438),
(28808, 182, '603136', 'JOSAFA DE JESUS PEREIRA', 'RUA BRAULIO MUNIZ', '43700000', 6, 303),
(28809, 182, '603660', 'OSEIAS MARTINS DE OLIVEIRA', 'RUA VITAL BRASIL', '43700000', 6, 428),
(28810, 182, '603576', 'ROMEU SARAIVA MARIANO', 'ET PITANGUINHA', '43700000', 6, 405),
(28811, 183, '603869', 'DIEGO PAULINO DE SOUZA', 'Travessa da Agulha', '42806190', 2, 454),
(28812, 183, '603233', 'ANDERSON LIMA DE SANTANA', 'ESPATODIAS', '42804610', 2, 463),
(28813, 183, '603253', 'ARI NASCIMENTO PINHO', 'AV SUL', '42801070', 2, 302),
(28814, 183, '601185', 'ARICLESIA DOS SANTOS ALMEIDA', 'R ABARE RESID NOVA CAMACARI BL 5 AP 303', '42803050', 2, 186),
(28815, 183, '603659', 'ELINALDO DA CRUZ DE AZEVEDO', 'CJ GLEBA H', '42806340', 2, 469),
(28816, 183, '601401', 'ERMESON PASSOS MARTINS', 'AV SUL Nº 02', '40000000', 2, 341),
(28817, 183, '601328', 'JOANDERSON ALVES LIMA', 'AV INDUSTRIAL URBANA', '42807580', 2, 476),
(28818, 183, '603241', 'JOSAFA XAVIER FERREIRA', 'AV RIO CAMACARI', '42806100', 2, 454),
(28819, 183, '604128', 'LEANDRO LIMA BENEVIDES', 'RUA DOS UMBUS', '43849000', 2, 472),
(28820, 183, '600219', 'MARCIO DOS SANTOS BARBOSA', 'R ALFREDO CABUSSU', '42808090', 2, 448),
(28821, 183, '600572', 'PAULO DOS SANTOS OLIVEIRA', 'R MARTE', '42808000', 2, 464),
(28822, 183, '603189', 'SIDNEI EVANGELISTA RIBEIRO', 'LOT PARQUE VERDE I', '42804780', 2, 472),
(28823, 183, '600526', 'TAIANE DOS SANTOS SANTOS', 'AV RADIAL C', '42808010', 2, 363),
(28824, 183, '603923', 'WAGNER EDUARDO DIAS DE ALBUQUERQUE', 'R VENUS I', '42808180', 2, 464),
(28825, 183, '600507', 'WALTERNILSON DE MATOS SOARES', 'RUA DA PAZ', '41807999', 8, 378),
(28826, 183, '604127', 'JEFFERSON AUGUSTO DA SILVA PAIM', 'RUA PETROPOLIS', '42850000', 5, 295),
(28827, 183, '603447', 'ADAILTON DE JESUS SANTOS', 'RUA GETULIO VARGAS', '42850000', 5, 295),
(28828, 183, '603591', 'GILSON FRANCISCO DOS SANTOS', 'RUA JOSE DA CONCEICAO ALMEIDA', '42850000', 5, 237),
(28829, 183, '603215', 'LUCIANO GOMES SANTANA', 'RUA GATURAMO', '42850000', 5, 536),
(28830, 183, '600203', 'ANDERSON RICARDO BELLO DE MELLO', 'RUA JASMIM DO CAIRO', '42700000', 3, 222),
(28831, 183, '603898', 'RONALD NUNES DE SOUZA', 'Cajazeiras XI', '41330030', 1, 527),
(28832, 183, '601845', 'ANTONIO CARLOS ARAUJO QUEIROZ', 'ADELINO SANTOS', '40375420', 1, 63),
(28833, 183, '601361', 'FLORISVALDO DE SANTANA FILHO', 'R DEMOCRATA', '40353090', 1, 81),
(28834, 183, '603211', 'JOAQUIM SANTANA SOUZA CORDEIRO JUNIOR', 'RUA DAS BROMELIAS BRANCAS', '41502015', 1, 145),
(28835, 183, '603685', 'PAULO SERGIO CARDOSO DOS SANTOS', 'TRAVESSA PASSOS', '40349250', 1, 201),
(28836, 183, '603097', 'RAFAEL BOMFIM BRAGA', 'Cajazeiras IV', '41330050', 1, 527),
(28837, 183, '604297', 'EVANDYR GOES FIGUEIROA', 'Rua Vitoria', '43700000', 6, 432),
(28838, 183, '603661', 'ROBSON RODRIGUES DE SOUZA', 'RUA INDEPENDENCIA', '43700000', 6, 400),
(28839, 184, '604363', 'ADSON NORBERTO CRUZ DE SOUZA', 'FONTES DAS AGUAS', '42835000', 2, 264),
(28840, 184, '601322', 'ALEXNALDO BRAGA AMARAL', 'SEXTA DO PARQUE', '42809280', 2, 461),
(28841, 184, '601950', 'CLAUDIO SANTOS SA', 'AV RIO BRANCO DJALMA DE MORAIS', '42806250', 2, 469),
(28842, 184, '603466', 'DANIEL BERGUES LIMA SOARES', 'Dois', '42804020', 2, 463),
(28843, 184, '602020', 'ELTON DOS SANTOS CARDOSO', 'TV MOREIRA CESAR', '42807210', 2, 454),
(28844, 184, '601803', 'JOILSON DA SILVA PEDREIRA', 'CAM A', '42802090', 2, 302),
(28845, 184, '600198', 'JOSE ROBERTO JESUS DOS SANTOS', 'Av Jorge Amado', '42800000', 2, 476),
(28846, 184, '601825', 'LEANDRO MENDES DE BRITO', 'SUCUPIRA', '42809400', 2, 321),
(28847, 184, '600694', 'LUIZ EDUARDO SANTANA MENDES', 'VERDES HORIZONTES', '42802540', 2, 281),
(28848, 184, '603398', 'MARCOS VINICIUS NEVES BISPO', 'RUA DO JACARE', '42820000', 2, 456),
(28849, 184, '601336', 'MARIO SERGIO BRAGA AMARAL', 'RUA SANTA ROSA', '42849999', 2, 454),
(28850, 184, '601507', 'NEIVANDERSON PEREIRA CARVALHO', 'R DECIMA DO PARQUE', '42809320', 2, 461),
(28851, 184, '603888', 'RODRIGO SILVA DOS ANJOS', 'do Rosário', '42800220', 2, 327),
(28852, 184, '600737', 'TIAGO BARBOSA DE OLIVEIRA', 'COND PARIS DE JAUA', '42843000', 2, 468),
(28853, 184, '604251', 'ALEX RADLEI WONS BARBOSA', 'Estrada do Coco Km 13 Rua Caminho da Lua', '42840000', 38, 442),
(28854, 184, '604142', 'REGINALDO SANTOS DE OLIVEIRA', 'RUA GUILHERME MACHADO', '42835000', 37, 445),
(28855, 184, '603177', 'SILVANIO ALVES GOMES', 'TRAVESSA 03 PETROPOLIS', '42850000', 5, 295),
(28856, 184, '600232', 'MARCOS DO NASCIMENTO COSTA', 'LT JD METROPOLE', '42700000', 3, 222),
(28857, 184, '600952', 'ALCIMAR DA SILVA DOS SANTOS', 'TRAVESSA DOIS DE JULHO', '48280970', 10, 500),
(28858, 184, '603579', 'ALEX MESSIAS SANTOS', 'RUA B', '48120000', 11, 504),
(28859, 184, '603864', 'LEONARDO CERQUEIRA DE PINHO MURICY', 'Rua Jardim América', '41810240', 1, 16),
(28860, 184, '603578', 'ALEXSANDRO DA SILVA LOPES', 'Aliomar Baleeiro', '41385160', 1, 101),
(28861, 184, '601759', 'EDMILSON OLIVEIRA DE SOUZA', 'RUA MANGARATIBA', '40750110', 1, 127),
(28862, 184, '603716', 'EVERTON ASCOS COSTA ALVES', 'CAMBUI', '40720500', 1, 126),
(28863, 184, '601428', 'OSMAR BRITO DE OLIVEIRA FILHO', 'TV LUIZ ANSELMO AP 1103', '40270030', 1, 202),
(28864, 184, '604364', 'DAVID ANDERSON DOS SANTOS', 'RIO AMAZONAS', '43700000', 6, 400),
(28865, 184, '603593', 'CESAR DOS SANTOS SOUZA DE JESUS', 'RUA DA INDEPENDENCIA', '43700000', 6, 403),
(28866, 184, '601900', 'EDIMILTON DE ARAUJO CAMPOS', 'RUA EUNAPOLIS', '43700000', 6, 297),
(28867, 184, '601905', 'MARCUS VINICIUS SANTOS DA COSTA', 'RUA RIO VERMELHO', '43700000', 6, 432),
(28868, 184, '603701', 'NAILSON SOUZA DA SILVA', 'RUA VITORIA', '43700000', 6, 432),
(28869, 185, '603834', 'ISAIAS ANTONIO FERREIRA DOS SANTOS', 'Caminho Trinta e Nove', '42804390', 2, 463),
(28870, 185, '601948', 'ANTONIO CARLOS SOARES DOS SANTOS', '6ª  TRAVESSA ALMIRANTE TAMANDARÉ', '42804790', 2, 291),
(28871, 185, '600938', 'JAILSON DOS SANTOS OLIVEIRA', 'RUA TERESOPOLIS', '42800000', 2, 344),
(28872, 185, '602025', 'JOSE NICACIO DE SOUZA BORGES', 'CAM TRES CORACOES', '42801600', 2, 298),
(28873, 185, '601782', 'ROSENILDO DE JESUS DOS SANTOS', 'RUA DO ANGICO', '42849000', 2, 277),
(28874, 185, '601359', 'ELINALDO ALVES DOS SANTOS', 'TV 04 DA MANGUEIRA 63 B', '42850000', 5, 484),
(28875, 185, '601919', 'ADMILSON DAS DORES DA COSTA', 'G', '41480205', 1, 520),
(28876, 185, '601791', 'JILSON CYRINO', 'AV. CAMACARI', '43700000', 6, 420),
(28877, 186, '604367', 'DEIDSON CARLOS PEREIRA DA SILVA', 'DA AMIZADE', '42802350', 2, 302),
(28878, 186, '601475', 'ELIANA DE ALMEIDA BARBOSA', 'RUA OLINDA', '42802540', 2, 281),
(28879, 186, '603555', 'FABIO DA SILVA DE OLIVEIRA', 'CJ GLEBA C', '42803060', 2, 186),
(28880, 186, '601903', 'GILTON ALVES CIDREIRA', '3 TRAVESSA FLOR DO CAMPO', '42806340', 2, 255),
(28881, 186, '601765', 'IVONALDO DE ASSIS CLIMA', 'R DEZESSEIS DO CANAL', '42807660', 2, 460),
(28882, 186, '603463', 'JEAN MATOS DA SILVA', 'TV OTACILIO MARTINS', '42804780', 2, 472),
(28883, 186, '601829', 'ROSANGELA MARLENE RIBEIRO', 'R DO VALE,', '42807250', 2, 460),
(28884, 186, '601738', 'TELMA PEREIRA VIEIRA', 'INDUSTRIAL URBANA', '42802570', 2, 477),
(28885, 186, '601656', 'VALDICE DOS SANTOS LIMA', 'RUA PLACAFOR', '42801310', 2, 298),
(28886, 186, '604194', 'RUAN CERQUEIRA FERREIRA', 'RUA NOVA ESPERANÇA', '42850000', 5, 295),
(28887, 186, '601906', 'RONALDO DE JESUS SANTOS', 'TRUA GUARANHUS', '42850000', 5, 246),
(28888, 186, '603110', 'ANTONIO MARCELO MARTINS BATISTA', 'TV PROF LUIZ A DA FONSECA', '40270580', 1, 37),
(28889, 186, '601767', 'JOMILLAS CARVALHO DE OLIVEIRA', 'AV. JOAO XXIII', '43700000', 6, 432),
(28890, 186, '601699', 'JOSUE DE OLIVEIRA SILVA', 'RUA ALMIRANTE BARROSO', '43700000', 6, 409),
(28891, 186, '603572', 'WASHINGTON LUIZ COSTA', 'RUA L CONJUNTO HABITACIONAL SIMOES FILHO I', '43700000', 6, 436),
(28892, 187, '603948', 'MARLON TAVARES DE SANTANA', 'RUA OSASCO', '4280831', 2, 343),
(28893, 187, '601998', 'ANDERSON DOS REIS SANTANA', 'AV JARDIM LIMOEIRO RUA E', '42849000', 2, 467),
(28894, 187, '603889', 'LEONAM DUARTE DA SILVA', 'R CATUAMA', '42804680', 2, 251),
(28895, 187, '601603', 'RICARDO RAMON ORNELAS ARIZI', 'RUA MONTE GORDO', '42849999', 2, 267),
(28896, 187, '604358', 'JAILTON SANTOS CARDOSO', 'TIRADENTES', '42850000', 5, 237),
(28897, 187, '603325', 'ROBSON AQUELIS FERREIRA MENEZES ANGELO', 'RUA B 65 G SOLAR TROPICAL', '41250540', 1, 106),
(28898, 187, '603820', 'JOSE VALTER SANTOS BISPO FILHO', 'RUA PALO MOREIRA', '43700000', 6, 303),
(28899, 187, '602003', 'GILBERTO PEREIRA DA SILVA', 'RUA Q', '43700000', 6, 437),
(28900, 188, '604312', 'ELIELSON OLIVEIRA DE SOUZA', 'Parque Verde I', '42804780', 2, 472),
(28901, 188, '601476', 'ELIENE DE CARVALHO SANTOS', 'R BELA', '42805480', 2, 474),
(28902, 188, '601814', 'FABRICIO PONTES GOUVEIA', 'CAM C 2', '42802230', 2, 302),
(29005, 171, '601932', 'LUCIANO DE MENEZES MENDES', 'R CHILE', '42805430', 2, 474),
(29006, 171, '601933', 'LUCIVAL SILVA MAIA', 'CAM D 14', '42801370', 2, 298),
(29007, 171, '601934', 'LUIZ EDUARDO SOARES DOS SANTOS', 'LT PRAIA DO GRILO', '42840000', 2, 468),
(29008, 171, '603520', 'MARCELO SANTOS DA SILVA', 'LO FONTE DAS AGUAS', '42835000', 2, 264),
(29009, 171, '601254', 'MARCIO DOS ANJOS DOS SANTOS', 'CAM CAMPO FORMOSO', '42800000', 2, 186),
(29010, 171, '601525', 'MOISES DOS SANTOS SOARES', 'Residencial Alpha V e VI', '42802580', 2, 312),
(29011, 171, '603516', 'NICANOR DA CRUZ SANTOS', 'RUA AMERICA DO SUL', '42849000', 2, 472),
(29012, 171, '603276', 'OLIVALDINO RAMOS DE CARVALHO NETO', 'RUA MAIRI', '42825000', 2, 274),
(29013, 171, '603507', 'PEDRO DE SOUZA CERQUEIRA FILHO', 'RUA CAMPINAS', '42801310', 2, 298),
(29014, 171, '603397', 'REINALDO SANTOS ROCHA JUNIOR', 'RUA DO ENCANTO', '42840000', 2, 274),
(29015, 171, '603277', 'REINAN DO CARMO OLIVEIRA', 'RUA MANANCIAL', '42806330', 2, 469),
(29016, 171, '603522', 'ROBERTO RIVELINO SILVA ALVES', 'R SENHOR DO BONFIM', '42800560', 2, 257),
(29017, 171, '601115', 'ROBSON LIMA DOS SANTOS', 'CAM AMAPA', '42802050', 2, 302),
(29018, 171, '603630', 'SAMUEL DE SOUZA MATOS', 'R TAPAJOS', '42804750', 2, 251),
(29019, 171, '600719', 'SANDRO PAIM RANGEL', 'CAM QUARENTA E OITO', '42804480', 2, 463),
(29020, 171, '600277', 'SAULO MATOS SANTOS', 'RUA DAS MANGABEIRAS', '42800000', 2, 321),
(29021, 171, '603289', 'SERGIO RODRIGO FARIAS', 'AVENIDA RUI BARBOSA', '42843000', 2, 311),
(29022, 171, '601713', 'SERGIO SILVA SANTOS', 'R NOVA CAMACARI', '42802530', 2, 266),
(29023, 171, '601579', 'WILLIAN ALMEIDA OLIVEIRA', 'TV 2 ALTO DA BELA VISTA', '42840000', 2, 274),
(29024, 171, '604131', 'ALEXANDRO SOUSA DE SANTANA', 'AV TIRADENTES', '42840000', 38, 442),
(29025, 171, '600541', 'ALEXANDRO PEREIRA DOS SANTOS', 'JARDIM CIDADE NOVA QD 3 LOT 32', '42700000', 3, 222),
(29026, 171, '600437', 'ERIVALDO SACRAMENTO VITORIO', 'RUA SANTA RITA', '42700000', 3, 222),
(29027, 171, '601248', 'GLEIDSON EDUARDO MASCARENHAS DE SANTANA', 'RUA ABELARDO ANDREIA', '42700000', 3, 220),
(29028, 171, '601169', 'LUIS CARLOS FALCAO DE MORAES', 'RUA CRISPINIANO L OLIVEIRA', '42700000', 3, 222),
(29029, 171, '603532', 'LAERCIO SILVA DOS SANTOS', 'RUA PARQUE SAO LUIZ', '48280000', 10, 313),
(29030, 171, '603972', 'JULIANO LEFUNDES COELHO', 'RUA ALMIRANTE ERNESTO MELLO JUNIOR', '42810750', 1, 16),
(29031, 171, '601680', 'ADILSON CALASANS DE SANTANA JUNIOR', 'GERONIMO DE ALBUQUERQUE', '40450630', 1, 86),
(29032, 171, '603262', 'ALEX BARBOSA VIEIRA', 'Alto do Saldanha', '40280070', 1, 42),
(29033, 171, '601281', 'ALMIR GALDINO DE OLIVEIRA', 'RUA JOSE JOAQUIM SEABRA', '40024082', 1, 188),
(29034, 171, '601243', 'AMAURY MARQUES DE ARAUJO', 'Tenente Valmir Alcântara', '41150520', 1, 51),
(29035, 171, '603504', 'ANTONIO BISPO COSTA', 'RUA CLOVIS DE ALMEIDA MAIA', '40421080', 1, 197),
(29036, 171, '603678', 'GLATTISTON SILVA DOS SANTOS', 'R JORGE COSTA ANDRADE', '41310260', 1, 130),
(29037, 171, '601620', 'GUSTAVO COSTA BARRETO', 'RUA FAUNA', '41613900', 1, 68),
(29038, 171, '601166', 'JAILSON MEIRELES DOS SANTOS', 'RUA RAFAEL SILVA', '40389020', 1, 80),
(29039, 171, '600269', 'JOSE GENILTON MIRANDA FERREIRA', 'ANSILAS DO MENINO JESUS', '41315320', 1, 324),
(29040, 171, '603650', 'ONILDO SAMPAIO DA SILVA', 'R EUFROSINA MIRANDA', '40315490', 1, 133),
(29041, 171, '601958', 'RAFAEL LOPES DE SANTANA TAVARES', 'da Graça', '41620780', 1, 91),
(29042, 171, '601204', 'RICARDO FERREIRA CARNEIRO', 'CJ PIRAJA 1', '42290540', 1, 114),
(29043, 171, '603399', 'ROGERIO SANTOS SILVA', 'Teódulo de Albuquerque', '41181010', 1, 55),
(29044, 171, '603637', 'VINICIUS DA SILVA SANTOS', 'Colina Azul', '41245000', 1, 104),
(29045, 171, '603893', 'JEAN CARLOS CASADIA', 'RUA ABRAAO LINCON', '43700000', 6, 400),
(29046, 171, '603629', 'ANDERSON LUIS DA SILVA PINTO', 'RUA PORTO SEGURO', '43700000', 6, 409),
(29047, 171, '601519', 'ANTONIO CARLOS DA SILVA', 'RUA VISCONDE DE BARBACENA', '43700000', 6, 403),
(29048, 171, '601610', 'ANTONIO DAVI TEIXEIRA REIS', 'RUA DR MANOEL VITORINO', '43700000', 6, 400),
(29049, 171, '603070', 'ANTONIO FRANCISCO CORREIA DE VASCONCELOS', 'RUA MONTEIRO LOBATO', '43700000', 6, 398),
(29050, 171, '603518', 'DAVI SANTOS MIRANDA', 'CJ SIMOES FILHO I RUA G', '43700000', 6, 411),
(29051, 171, '603131', 'EDUARDO MONTEIRO SILVA', 'RUA ITAPEMIRIM', '43700000', 6, 303),
(29052, 171, '603468', 'EVANILSON NUNES DA SILVA', 'RUA COUTINHO CUNDO', '43700000', 6, 424),
(29053, 171, '601693', 'GENIVALDO DOS SANTOS MELO', 'RUA VALE DAS FONTES', '43700000', 6, 432),
(29054, 171, '603634', 'GILMAR ANASTACIO DE SOUZA', 'RUA VITORIA', '43700000', 6, 432),
(29055, 171, '603266', 'GILMAR LIMA DOS SANTOS', 'CAMINHO 3 QUADRA 8', '43700000', 6, 400),
(29056, 171, '603519', 'GILVAN DA SILVA MENDES', 'RUA ALMIRANTE BARROSO', '43700000', 6, 409),
(29057, 171, '603134', 'JAILTON MARTINS DA SILVA', 'TV VITAL BRASIL', '43700000', 6, 400),
(29058, 171, '603508', 'JEFERSON VICENTE DA SILVA', 'RUA JOSE DE JESUS ALELUIA', '43700000', 6, 400),
(29059, 171, '601641', 'JEFFERSON ASSIS PEREIRA DA SILVA', 'RUA DO VALE', '43700000', 6, 400),
(29060, 171, '603116', 'JOILSON DA SILVA CERQUEIRA', 'AV. CONTORNO', '43700973', 6, 434),
(29061, 171, '600937', 'JOSENILSON EVANGELISTA BORGES', 'ROD UNIVERSITARIA', '43700000', 6, 397),
(29062, 171, '603164', 'LEONARDO DA CRUZ PATTAS NEVES', 'RUA GENERAL LABATUT', '43700970', 6, 432),
(29063, 171, '601414', 'LUCIANO DOS SANTOS SILVA', 'R ENGENHEIRO PAULO MOREIRA', '43700000', 6, 432),
(29064, 171, '601647', 'MARCIO GLEIDE SOUZA DA SILVA', 'AV WASHINGTON LUIZ', '43700000', 6, 303),
(29065, 171, '601560', 'MARIO LENILSON SOUSA BARBOSA', 'RUA MACEIO', '43700000', 6, 308),
(29066, 171, '603274', 'NEIDSON ARAGAO DOS SANTOS', 'RUA PRESIDENTE MEDICI', '43700000', 6, 432),
(29067, 171, '603654', 'NEIDSON SOUZA DOS SANTOS', 'RUA COPA II CJ ILHA DE SAO JOAO', '43700000', 6, 391),
(29068, 171, '601386', 'RILDO ALVES DE JESUS', 'RUA PAULO VI', '43700000', 6, 432),
(29069, 171, '603404', 'ROGERIO SANTOS DOS ANJOS', 'CJ SIMOES FILHO I RUA G 08 - A', '43700000', 6, 411),
(29070, 171, '603467', 'SIDINEI SILVA DOS SANTOS', 'RUA CASTELO BRANCO', '43700000', 6, 435),
(29071, 171, '603635', 'TIAGO DA CONCEICAO FERREIRA', 'RUA RIO AMAZONAS', '42700000', 6, 400),
(29072, 172, '604257', 'DIEGO GONCALVES DE CARVALHO', 'Rua Monte Gordo', '42802500', 2, 267),
(29073, 172, '603125', 'ABILIO BISPO DOS SANTOS NETO', 'TV CONQUISTA', '42800510', 2, 361),
(29074, 172, '602076', 'ABRAAO SOARES GUEDES', 'CAMINHO ARACATUBA', '42801450', 2, 298),
(29075, 172, '603126', 'AILTON VIANA COSTA', 'CAM MANAUS', '42802180', 2, 302),
(29076, 172, '601751', 'ALAN JUNIOR ALMEIDA BARBOSA', 'LOT VERDES HORIZONTES RUA OLINDA', '42802540', 2, 281),
(29077, 172, '603130', 'DANILO ASSIS DOS SANTOS', '2 TRV RODAGEM', '42840000', 2, 482),
(29078, 172, '601897', 'DIEGO SANTOS SOUSA', 'R SEGUNDO SENDES', '42809150', 2, 461),
(29079, 172, '603316', 'ELDER NUNES DA SILVA', 'R LIBERDADE, DA BLOCO 11 APTO 02', '42809040', 2, 452),
(29080, 172, '601569', 'ENIVALDO GADELHA DA SILVA', 'RUA DA IUGOSLAVIA', '42850000', 2, 376),
(29081, 172, '601477', 'FABIO LUIS VIEIRA DO NASCIMENTO', 'R LIBERDADE', '42809040', 2, 452),
(29082, 172, '603558', 'FERNANDO MAURICIO GOMES FILHO', 'RUA COMUNITARIA', '42849910', 2, 277),
(29083, 172, '601926', 'FLAMARION FERREIRA DA COSTA', 'RUA EMILIANO ZAPATA', '42800970', 2, 315),
(29084, 172, '603318', 'IZAQUE JESUS DE MELO', 'RUA D', '42835000', 2, 264),
(29085, 172, '601930', 'JOSE CARLOS GOES DOS SANTOS', 'AV CONCENTRICA', '42809050', 2, 461),
(29086, 172, '600762', 'JOSE EDSON DE SANTANA', 'RUA JURACI MAGALHAES', '42800000', 2, 472),
(29087, 172, '603172', 'JOSE WILSON GUEDES DE JESUS', 'RUA ALMIRANTE TAMANDARE LOT PARQUE VERDE II', '42804790', 2, 291),
(29088, 172, '601146', 'JUNIO CAVALCANTI DA SILVA', 'AV LESTE', '42801170', 2, 476),
(29089, 172, '601645', 'LUCAS LACERDA MINAS NOVAS JUNIOR', 'CAM C, 8', '42802320', 2, 302),
(29090, 172, '600761', 'MARCIO LUIZ GARCIA', 'CAM A 21', '42802470', 2, 302),
(29091, 172, '600815', 'MARLON SANTANA DOS SANTOS', 'CAMINHO QUINZE', '42804150', 2, 463),
(29092, 172, '601780', 'RAPHAEL GLESE ROBERTO', 'RUA AUGUSTO SANDINO', '42800510', 2, 315),
(29093, 172, '601961', 'ROQUE BATISTA DOS SANTOS', 'RUA SUMARE', '42800970', 2, 315),
(29094, 172, '601882', 'SERGIO CARDOSO SANTOS', 'RUA ANTONIO BISPO SOUZA', '42806340', 2, 255),
(29095, 172, '603700', 'TIAGO CRUZ FERREIRA', 'RUA BOM JESUS', '42820000', 2, 276),
(29096, 172, '601714', 'WALDIRLOUR JOSE DA SILVA FERNANDES', 'TRAVESSA DO MORRO', '42849999', 2, 269),
(29097, 172, '604300', 'UELDER DO NASCIMENTO DOS SANTOS', 'RUA PADRE CICERO', '42850000', 5, 485),
(29098, 172, '603021', 'SILVIO CAMPOS DOS SANTOS', 'RUA JARDIM TARUMA QD 05', '42700000', 3, 222),
(29099, 172, '601633', 'CARLOS COSTA SILVA', 'RUY BARBOSA', '42800000', 10, 313),
(29100, 172, '603961', 'ALEX BATISTA SANTOS', 'Travessa José Carlos', '41330075', 1, 527),
(29101, 172, '603230', 'ADEMARIO PEREIRA DA SILVA', 'RUA B CONJ MATA ATLANTICA II - AL MATA ATLANTICA II 196 AP 201', '41705290', 1, 106),
(29102, 172, '602074', 'FABIO DE LEAO SAO PEDRO', 'Teodolina Macêdo Campos', '41341010', 1, 527),
(29103, 172, '600802', 'GILSON CEZAR SANTOS FRANCA JUNIOR', 'CJ DOM JOSE CORNELIS CAM-URBIS I 25', '41906045', 1, 524),
(29104, 172, '603378', 'MANUEL DO AMOR DIVINO', 'CASTRO ALVES', '40820080', 1, 128),
(29185, 172, '603084', 'MARCOS PEREIRA RODRIGUES', 'RUA NELSON MALEIRO', '40520366', 1, 147),
(29186, 172, '600824', 'RICARDO COSTA SILVA', 'São Geraldo', '41500350', 1, 97),
(29187, 172, '601657', 'WELINGTON ELIAS DOS SANTOS', 'da Consolação', '40720480', 1, 126),
(29188, 172, '601472', 'ADRIANO SANTOS DE JESUS', 'RUA C', '43700000', 6, 412),
(29189, 172, '600290', 'ANDRE FERNANDO PEREIRA MARTINS', 'RUA H', '43700000', 6, 436),
(29190, 172, '601407', 'IGOR LEONARDO SANTOS COSTA', 'TRAVESSA 1 BRAULIO MUNIZ 5 - A', '43700000', 6, 303),
(29191, 172, '603410', 'JORGE LUIZ DOREA SANTOS JUNIOR', 'RUA OSVALDO CRUZ', '43700000', 6, 406),
(29192, 172, '601373', 'ROBSON DE SOUZA SANTOS', 'RUA DA BABILONIA', '43700000', 6, 395),
(29193, 172, '603326', 'ROSEMBERG SILVA CARDOSO', 'TRAVESSA PRIMEIRA POTY', '43700000', 6, 425),
(29194, 173, '604253', 'ANTONIO CARLOS NASCIMENTO COSTA', 'Cond. Algarobas II Bl 15 Ap 0004', '42820000', 2, 469),
(29195, 173, '601754', 'COSMO GAMA DA SILVA TRINDADE', 'CAM D 08 RUA GUAPORE', '42802350', 2, 302),
(29196, 173, '603592', 'DARCIO COSTA DOS SANTOS', 'RUA TEREZOPOLIS', '42808310', 2, 342),
(29197, 173, '601071', 'DARLON SANTOS PIRES', 'R QUARTA DO PARQUE', '42809260', 2, 461),
(29198, 173, '601556', 'LAURO FERREIRA DOS SANTOS', 'INDUSTRIAL URBANA', '42802570', 2, 477),
(29199, 173, '601597', 'LUCAS BRITO DE SOUSA', 'RUA DA AURORA', '42849999', 2, 474),
(29200, 173, '601664', 'MARIA DELZA SILVA ARAUJO', 'R MONTE GORDO', '42802500', 2, 267),
(29201, 173, '601600', 'NAYNA GLEICE SILVA CHAVES FERREIRA', 'CAM C - RUA PIRAPORA', '42801450', 2, 298),
(29202, 173, '603286', 'REINALDO ALVES DA SILVA', 'LOT VERDES HORIZONTES', '42802540', 2, 281),
(29203, 173, '600717', 'WEDERSON SILVA SANTOS', 'RUA COQUEIRO DE AREMBEPE', '42835000', 2, 264),
(29204, 173, '603819', 'FABIO ALVES DA SILVA', 'RUA NSA SRA APARECIDA', '42850000', 5, 247),
(29205, 173, '603968', 'HELANYO MOTA CARNEIRO', 'Rua EMILIANO ZAPATA', '40391376', 1, 609),
(29206, 173, '600818', 'LUIZ HENRIQUE DE BRITO SOUZA TOSTA', 'ATERRO DO JOANES', '40470690', 1, 77),
(29207, 173, '602033', 'VALNEI DA CONCEICAO PAIXAO', 'RUA BELONITA', '40450175', 1, 86),
(29208, 173, '604357', 'LAZARO PROCOPIO DE SOUZA', 'C QUADRA 08 54 A', '43700000', 6, 411),
(29209, 173, '601293', 'EDMUNDO ALVES ANUNCIACAO', 'RUA E', '43700000', 6, 437),
(29210, 173, '603639', 'JUCELIO JOSE DE ARAUJO', 'RUA MACEIO', '43700000', 6, 418),
(29211, 173, '601614', 'MAURICIO DA SILVA SOUZA', 'RUA MACEIO', '43700000', 6, 417),
(29212, 173, '603406', 'NADSON VICENTE PEREIRA', 'RODOVIA BR 324 RIA DO CAMPO', '43700000', 6, 303),
(29213, 174, '603954', 'JOSEMAR SANTOS DA SILVA', 'Bom Jardim', '42805160', 2, 475),
(29214, 174, '603087', 'ADRIANO DA SILVA SANTOS', 'R GUARANYS', '42804730', 2, 251),
(29215, 174, '604277', 'ALAN ANTONIO VIEIRA DA PAZ', 'Condominio Begonia BL 09', '42803060', 2, 186),
(29216, 174, '603403', 'ANCELMO DIAS AMARAL', 'RUA DA LIBERDADE', '42809040', 2, 487),
(29217, 174, '603111', 'BRUNO VALDEIR FERREIRA COELHO', 'R ACACIA ROSA', '42804590', 2, 463),
(29218, 174, '603113', 'CLAUDIO DOS SANTOS DA CONCEICAO', 'RUA FERNANDA GAMA', '42804790', 2, 472),
(29219, 174, '603167', 'DENIS DA SILVA SOUZA', 'TRAVESSA NONA ACAJUTIBA', '42800970', 2, 186),
(29220, 174, '603156', 'EVERALDO DA CONCEICAO SANTOS', 'R ALGAROBAS, DAS', '42804620', 2, 463),
(29221, 174, '601927', 'FRANCISCO ALMEIDA DE SOUZA JUNIOR', 'R SEGUNDA LIGACAO', '42809180', 2, 461),
(29222, 174, '603319', 'JOAO MARCIO MIRANDA GALIZA', 'RUA BOM JESUS', '42820000', 2, 276),
(29223, 174, '601822', 'JOCIVAL CARVALHO TEIXEIRA', 'R PONCIANO DE OLIVEIRA', '42800100', 2, 456),
(29224, 174, '603069', 'VALDINEI GOMES DOS SANTOS', 'R GUARANYS', '42804730', 2, 251),
(29225, 174, '601949', 'ANTONIO LIMA BOMFIM DIAS JUNIOR', 'TOMAZ GONZAGA', '41130000', 1, 49),
(29226, 174, '600173', 'DERIVALDO SOUZA SANTOS PRADO', 'RUA FERNANDO MASCARENHAS', '41291160', 1, 516),
(29227, 174, '603411', 'EDSON NASCIMENTO DA SILVA', 'RUA NOSSA SENHORA DO RESGATE', '4115200', 1, 52),
(29228, 174, '603672', 'MARCIO SANTOS DE JESUS', 'da Aurora', '40717010', 1, 121),
(29229, 174, '604275', 'ALAN ARAUJO DOS SANTOS', 'Rua Inocencio Antonio da Rocha', '43700000', 6, 432),
(29230, 174, '603052', 'IVONALDO PRIMO DE JESUS', 'RUA BARREIRAS', '43700000', 6, 413),
(29231, 174, '601953', 'JEOVAN DE JESUS SOUZA', 'RUA A. QD 2', '43700971', 6, 394),
(29232, 174, '601410', 'JOSE CARLOS DA SILVA JUNIOR', 'RUA VISCONDE DE BARBACENA Nº 32 - B', '43700000', 6, 403),
(29233, 175, '604315', 'MARCELO NERI DE SANTANA', 'Bom Jardim', '42805160', 2, 475),
(29234, 175, '601898', 'ANDRE LUIS DOS SANTOS ASSIS', 'LOT ALTO DO TRIANGULO', '42807180', 2, 259),
(29235, 175, '603707', 'ARIVALDO ALVES DAS VIRGENS', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(29236, 175, '603281', 'CARLOS AUGUSTO FERREIRA DOS SANTOS', '1ª TRAVESSA DO ROSARIO', '42800260', 2, 452),
(29237, 175, '603114', 'CLEDISON SIMAO DOS REIS', 'PARQUE VERDE I', '42804780', 2, 472),
(29238, 175, '601661', 'CLEITON DA SILVA RODRIGUES', 'CAM C 02', '42801470', 2, 298),
(29239, 175, '603494', 'DANTE ROQUE SILVA FERREIRA', 'RUA DO ANGICO', '42849000', 2, 456),
(29240, 175, '601482', 'EDEMILTON ALVES DOS SANTOS', 'RUA DO ANGICO', '42849000', 2, 277),
(29241, 175, '601358', 'EDER DE MIRANDA GOMES', 'INDUSTRIAL URBANA RESID VERDE VILLE', '42802570', 2, 372),
(29242, 175, '601024', 'EVALDO DE JESUS BOMFIM', 'RUA MACHADINHO', '42849000', 2, 358),
(29243, 175, '600093', 'GEORGE RICCIARDI MOREIRA DE ASSIS', 'R FEIRA DE SANTANA', '42803030', 2, 186),
(29244, 175, '600361', 'HELTTON COELHO SILVA', 'Santa Tereza', '42806180', 2, 454),
(29245, 175, '603170', 'JACO FERREIRA LIMA', 'RUA DIREITA DE PE DE AREIA', '42843000', 2, 468),
(29246, 175, '601834', 'JAILSON DE JESUS RIBEIRO', 'TERESINA', '42805130', 2, 475),
(29247, 175, '603321', 'JONADABE DE OLIVEIRA JARDIM', 'RUA AREMBEPE APTO 301 BL 584', '42801060', 2, 267),
(29248, 175, '603702', 'JONILDO ALMEIDA REIS', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(29249, 175, '601143', 'JOSE CARLOS SANTOS DE JESUS', 'RUA ULISSES GUIMARAES', '42809130', 2, 461),
(29250, 175, '603632', 'JOSEMAR DA SILVA BATISTA', 'R MOREIRA CESAR', '42807140', 2, 454),
(29251, 175, '603055', 'JOSIAS CARDOSO DOS SANTOS', 'R OITAVA DO PARQUE', '42809300', 2, 461),
(29252, 175, '603376', 'JOSIVAN BRITO NASCIMENTO', 'AV INDUSTRIAL URBANA BLOCO 09 APTO 002', '42802570', 2, 340),
(29253, 175, '603056', 'LUSVALDO MENESES FERREIRA LOPES JUNIOR', 'R ACACIA ROSA', '42804590', 2, 463),
(29254, 175, '601956', 'MARCIO PEREIRA SANTOS', 'R BELEM', '42805120', 2, 475),
(29255, 175, '603285', 'MARCOS DO ESPIRITO SANTO BARBOSA', 'RUA ITAIPU', '42820000', 2, 528),
(29256, 175, '603586', 'MOZER DE SOUZA SANTOS', 'SEGUNDA TRAVESSA AVENIDA  SUL', '42801070', 2, 267),
(29257, 175, '601777', 'ODEMIR DE OLIVEIRA SOUZA', 'RUA DA CONQUISTA', '42800510', 2, 315),
(29258, 175, '600170', 'PAULO CESAR SANTANA DAS VIRGENS', 'RUA SÃO BENTO  S/N', '42840000', 2, 274),
(29259, 175, '601710', 'ROBSON PINTO BRUNO', 'R DA MANOELA', '42807330', 2, 460),
(29260, 175, '601139', 'RUI SERGIO DOS SANTOS MONTEIRO', 'RUA DO TELEGRAFO', '42809000', 2, 330),
(29261, 175, '603551', 'UBIRATAN DE MELO FERREIRA', 'RUA PAJUSSARA', '42800000', 2, 289),
(29262, 175, '601929', 'ULISSES RODRIGUES DE JESUS', 'R BELA VISTA', '42808020', 2, 461),
(29263, 175, '600119', 'JOFRAN FABIO DIAS BATISTA DOS SANTOS', 'RUA NOVA', '42800000', 5, 237),
(29264, 175, '601431', 'JOSE ROQUE DE AZEVEDO PINHO NETO', 'RUA EMBIRA', '42850000', 5, 246),
(29265, 175, '603287', 'REINALDO BISPO DOS SANTOS', 'AVENIDA ALVORADA', '42850000', 5, 244),
(29266, 175, '603738', 'SADRAQUE DE SOUZA ARNAOUTTE', 'SENHOR DO BOMFIM', '42850000', 5, 295),
(29267, 175, '691313', 'JULIA DA SILVA SANTOS MEDINA', 'PROFESSOR THEODORO BATISTA', '42700000', 3, 225),
(29268, 175, '601920', 'ADRIANO DA ENCARNACAO ORNELA', 'JOAO CAFE FILHO', '42808000', 3, 222),
(29269, 175, '603063', 'ALISSON CESAR DE JESUS', 'RUA BEM TE VI', '41260090', 1, 105),
(29270, 175, '603510', 'ANDRE CARDOSO MACHADO', 'Travessa Joao Teles', '41330020', 1, 510),
(29271, 175, '603509', 'CARLOS JOSE BARBOSA VIEIRA', 'TABAJARA', '40275020', 1, 43),
(29272, 175, '600106', 'MARCELO PINTO DOS REIS JUNIOR', 'R ARISTOTELES DA COSTA LEAL - CS 37B', '41650400', 1, 69),
(29273, 175, '603072', 'MOISES SANTOS SUZARTE', 'Antônio Costa', '40240225', 1, 81),
(29274, 175, '603058', 'WASHINGTON DOS SANTOS DE JESUS', '10 de Agosto', '41120680', 1, 49),
(29275, 175, '603387', 'WILLIAM DOUGLAS DA SILVA', 'José Praxedes', '40421200', 1, 136),
(29276, 175, '604314', 'ADRIANO DE SOUZA ARAUJO', 'MOGI GUACO, 37', '43700000', 6, 432),
(29277, 175, '601567', 'CARPEGIANE SILVA DOS SANTOS', 'RUA DA JANGUERA', '43700000', 6, 432),
(29278, 175, '603066', 'LUCAS GABRIEL DA HORA DOS SANTOS', 'AV CAMACARI', '43700000', 6, 420),
(29279, 176, '604303', 'SAMUEL GAMA DE SOUSA', 'Nova Esperança', '42800650', 2, 257),
(29280, 176, '600941', 'AQUILA DE JESUS SANTANA', 'RUA SEIS', '42800000', 2, 186),
(29281, 176, '601068', 'CHARLES DIAS DE AQUINO MACHADO', 'RUA OSASCO', '42800000', 2, 344),
(29282, 176, '603934', 'FELIPE GOMES HERCULANO', 'CAMINHO PAU BRASIL', '42803120', 2, 186),
(29283, 176, '601469', 'INACIO DE ASSIS DUARTE JUNIOR', 'RUA DA RODAGEM    SN', '42840000', 2, 274),
(29284, 176, '601651', 'RAUL MARTINS DOS SANTOS', 'AV RIO BANDEIRA', '42807171', 2, 464),
(29379, 176, '601660', 'ALBERTO LUIS DA CRUZ BRITO', 'LOTEAMENTO PROJETO VIDA NOVA', '42700000', 3, 225),
(29380, 176, '600804', 'ALEX CHAVES DA SILVA', 'RUA 31 DE DEZEMBRO', '40470246', 1, 77),
(29381, 176, '601285', 'ANDRE LUIS SANTOS SOUSA', 'CONJ CAJ XI CAM 09 QD C', '41341550', 1, 527),
(29382, 176, '601113', 'ROBERTO FERREIRA BRITO', 'RUA SAO FELIX', '43700000', 6, 414),
(29383, 177, '604309', 'MARIA JOSE PAULINO NETO', 'Rua Dois de Maio', '42800520', 2, 456),
(29384, 177, '600755', 'ALEXSANDRO LIMA DAMASCENO', 'CAM C 11', '42801550', 2, 298),
(29385, 177, '603922', 'ALMIR COSTA DE LIMA', 'R FLORES II, DAS', '42804000', 2, 463),
(29386, 177, '601283', 'ALTAMIRANDO BORGES RAMOS JUNIOR', 'R DO TELEGRAFO', '42809000', 2, 452),
(29387, 177, '603552', 'ANDRE DA SILVA FERNANDES', 'LOT PARQUE VERDE I', '42804780', 2, 472),
(29388, 177, '603553', 'ARIVALDO MESSIAS COELHO JUNIOR', 'RUA SANTA MARIA AP 101', '42806340', 2, 469),
(29389, 177, '600986', 'DAVI DE JESUS PIEDADE', 'R ESPATODIAS', '42804610', 2, 463),
(29390, 177, '603366', 'DIEGO MENDES DE BRITO', 'R SUCUPIRA', '42809400', 2, 321),
(29391, 177, '602098', 'EDNALDO BONIFACIO DOS SANTOS', 'R SANTA LUZ', '42805330', 2, 475),
(29392, 177, '603016', 'GERSON LOPES SILVA', 'RUA DOS CRENTES', '42806100', 2, 358),
(29393, 177, '603267', 'GILTON SOARES DE OLIVEIRA', 'R SANTA ROSA', '42807010', 2, 454),
(29394, 177, '603373', 'ITAMAR OLIVEIRA CORDEIRO', 'R OTAVIO MANGABEIRA', '42806230', 2, 469),
(29395, 177, '601087', 'JADSON LOPES DE JESUS', 'RUA DOS NOIVOS', '42805010', 2, 449),
(29396, 177, '603032', 'JOAO BOSCO BARBOSA ALENCAR', 'RUA JARDIM DE ALA', '42802540', 2, 281),
(29397, 177, '603418', 'JOENILTON OLIVEIRA MACHADO', 'R UA ABARE  02', '42803050', 2, 186),
(29398, 177, '600453', 'JOSE ENOS LOPES DE SANTANA', 'RUA PETROLINA', '42802540', 2, 281),
(29399, 177, '600383', 'LEANDRO SANTOS DE LIMA', 'QUADRA VERMELHA', '42800000', 2, 289),
(29400, 177, '600442', 'LEONI DOS ANJOS CONCEICAO', 'RUA E,  RECANTO DAS ARVORES', '42800000', 2, 251),
(29401, 177, '603653', 'LIOMAR DA SILVA DOS SANTOS', 'R SEIS DO CANAL', '42807560', 2, 460),
(29402, 177, '603019', 'MACIVALDO DA SILVA CARDOSO', 'AV INDUSTRIAL URBANA', '42801170', 2, 476),
(29403, 177, '601740', 'MARCIA VITORIO DOS SANTOS', 'RUA DAS LARANJEIRAS', '42809350', 2, 321),
(29404, 177, '601704', 'MARCOS ROBERTO REGIS BRANDAO', 'R VILA SAO PEDRO', '42801140', 2, 476),
(29405, 177, '603920', 'RAMILTON DA CRUZ JUNIOR', 'R DO SERENO', '42802330', 2, 302),
(29406, 177, '603020', 'REGINALDO DA SILVA', 'R CRUZ DAS ALMAS', '42805510', 2, 474),
(29407, 177, '603214', 'RICARDO DOS SANTOS BOMFIM', 'R DA CURVA GRANDE', '42809230', 2, 461),
(29408, 177, '600123', 'ROBENILSON GARCIA DOS SANTOS', 'R DECIMA DO PARQUE', '42809320', 2, 461),
(29409, 177, '601828', 'RONALDO DE OLIVEIRA MOTA', 'ESTRADA 24', '42800000', 2, 467),
(29410, 177, '601259', 'ROZIMEIRE DOS SANTOS DE JESUS', 'CAM C 06', '42802280', 2, 302),
(29411, 177, '603843', 'SIMONARA PATRICIA MOREIRA FARIAS', 'GARCIA D AVILA', '42850000', 5, 239),
(29412, 177, '601286', 'ANDRE LUIZ DOS SANTOS FERREIRA', 'GARCIA D AVILA 99 AP01', '42850000', 5, 238),
(29413, 177, '600831', 'CLAUDIO SOUZA', 'RUA DA MANGUEIRA', '42850000', 5, 295),
(29414, 177, '603844', 'IGOR MATOS SANCHES', 'Eduardo dalto', '40810630', 1, 128),
(29415, 177, '600985', 'ANDRE JOSE SANTOS DA SILVA', 'Fazenda Grande III', '41340160', 1, 527),
(29416, 177, '601054', 'ANDRE LUIS DE SOUZA ROCHA', 'CJ HABITACIONAL SUSSUARANA', '41213780', 1, 75),
(29417, 177, '602017', 'DAMAR SANDBRAND NISIPEANU', 'RUA C PQ JOAO XXIII', '40220050', 1, 610),
(29418, 177, '603715', 'JURANDIR CORREIA DA SILVA', 'da Gratidão', '41650195', 1, 69),
(29419, 177, '603385', 'VALDIR MARINHO DE SOUZA JUNIOR', 'SAO CRISTOVAO', '40820180', 1, 128),
(29420, 177, '603386', 'WELLINGTON GONZAGA DA SILVA', 'Colinas de Periperi', '40725430', 1, 125),
(29421, 177, '604141', 'RAMON SANTOS DE JESUS', 'AV ANTONIO CARLOS MA', '43700000', 6, 303),
(29422, 177, '601284', 'ANAILTON MENEZES DOS SANTOS', 'RUA LAGO AZUL', '43700000', 6, 426),
(29423, 177, '601766', 'JOAO CALMON DE JESUS FILHO', 'CONDOMINIO RECANTO DOS PASSAROS', '43700000', 6, 403),
(29424, 177, '601557', 'LUIZ ARMSTRONG DOS SANTOS DAS VIRGENS', 'ROD UNIVERSITARIA CJ. VIDA NOVA', '43700000', 6, 403),
(29425, 177, '603652', 'VICTOR ATILA DOS SANTOS FRANCA', 'RUA MANGABEIRA', '43700000', 6, 428),
(29426, 237, '691326', 'ITAMARA DE JESUS SILVA PASSOS', 'Avenida Industrial Urbana', '42802570', 2, 477),
(29427, 237, '603543', 'ADEMILTON DOS SANTOS', 'RUA ALMIRANTE TAMANDARE', '42800000', 2, 291),
(29428, 237, '600202', 'ALEXANDRE CICERO DA SILVA', 'MARIA EMILIA', '42807020', 2, 454),
(29429, 237, '600944', 'ALEXANDRO SOUZA DOS SANTOS', 'R UNIAO', '42805410', 2, 474),
(29430, 237, '602066', 'ANA PAULA DE SOUZA BRANDAO', 'RUA  ESPERANCA', '42805360', 2, 474),
(29431, 237, '603028', 'ATANAEL ARAUJO DE SOUZA', 'RUA ALMIRANTE TAMANDARE', '42800001', 2, 291),
(29432, 237, '601294', 'EDNALDO SEVERINO DE LIMA', 'R QUINTA DO PARQUE', '42809270', 2, 461),
(29433, 237, '603938', 'ELIABE DOS SANTOS NASCIMENTO', 'Rua Dez do Canal', '42807600', 2, 460),
(29434, 237, '603168', 'HANS BRUNNI DOS SANTOS BARBOSA', 'CAMINHO MONTE ALTO', '42800970', 2, 456),
(29435, 237, '603269', 'JOILSON ARAUJO DE JESUS', 'RUA C', '42806340', 2, 469),
(29436, 237, '602024', 'JOSE CARMO DA SILVA', 'LOT VERDES HORIZONTES, RUA CANTA GALO', '42802540', 2, 281),
(29437, 237, '603162', 'JOSE MARCOS SANTOS DE JESUS', 'AVENIDA INDUSTRIAL URBANA', '42849000', 2, 277),
(29438, 237, '600444', 'JOSE WAGNER DO NASCIMENTO LOBO', 'AV DO CONTORNO', '42800970', 2, 257),
(29439, 237, '601553', 'JOSENILDO LIMA SANTOS', 'RUA DAS LARANJEIRAS', '42804780', 2, 472),
(29440, 237, '601555', 'JOSUE FONSECA COSTA', 'SEGUNDA CENDES', '42809120', 2, 461),
(29441, 237, '603033', 'LEANDRO NUNES DOS SANTOS', 'R LIBERDADE,', '42809040', 2, 452),
(29442, 237, '603457', 'LUCIANO DOS SANTOS PACHECO', 'RUA CATU ABRANTES', '42849000', 2, 535),
(29443, 237, '603174', 'LUIZ FABIO DA SILVA', 'PRIMEIRA TRAVESSA AVENIDA SUL', '42805230', 2, 267),
(29444, 237, '603035', 'MANOEL CAETANO DA SILVA JUNIOR', 'CAM SABARA', '42801480', 2, 298),
(29445, 237, '601135', 'MARCELO RIBEIRO DOS SANTOS', 'CAM 01', '42800000', 2, 186),
(29446, 237, '603036', 'NAILSON SILVA DA CONCEICAO', 'R EIXO URBANO CENTRAL', '42800110', 2, 456),
(29447, 237, '601574', 'NATANAEL OLIVEIRA SOUZA', 'R EIXO B', '42801220', 2, 298),
(29448, 237, '603608', 'PAULO HENRIQUE DOS SANTOS C DE OLIVEIRA', 'AV SUL', '42801070', 2, 267),
(29449, 237, '601891', 'RICARDO DE MENEZES OLIVEIRA LIMA', 'R SETIMA DO PARQUE', '42809290', 2, 461),
(29450, 237, '603384', 'RICARDO SANTOS SILVA', 'RUA EIXO 04', '42802550', 2, 281),
(29451, 237, '604067', 'ROBEVONE SILVA RIOS', 'RUA DA LIBERDADE COM PARQUE SATELITE', '42809040', 2, 452),
(29452, 237, '603640', 'ROSENILDO ALVES DOS SANTOS', 'RUA CONCEICAO AREMBEPE', '42835000', 2, 264),
(29453, 237, '602053', 'ZULEIDE DOS SANTOS REIS LIMA', 'AV.INDUSTRIAL URBANA', '42802570', 2, 476),
(29454, 237, '604198', 'ADELMO CARLOS SILVA LIMA', 'RUA SAO BENTO', '42840000', 38, 443),
(29455, 237, '604136', 'JEFFERSON FELIPE FERREIRA BARROS', 'RUA HEITOR DIAS', '42850000', 5, 295),
(29456, 237, '603590', 'FERNANDO NOBRE DE LIRA', 'RUA CAMILO TORREND', '42850000', 5, 241),
(29457, 237, '601483', 'MARIA DA PAZ FERREIRA SANTOS', 'RUA PADRE CAMILLO TORREND', '42850000', 5, 241),
(29458, 237, '604132', 'EDNALDO PATRICIO FONSECA', 'Conjunto Engenheiro Antônio Franco', '41305000', 1, 112),
(29459, 237, '601177', 'ADISON LUIZ BATISTA MARQUES', 'TV BOA FE Nº 9E', '41235385', 1, 104),
(29460, 237, '600651', 'ANDERSON LUIS SANTOS ALVES', 'CJ COLINA DO PITUACU', '41250520', 1, 106),
(29461, 237, '603367', 'EDENILSON BIBIANO', 'RUA VILA DE ISRAEL', '40353210', 1, 81),
(29462, 237, '600641', 'EDICLEITO SANTOS DE OLIVEIRA', 'RUA DA ALEGRIA', '40000000', 1, 187),
(29463, 237, '603603', 'FABIO MACHADO RIBEIRO', 'Nestor Duarte', '40391200', 1, 80),
(29464, 237, '601801', 'GILVA DA CONCEICAO SOUSA', 'R NOSSA SENHORA DA CONCEICAO', '41620700', 1, 91),
(29465, 237, '602073', 'LUCIANO CERQUEIRA DE JESUS', 'Santo Antônio da Mata Escura', '41225400', 1, 72),
(29466, 237, '604311', 'RIVALDO ALVES DA SILVA', 'R PRIMEIRO DE JANEIRO', '40393190', 1, 78),
(29467, 237, '603706', 'ROSELITO SANTANA XAVIER', 'Direta de Mussurunga', '41490040', 1, 98),
(29468, 237, '604217', 'FRANKLIN AMARAL DA SILVA', 'Rua da Alegria', '43700000', 6, 403),
(29469, 237, '602044', 'ANDRE BRITO DA SILVA', 'AV JOAO 23', '43700000', 6, 432),
(29470, 237, '603575', 'BARBARA CRISTINA OLIVEIRA MACHADO', 'RUA DO EGITO', '43700000', 6, 303),
(29471, 237, '602095', 'CLAUDETE DE OLIVEIRA MOTA', 'RUA VITORIA', '43700000', 6, 179),
(29472, 237, '603668', 'CLEBER DE CARVALHO CONCEICAO', 'RUA TOPAZIO', '43700000', 6, 413),
(29473, 237, '601547', 'FABIO BATISTA DOS SANTOS', 'RUA VALE DAS FONTES', '43700000', 6, 430),
(29474, 178, '604065', 'VALTER BARRETO DOS SANTOS JUNIOR', 'Limoeiro', '42802580', 2, 467),
(29475, 178, '600751', 'ADAUTO BARBOSA DA CONCEICAO', 'RUA DO JACARE', '42800000', 2, 611),
(29476, 178, '603105', 'ADINAILSON MAGALHAES SANTOS', 'TERRA II', '42802100', 2, 464),
(29477, 178, '603581', 'ADRIANO PINHEIRO SOUZA', 'RUA DO FLAMINGO', '42843000', 2, 274),
(29478, 178, '603106', 'AGNALDO FERREIRA JUNIOR', 'RUA NAZARE', '42804780', 2, 472),
(29479, 178, '601495', 'ALAN MAURICIO DE BRITO DOS SANTOS', 'R ONZE DO CANAL', '42807610', 2, 460),
(29480, 178, '600095', 'ALAN MICHEL ARAUJO VASCONCELLOS', 'AV INDUSTRIAL URBANO', '42850570', 2, 476),
(29481, 178, '603511', 'ALBERTO LUIS OLIVEIRA DE ARAUJO', 'RUA DA GRAVIOLA', '42800000', 2, 612),
(29482, 178, '600601', 'ALEXSANDRO DOS SANTOS', 'RUA A VILLA LUIZA MARIA', '42800000', 2, 469),
(29483, 178, '603251', 'AMAURI BARBOSA DA SILVA', 'R DA ESPERANCA', '42805270', 2, 475),
(29484, 178, '603026', 'ANANIAS FERREIRA DE ALMEIDA', 'R COSME DE FARIAS', '42805400', 2, 474),
(29485, 178, '602079', 'ANDERSON CORBACHO DOS SANTOS', 'RUA QUARENTA E SEIS', '42804460', 2, 257),
(29486, 178, '603627', 'ANDERSON DE OLIVEIRA SANTOS', 'RUA RECANTO DAS ARVORES', '42800001', 2, 373),
(29487, 178, '603197', 'ANSELMO OLIVEIRA JESUS DOS SANTOS', 'RUA BRUMADO', '42801530', 2, 298),
(29488, 178, '600867', 'ANTONIO CLAUDIO DOS REIS SOUZA', 'RUA DA CICLOVIA', '42800000', 2, 475),
(29489, 178, '601686', 'ANTONIO GOMES FILHO', 'RUA DO CRAVO', '42800001', 2, 311),
(29490, 178, '600587', 'ANTONIO GUILARDUCCI NETO', 'R DOIS DE JULHO', '42800630', 2, 257),
(29491, 178, '601393', 'ANTONIO LUIZ SANTOS', '3º TRAV ACAJUTIBA Q 9 LOT 02', '42804650', 2, 186),
(29492, 178, '603445', 'ANTONIO RENATO DE OLIVEIRA SANTOS', 'CONJ PRAIA DE INTERLAGOS', '42849000', 2, 267),
(29493, 178, '600619', 'ARIVALDO NUNES JUNIOR', 'RUA ANTONIO FELIX MARTINS', '42800000', 2, 472),
(29494, 178, '603623', 'ARMANDO DOS SANTOS PIEDADE', 'RUA SAO ROQUE', '42810000', 2, 274),
(29495, 178, '600204', 'AROLDO DE ALMEIDA CAMPOS', 'AV RADIAL A', '42807000', 2, 479),
(29496, 178, '600266', 'CARLOS ALBERTO SANTOS TEIXEIRA', 'RUA CLIMERIO DE OLIVEIRA', '42800000', 2, 367),
(29497, 178, '600228', 'CARLOS ALBERTO TAVARES SANTOS', 'RUA LOT MOENDAS DE JAUA', '42800000', 2, 468),
(29498, 178, '601688', 'CARLOS AUGUSTO GONCALVES ALMEIDA', 'rua do areial', '42806340', 2, 311),
(29499, 178, '603364', 'CARLOS AUGUSTO SA DOS SANTOS', 'RUA SANTA MARIA APTO 01 BLOCO 20', '42806340', 2, 469),
(29500, 178, '601466', 'CARLOS GUTEMBERG DA SILVA', 'R AURORA', '42805490', 2, 474),
(29501, 178, '600483', 'CARLOS PONTES DA SILVA', 'INDUSTRIAL URBANA', '42802570', 2, 477),
(29502, 178, '603223', 'CELIO GONCALVES DOS SANTOS', 'R NOVA DO TRIANGULO', '42807100', 2, 479),
(29503, 178, '603571', 'CIMARIO PEREIRA DOS ANJOS', 'AV RIO BANDEIRA III', '42800230', 2, 452),
(29504, 178, '603365', 'CLAUDEHILTON CARLOS DOS SANTOS COSTA', 'CAMINHO SERRA DOURADA', '42804180', 2, 463),
(29505, 178, '601812', 'CLAUDIO BATISTA FRANCA', 'R CANARIO', '42807030', 2, 454),
(29506, 178, '601381', 'CLAUDIO ROBERTO MEDRADO SANTIAGO', 'R OTAVIO MANGABEIRA', '42806230', 2, 469),
(29507, 178, '601137', 'CLAUDIONOR SOUZA ALMEIDA', 'TV 2', '42800000', 2, 321),
(29508, 178, '602016', 'CLOVISON FREITAS DE OLIVEIRA', 'R LIBERDADE', '42809040', 2, 260),
(29509, 178, '602067', 'DANIEL SOUZA DOS SANTOS', 'RUA DIRETA DE JAUA', '42843000', 2, 468),
(29510, 178, '603282', 'DENIS DA SILVA RAMOS', 'RUA GAJERUS', '42843000', 2, 468),
(29511, 178, '603039', 'DEVANILSON BARACHO DE SA', 'INDUSTRIAL URBANA', '42802570', 2, 372),
(29512, 178, '603264', 'DIEGO DA SILVA SOUZA', 'CAMINHO C 2', '42801460', 2, 298),
(29513, 178, '602097', 'DOMINGOS DA SILVA DO NASCIMENTO', 'LOT PARQUE VERDE I', '42804780', 2, 472),
(29514, 178, '600956', 'EDENILSON DA MATA BATISTA', 'RUA DOS ARTISTAS', '42800000', 2, 611),
(29515, 178, '601730', 'EDER NEIDSON DOS SANTOS DE JESUS', 'TV PONCIANO DE OLIVEIRA', '42800250', 2, 456),
(29516, 178, '601473', 'EDMILSON ARAUJO DE SANTANA', 'CAM C 3', '42802240', 2, 302),
(29517, 178, '603665', 'EDMILSON FIGUEIREDO FONSECA', 'R GUARANYS', '42804730', 2, 251),
(29518, 178, '600901', 'EDVAL MARQUES BISPO', 'R TERRA NOVA', '42805300', 2, 475),
(29519, 178, '600268', 'ELBER DE SOUZA MOREIRA', 'RUA ESMERINO NETO', '42825000', 2, 328),
(29520, 178, '600397', 'ELIEL FELIX DE SANTANA', 'RUA CAMPINAS', '42801310', 2, 298),
(29521, 178, '600497', 'ELISANGELO SILVA DE JESUS', 'R SEXTA DO PARQUE', '42809280', 2, 461),
(29522, 178, '601192', 'EMERSON DE SOUSA PIMENTA', 'R BELMONTE', '42805190', 2, 475),
(29523, 178, '600820', 'ERICO BARRETO DE SOUZA MOREIRA', 'TV DOIS DE MAIO', '42800530', 2, 456),
(29524, 178, '601193', 'ERISVALDO BALBINO DOS SANTOS FILHO', 'Avenida Lauro de Freitas', '42804780', 2, 282),
(29525, 178, '603368', 'ESDRAS DOS REIS SOUZA', 'SEGUNDA TRAVESSA MANANCIAL', '42806330', 2, 469),
(29526, 178, '601692', 'ETIENE MARTINS DOS SANTOS', 'G E RUA DA SORETA', '42802460', 2, 459),
(29527, 178, '603541', 'EUCLIDES DOS SANTOS REIS', 'RUA DA AREIA', '42849000', 2, 338),
(29528, 178, '603565', 'FABIO ANGELO SILVA PEREIRA', 'RUA IBICARAI', '42803060', 2, 186),
(29529, 178, '603001', 'FABIO OLIVEIRA DE SANTANA', 'LOT FONTA DAS PEDRAS', '42835971', 2, 264),
(29530, 178, '603370', 'FERNANDO ANTONIO GOMES DA SILVA', 'RUA DIRETA DE JAUA', '42843994', 2, 468),
(29531, 178, '603015', 'FLORISVALDO DE SANTANA NETO', 'AV  INDUTRIAL URBANA, COND RESIDENCIAL CAMACARI LIFE', '42801170', 2, 476),
(29532, 178, '601790', 'FRANKLIN CARLOS PAIXAO SANTOS', 'Acácia Amarela', '42804570', 2, 463),
(29533, 178, '604145', 'FRANKLIN DE LIMA ARAUJO JUNIOR', 'RUA PETROLINA QUADRA 2 LT 08', '42802540', 2, 281),
(29534, 178, '601549', 'FREDERICO BRANDAO CARDOSO', 'R MARIA EMILIA, SN', '42807020', 2, 454),
(29535, 178, '600313', 'GEOVAN SANTOS SILVA', 'R NOVA ESPERANCA', '42800650', 2, 257),
(29536, 178, '603371', 'GILSON ALVES DA SILVA', 'RUA DO ANGICO', '42849000', 2, 277),
(29537, 178, '601083', 'GILVAN CARDOSO GOMES', 'LOT SOL NASCENTE BARRA DE JACUIPE', '42808110', 2, 276),
(29538, 178, '600538', 'GILVAN FRANCA DOS SANTOS', 'RESID VERDE VILLE', '40000000', 2, 476),
(29539, 178, '601196', 'GILVAN LEONARDO SANTOS DA PAIXAO', 'R UM DO CANAL', '42807510', 2, 460),
(29540, 178, '601694', 'GIVALDO REGES DOS SANTOS', 'RESIDENCIAL CAMINHO DO MAR II', '42801110', 2, 278),
(29541, 178, '603512', 'HERON CANTUARIO LIMA', 'RUA DO PINHO', '42849000', 2, 370),
(29542, 178, '601638', 'IOLANDA DA FRANCA SANTOS', 'RUA DAS CAJARANAS', '42804780', 2, 472),
(29543, 178, '603402', 'IRAN NASCIMENTO ALVES', 'RUA AUGUSTO ALCANTARA', '42847000', 2, 274),
(29544, 178, '603597', 'ISAAC DOS ANJOS MAURICIO', 'RUA DO ANGICO', '42800000', 2, 613),
(29545, 178, '602046', 'ISMAEL SILVA DE JESUS', 'CAM MANAUS', '42802390', 2, 302),
(29546, 178, '602068', 'ITALO BRUNO CORREIA MARTINS', 'RUA DOS PASSAROS', '42806200', 2, 349),
(29547, 178, '601872', 'JACKSON ALVES DOS SANTOS', 'RUA A', '42849000', 2, 352),
(29548, 178, '600624', 'JANO DE SOUZA CAVALCANTE', 'RUA DA CARAUNA 2A', '42800000', 2, 264),
(29549, 178, '603943', 'JEFERSON GARCIA DA CUNHA', 'Avenida Rio Camaçari', '42806100', 2, 454),
(29550, 178, '603374', 'JEREMIAS ALMEIDA BELAS', 'R LIBERDADE, DA BLOCO 2 APTO 204', '42809040', 2, 260),
(29551, 178, '603005', 'JETTER CERQUEIRA LOPES', 'R SETIMA DO PARQUE', '42809290', 2, 461),
(29552, 178, '601698', 'JOAO PASSOS DE JESUS', 'LOT ALTO DO TRIANGULO', '42807180', 2, 479),
(29553, 178, '601089', 'JOAO PAULO PASSOS DE JESUS', 'LT MARINA RIO POJUCA', '42825000', 2, 328),
(29554, 178, '603045', 'JOCELIN FRANCA DOS SANTOS', 'CORONEL TAMARINDO', '42807120', 2, 469),
(29555, 178, '602008', 'JOSE ALVES BISPO DOS SANTOS', 'R QUINTA LIGACAO', '42809210', 2, 461),
(29556, 178, '603375', 'JOSE ROBERTO DO NASCIMENTO COSTA', 'RUA JOINVILLE', '42808320', 2, 342),
(29557, 178, '601095', 'JOSE TEIXEIRA DE OLIVEIRA JUNIOR', 'RUA TEREZOPOLIS', '42800000', 2, 344),
(29558, 178, '601643', 'JOSEILTON DIAS CAVALCANTE', 'ESTRADA DA CASCALHEIRA KM DOIS E MEIO', '42805001', 2, 274),
(29559, 178, '601411', 'JOSEMIRO MOREIRA DOS SANTOS', 'RUA SAO LAZARO SN BL B ATO 202', '42800000', 2, 454),
(29560, 178, '603007', 'JULIANO SOUZA SILVA', 'R IRIS', '42809370', 2, 321),
(29561, 178, '600314', 'JURANDIR XAVIER FERREIRA', 'RESID VERDE VILLE', '42800000', 2, 261),
(29562, 178, '601792', 'JUVENAL PERGENTINO DA SILVA FILHO', 'R CORPO SANTO', '42803270', 2, 449),
(29563, 178, '603646', 'LAILSON SOUZA COSTA', 'RUA DA MANGUEIRA', '42847000', 2, 274),
(29564, 178, '603173', 'LEONARDO LIMA BENEVIDES', 'RUA DOS UMBUS LOT PARQUE VERDE I', '42804780', 2, 282),
(29565, 178, '603377', 'LEONARDO LIMA DE SOUZA', 'TV ROSARIO', '42800220', 2, 260),
(29566, 178, '601378', 'LINDINALVO DA GLORIA DE SANTANA', 'RUA DA PALHA INVASAO', '42800000', 2, 257),
(29567, 178, '603138', 'LUCIANO BARBOSA DOS SANTOS', 'LOT FONTE DA CAIXA', '42840000', 2, 482),
(29568, 178, '603407', 'LUCIANO CARVALHO DOS SANTOS', 'QD G 6', '42849999', 2, 344),
(29569, 178, '602028', 'LUCIANO CERQUEIRA BORGES', 'LOT VERDES HORIZONTES RUA A', '42802540', 2, 281),
(29570, 178, '600888', 'LUCIO CARLOS SOUSA SOARES', 'RUA 8 DO CANAL', '42800000', 2, 460),
(29571, 178, '603284', 'LUIS FERNANDO DE FREITAS OLIVEIRA', 'R SABIA', '42807060', 2, 454),
(29572, 178, '600346', 'LUIZ CARLOS FERREIRA SILVA', 'RUA DO CANAL', '42800000', 2, 460),
(29573, 178, '603193', 'MARCELO HENRIQUE DE MORAIS DA SILVA', 'TRAVESSA LAURO DE FREITAS', '42804780', 2, 472),
(29574, 178, '600701', 'MARCOS ROBERTO CARMONA DOS SANTOS', 'R MANGA ESPADA', '42808270', 2, 359),
(29575, 178, '600930', 'MARCUS VINICIUS DA MOTA DA SILVA', 'AV LAURO DE FREITAS', '42800000', 2, 367),
(29576, 178, '603493', 'MARYVALDO BRANDAO DA CONCEICAO', 'R MONTEIRO LOBATO', '42801110', 2, 476),
(29577, 178, '601598', 'MICAEL BLENI ALVES DOS SANTOS', 'CJ GLEBA C', '42803060', 2, 186),
(29578, 178, '601415', 'MOABE MAMEDE DE SOUZA', 'RUA VIEIRA DE MELO SN', '42840000', 2, 274),
(29618, 178, '602070', 'MONALIZA BARBARA MARQUES GOIS', 'RUA  DO VALE', '42807250', 2, 460),
(29619, 178, '601649', 'MONICA SANTOS MOREIRA', 'R BOA SORTE', '42805390', 2, 474),
(29620, 178, '601794', 'NEI MARCOS JESUS DOS SANTOS', 'R TERRA NOVA', '42805300', 2, 475),
(29621, 178, '603037', 'NIVALDO DE OLIVEIRA DA CRUZ JUNIOR', 'CAM DAS BORBOLETAS', '42800000', 2, 186),
(29622, 178, '600630', 'ODISLEI ALVES RIBEIRO', 'TV DOS PROFETAS', '42804780', 2, 472),
(29623, 178, '602063', 'OSVALDO DOS SANTOS SOUSA', 'LOT FONTES DA CAIXA', '42840000', 2, 274),
(29624, 178, '601795', 'PAULO FREITAS DE SOUZA', 'CAM CASA BRANCA', '42801420', 2, 298),
(29625, 178, '601213', 'RAFAEL BRITO SOUZA', 'SANTA MARIA', '42806330', 2, 469),
(29626, 178, '601708', 'RAIMUNDO ADRIANO DE JESUS', 'AV INDUSTRIAL URBANA', '42802570', 2, 476),
(29627, 178, '600424', 'RAIMUNDO NONATO FERREIRA DE JESUS', 'CAMINHO 10', '42800000', 2, 255),
(29628, 178, '603443', 'RICARDO DE OLIVEIRA FERREIRA SANTOS', 'R MARIA EMILIA', '42807020', 2, 454),
(29629, 178, '603011', 'RITA SANTOS DA CONCEICAO', 'RUA FEIRA DE SANTANA', '42803303', 2, 463),
(29630, 178, '601216', 'ROBERTO DE JESUS MELO', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(29631, 178, '603528', 'ROBERVAL VIANA DA SILVA', 'LOTEAMENTO HUMBERTO ELLERY', '42849000', 2, 369),
(29632, 178, '600275', 'RODRIGO BARRETO DAMASCENA', 'AV MASSARANDUBA', '42804780', 2, 472),
(29633, 178, '601827', 'ROMILDO TAVARES SANTANA', 'RUA SR DO BONFIM', '42800970', 2, 311),
(29634, 178, '603044', 'RONALDO DE SANTANA NUNES', 'R PONTO CERTO', '42801090', 2, 476),
(29635, 178, '602051', 'RONALDO SANTOS CARVALHO', 'RURAL RODOVIARIA BR 101', '42807171', 2, 326),
(29636, 178, '602064', 'RUMMENIGGE SANTANA DE ANDRADE', 'TANCREDO NEVES', '42804780', 2, 466),
(29637, 178, '600339', 'SAMUEL SILVA DO ESPIRITO SANTO', 'RUA ALVORADA', '42809580', 2, 363),
(29638, 178, '603120', 'SANDRO DA CONCEICAO', 'AV PADRE PAULO MARIA TONUCCI', '42800970', 2, 315),
(29639, 178, '603574', 'SEVERINO NUNES DOS SANTOS', 'RUA GURUPI', '42808200', 2, 377),
(29640, 178, '601665', 'SHEILA DE SOUZA MARINHO', 'RUA ARARAS', '42800000', 2, 349),
(29641, 178, '600369', 'SHERLITON MICHEL FERREIRA DE LIMA', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(29642, 178, '602090', 'SIDNEI SANTOS BOMFIM', 'R MARIA EMILIA', '42807020', 2, 454),
(29643, 178, '601508', 'SIELITON COSTA DE SOUZA', 'AVENIDA LUIZ GONZAGA', '42805000', 2, 449),
(29644, 178, '600318', 'SILVANO NOGUEIRA DO NASCIMENTO', 'RUA ALTO BELA VISTA', '42843000', 2, 468),
(29645, 178, '601796', 'SILVIO ALVES AMORIM', 'RUA BRILHANTE', '42800530', 2, 529),
(29646, 178, '603642', 'SULNAZIO COSTA SANTOS', 'RUA VALADARES', '42804670', 2, 472),
(29647, 178, '603690', 'TEOBALDO MILITAO DA SILVA', 'R LINHA, DA', '42803000', 2, 449),
(29648, 178, '602031', 'THIAGO HENRIQUE DA SILVA', 'SANTA MARIA', '42809040', 2, 469),
(29649, 178, '603290', 'THIAGO TAVARES LIMA', 'R CORONEL TAMARINDO', '42807120', 2, 479),
(29650, 178, '603291', 'VAGNER BARBOSA DOS SANTOS', 'TRAVESSA DOS PINHEIROS', '42809430', 2, 363),
(29651, 178, '603280', 'VALTER SANTANA DE JESUS', 'RUA BOA VISTA', '42835000', 2, 264),
(29652, 178, '603521', 'VANDERLEI DE ARAUJO CORDEIRO', 'CA A', '42802479', 2, 302),
(29653, 178, '603670', 'VICENTE PAULO MONTEIRO DUARTE', 'CAM D', '42801360', 2, 298),
(29654, 178, '602065', 'WELLINGTON RAMOS DAMASCENO', 'RUA DA BOMBA', '46800000', 2, 260),
(29655, 178, '603178', 'WENDELL BRUNO OLIVEIRA DOS SANTOS', 'RUA PARQUE VERDE', '42840000', 2, 274),
(29656, 178, '603013', 'WILSON LOPES DE SOUZA NETO', 'CAM D', '42801390', 2, 298),
(29657, 178, '604355', 'JOBSON BATISTA DIAS DA SILVA', 'DIREITA DE JAUA', '42813000', 42, 614),
(29658, 178, '604223', 'ANGELO XAVIER FRANCA', 'Avenida Raul Seixas', '42850000', 5, 243),
(29659, 178, '602045', 'ANDRE NASCIMENTO SOUZA', 'RUA JANDAIA', '42850000', 5, 246),
(29660, 178, '601394', 'CARLOS ANDRE GAMA DA SILVA', 'R PADRE CAMILO TORREND BL 03 APT 101', '42850000', 5, 295),
(29661, 178, '600763', 'DIOGENES SOUSA SIMOES FILHO', 'RUA CHORORA', '42850000', 5, 536),
(29662, 178, '603649', 'ELPIDIO JORGE ALVES DOS SANTOS', 'RUA PROFESSOR MARIO PADRE', '42850000', 5, 237),
(29663, 178, '603536', 'JAQUISON PITA DE CARVALHO', 'RUA PROFESSOR JOSE DEODATO DE SOUZA', '42850000', 5, 241),
(29664, 178, '600655', 'JESSE PACHECO DA CUNHA', 'AVENIDA TIRADENTES', '42850000', 5, 237),
(29665, 178, '603656', 'VAGNER BITENCOURT DANTAS', 'RUA ANTONIO CLAUDIO ALMEIDA', '42850000', 5, 243),
(29666, 178, '604269', 'LUCAS DOS SANTOS PEREIRA', 'Rua Marta Aguiar da Silva Cond Residencial Jardins de Lauro de Freitas', '42700000', 3, 225),
(29667, 178, '600832', 'BRUNO AMPARO DA SILVA', 'COND PROJETO VIDA NOVA', '42700000', 3, 225),
(29668, 178, '602080', 'DANIEL BARBOSA SANTOS', 'RUA SAO JOSE', '42700000', 3, 214),
(29669, 178, '600131', 'LUCIANO SANTANA', 'CONJ VIDA NOVA, QD 67', '42700000', 3, 225),
(29670, 178, '601418', 'SAMUEL DE JESUS OLIVEIRA', 'RUA FRANCISCO CRUZ', '42700000', 3, 223),
(29671, 178, '603595', 'ALEX DA SILVA DOS SANTOS', 'RAU CICERO DANTAS', '48280000', 10, 500),
(29672, 178, '603638', 'ROMUALDO SANTANA ROCHA', 'RUA CAVALCANTE', '48280000', 10, 501),
(29673, 178, '603908', 'JAQUELINE DA SILVA ANTUNES', 'CONJ PORTAL DE PIRAJA', '41290840', 1, 114),
(29674, 178, '603705', 'ADAUTO NASCIMENTO OLIVEIRA', 'Fazenda Grande IV', '41340060', 1, 527),
(29675, 178, '602094', 'ALAN DA CRUZ SANTOS', 'RUA JORGE VALENTE FILHO', '42480140', 1, 98),
(29676, 178, '603108', 'ANDERSON DOS SANTOS OLIVEIRA', 'RUA AMAZONAS DE BAIXO', '41180015', 1, 53),
(29677, 178, '603537', 'ANDRE LUIS SILVA DE OLIVEIRA', 'Valdino Vaz', '41311440', 1, 615),
(29678, 178, '601687', 'CARLOS ANDRE PEREIRA DE SOUSA', 'RUA AYMORE MOREIRA 54 B AP 103', '41745028', 1, 107),
(29679, 178, '603641', 'CARLOS ANTONIO DA PAIXAO FILHO', 'GUILHERME PEDROSA', '41120450', 1, 49),
(29680, 178, '603446', 'CARLOS EDUARDO SILVA DO AMPARO', 'Teódulo de Albuquerque', '41181010', 1, 55),
(29681, 178, '603492', 'DIOGENES AGUIAR DOS SANTOS', 'BEIJA-FLOR', '41260050', 1, 105),
(29682, 178, '600828', 'EDSON SANTIAGO DA SILVA FILHO', 'AV MARIA LUCIA', '41250280', 1, 106),
(29683, 178, '603238', 'ELTON DOS SANTOS GINO', 'RUA REINALDO CALIXTO', '41611145', 1, 90),
(29684, 178, '603185', 'ELTON RICARDO BISPO BARRETO', 'RUA DO CURUZU', '40366110', 1, 147),
(29685, 178, '600147', 'EUDES SANTA RITA DIAS', 'RUA CAXUNDE', '41705140', 1, 64),
(29686, 178, '601815', 'FRANCISCO IRANILDO OLIVEIRA BATISTA', 'COMERCIARIOS', '40390170', 1, 80),
(29687, 178, '600036', 'FRANCISCO SOUZA DE ALCANTARA', 'RUS ARMANDO ULM', '40000000', 1, 126),
(29688, 178, '603159', 'IRES DA SILVA SANTANA', 'POTIRAGUAR', '41100160', 1, 49),
(29689, 178, '602085', 'LEANDRO SOUZA DE ANDRADE', 'Suez', '40750260', 1, 127),
(29690, 178, '601701', 'LEONARDO SANTOS DE SOUZA', 'RUA TEIXEIRA BARROS', '40279080', 1, 521),
(29691, 178, '602087', 'LUIZ CARLOS SANTOS DE JESUS JUNIOR', 'PARANA', '40800400', 1, 128),
(29692, 178, '603381', 'PAULO SERGIO MENEZES SOUZA', 'RUA G', '41342720', 1, 616),
(29693, 178, '603539', 'ROBSON CHAGAS CERQUEIRA', 'HORTO FLORESTAL', '41197070', 1, 71),
(29694, 178, '603042', 'ROGERIO DA CRUZ PEREIRA', 'do Golfo', '40300700', 1, 33),
(29695, 178, '603460', 'SERGIO DE SANTANA SANTOS', '13 de Agosto', '41385560', 1, 101),
(29696, 178, '600934', 'SERGIO JESUS DE CERQUEIRA', 'ROSALVO DIAS DE JESUS', '41211510', 1, 140),
(29697, 178, '603655', 'UILIAS SABINO DE SANTANA', 'Josino Azevedo', '40386100', 1, 617),
(29698, 178, '603538', 'WELLINGTON SOUZA SANTOS', 'Landulfo Alves', '40440180', 1, 83),
(29699, 178, '604237', 'MICHELLE CLIMACO REIS', 'Rua Topazio', '43700000', 6, 432),
(29700, 178, '603663', 'ADILIO DIAS GOMES', 'RUA BOA VISTA', '43700000', 6, 420),
(29701, 178, '603024', 'ALAM OLIVEIRA MOREIRA', 'RUA VITORIA', '43700000', 6, 432),
(29702, 178, '603525', 'ALBERTO SANTOS DE JESUS', 'RUA OCEANICO INDICO', '43700000', 6, 428),
(29703, 178, '603529', 'ALESSANDRO ALVES DOS SANTOS', 'RUA SANTO ANTONIO', '43700000', 6, 539),
(29704, 178, '601180', 'ALIOMAR DA SILVA LIMA', 'RUA PARAGUASSU', '43700000', 6, 433),
(29705, 178, '603107', 'ALVARO BARBOSA DOS SANTOS', 'CJ ILHA DE SAO JOAO SB 42', '43700000', 6, 415),
(29706, 178, '603513', 'ANDRE OLIVEIRA DO NASCIMENTO', 'RUA B, BL 39A AP 201', '43700000', 6, 407),
(29707, 178, '603666', 'CELSO LOPES DOS SANTOS', 'RUA DOS ABRIGADOS', '43700000', 6, 432),
(29708, 178, '603540', 'CLAUDIO CORREIA DA CONCEICAO', 'CONJUNTO SIMOES FILHO RUA C QDA 08', '43700000', 6, 411),
(29709, 178, '601728', 'DANIEL SILVA SEVERO', 'RUA CURITIBA', '43700000', 6, 618),
(29710, 178, '601397', 'DENIRALDO BORGES DOS SANTOS', 'RUA COVA DA GIA', '43700000', 6, 408),
(29711, 178, '601291', 'DILTON BORGES DOS SANTOS', 'RUA DA COVA DA GIA', '43700000', 6, 408),
(29712, 178, '603408', 'EDCARLOS ARAUJO MORAIS', 'RUA VIVENDA DOS PASSAROS', '43700000', 6, 397),
(29713, 178, '602081', 'EDMILSON MOREIRA DE JESUS', 'RUA VIVENDA DOS PASSAROS', '43700000', 6, 404),
(29714, 178, '601190', 'EDVAN SILVA BISPO', 'RUA MARECHAL HERMES', '43700000', 6, 432),
(29715, 178, '601380', 'EMANUEL DA PAIXAO SALES', 'CAMINHO 2 QDA 3', '43700000', 6, 400),
(29716, 178, '601402', 'EUALISSON MUTTI GOMES RABELO', 'RUA MONTES CLAROS 87 - E', '43700000', 6, 303),
(29717, 178, '603643', 'GILDEILTON BARBOSA DA SILVA', 'RUA DO VALE', '43700000', 6, 400),
(29718, 178, '603544', 'IGOR AUGUSTO DOS ANJOS SANTOS', 'CA 3 QDA 4 23', '43700000', 6, 400),
(29719, 178, '603491', 'ISRAEL MARTINS DA RESSURREICAO', 'CA 1 QDA 17', '43700000', 6, 397),
(29720, 178, '601768', 'JOSCIMAR ROCHA NERI', 'AV LOMANTO JUNIOR', '43700000', 6, 430),
(29721, 178, '601364', 'JOSE FERREIRA DE OLIVEIRA', 'AV GOV PAULO SOUTO', '43700000', 6, 410),
(29722, 178, '601365', 'JOSE MARCOS DA SILVA BORGES', 'RUA D CJ SIMOES FILHO I', '43700000', 6, 179),
(29723, 178, '600695', 'JOSE WILSON DE JESUS VIEIRA', 'CAM 19', '43700000', 6, 403),
(29724, 178, '602010', 'JOSIVALDO DE JESUS VIEIRA', 'RUA MACEIO', '43700000', 6, 618),
(29725, 178, '602011', 'JURACY FERNANDES OLIVEIRA', 'RUA TELVE ARGOLO', '43700000', 6, 432),
(29726, 178, '603633', 'LUIS ALBERTO PEREIRA VALENTE', 'CONJUNTO PARIPE CIA', '43700000', 6, 415),
(29727, 178, '603602', 'MAESIO RODRIGUES DOS SANTOS', 'CA 3 QDA 4', '43700000', 6, 400),
(29728, 178, '601776', 'MARIVALDO SANTANA DOS SANTOS', 'RUA FLORIANO PEIXOTO', '43700000', 6, 432),
(29729, 178, '603442', 'MAXCOEL MAGALHAES DE JESUS', 'CA 2 QDA 3 17 ZY CIA I', '43700000', 6, 400),
(29730, 178, '601372', 'NOEL MARTINS DA SILVA', 'RUA VITAL BRASIL', '43700000', 6, 400),
(29731, 178, '601310', 'OTO RAMOS SILVA', 'RUA TIRADENTES', '43700000', 6, 426),
(29732, 178, '601711', 'ROGERIO SANTOS PACHECO', 'RUA DAS PEDRINHAS', '43700000', 6, 405),
(29733, 178, '603657', 'VALTER DA SILVA', 'AVENIDA DA REPUBLICA', '43700000', 6, 400),
(29734, 178, '601783', 'WASHINGTON LUIS DO NASCIMENTO MAURICIO', 'AV ANTONIO CARLOS MAGALHAES', '43700000', 6, 303),
(29735, 178, '603587', 'WELLTON TAQUARI DE SANTANA', 'CONJUNTO SIMOES FILHO CAM', '43700000', 6, 411),
(29736, 179, '600833', 'ANTONIO GLAYDSON DA SILVA SANTOS', 'R DO TELEGRAFO', '42809000', 2, 461),
(29737, 179, '601860', 'DANILO DOS SANTOS ALVES', 'RUA NOVE DE AGOSTO', '42806340', 2, 469),
(29738, 179, '600594', 'ELVIS LIMA BRANDAO', 'RUA CHICO MENDES', '42800000', 2, 315),
(29739, 179, '600197', 'FRANCISCO DIAS BATISTA DOS SANTOS', 'RUA PARANA IPANEMA  SN', '42800000', 2, 315),
(29740, 179, '600991', 'FRANKLIN DE LIMA ARAUJO', 'RUA PETROLINA', '42802540', 2, 281),
(29741, 179, '600149', 'HELIO CARVALHO DA SILVA', 'R SAO FRANCISCO', '42809430', 2, 363),
(29742, 179, '600718', 'LUIZ EMANUEL COUTINHO DE OLIVEIRA', 'RUA DELMIRO GOUVEIA', '42800000', 2, 448),
(29743, 179, '600484', 'WDYELSON CONCEICAO SOUZA', 'RUA DA PRACA', '42800000', 2, 460),
(29744, 180, '604191', 'ANTONIO SANTIAGO PEREIRA', 'Av. Industrial Urbana AP 204 Bl 01 Cond. Atlântico Life', '42802570', 2, 477),
(29745, 180, '603064', 'ALEX SANTOS DE MIRANDA', 'RUA DA AREIA', '42800992', 2, 277),
(29746, 180, '601685', 'ALVARO ALCIDES DE SOUSA', 'RUA DA PAZ', '42835000', 2, 264),
(29747, 180, '603314', 'ARNALDO CONCEICAO SOARES', 'R MANGA ESPADA', '42808270', 2, 359),
(29748, 180, '603594', 'ARNALDO PEDRO DOS SANTOS MOTA', 'RUA MARIA MEIRE', '42800000', 2, 315),
(29749, 180, '603488', 'CARLOS DE SOUZA CRUZ', 'RUA PADRE PAULO TONNUCI', '42800000', 2, 315),
(29750, 180, '600335', 'CLAUDMIR RODRIGUES SAO PEDRO', 'RUA DA LIBERDADE   AP 104 BL 05', '42800000', 2, 321),
(29751, 180, '603489', 'DANIEL OLIVEIRA COSTA', 'R BELEM', '42805120', 2, 475),
(29752, 180, '600439', 'DARLAM DE SANTANA FELIX', 'AV LESTE', '42801170', 2, 476),
(29753, 180, '601755', 'DIMAS ALVES DOS SANTOS', 'R CRISTO REDENTOR', '42807720', 2, 460),
(29754, 180, '603644', 'FREDSON MARTINS CABRAL', 'AV RADIAL A', '42807000', 2, 454),
(29755, 180, '600689', 'GABRIEL DE JESUS CARNEIRO', 'RUA DA LINHA', '42800000', 2, 472),
(29756, 180, '603158', 'GILMAR DOS SANTOS MACEDO', 'R PALHA, DA', '42800640', 2, 257),
(29757, 180, '603080', 'GILMAR FERREIRA SILVA', 'RUA DO RAFAEL', '42849000', 2, 338),
(29758, 180, '602005', 'IVANILDO MARQUES DOS SANTOS JUNIOR', 'RUA TIRADENTES', '42804500', 2, 463),
(29759, 180, '602034', 'JORGE CRUZ DA SILVA', 'R SEGUNDO SENDES', '42809150', 2, 461),
(29760, 180, '601733', 'JOSE GILDASIO DE JESUS FILHO', 'AV RADIAL C', '42808010', 2, 363),
(29761, 180, '601769', 'JOSE LUIS SACRAMENTO NASCIMENTO', 'R ROSARIO 4C', '42800260', 2, 461),
(29762, 180, '600445', 'JOSIAS ALVES FERREIRA', 'RUA SAO SALVADOR', '42802320', 2, 341),
(29763, 180, '600690', 'JOSIMARIO ALVES DOS SANTOS', 'RUA H', '42800000', 2, 464),
(29764, 180, '601032', 'JOSIVAN REIS DOS SANTOS', 'RUA COMUNITARIA', '42849000', 2, 277),
(29765, 180, '603085', 'JURANDIR PINHEIRO DA COSTA', 'RUA DO FLAMIGO', '42843000', 2, 353),
(29766, 180, '601330', 'LEANDRO DE JESUS SOUZA', 'RUA ALTO DA BOA VISTA', '42835000', 2, 279),
(29767, 180, '601331', 'LEANDRO SILVA VIEIRA', 'RUA RIACHO DAS NEVES', '42800000', 2, 186),
(29768, 180, '604218', 'LUCAS SANTOS PEREIRA', 'CJ PRAIA DE INTERLAGOS', '42849000', 2, 267),
(29769, 180, '601514', 'LUCIMAR SANTOS CONCEICAO', 'CONDOMINIO ALPHA 5', '42802580', 2, 312),
(29770, 180, '603322', 'LUIZ HENRIQUE DA SILVA SANTOS', 'RUA INEMA', '42802540', 2, 281),
(29771, 180, '602039', 'MARCOS VINICIUS FREIRE DOS SANTOS', 'QD AZUL', '42802540', 2, 289),
(29772, 180, '600348', 'MARIO MOREIRA DE SOUSA', 'R DOIS DE MAIO', '42800520', 2, 456),
(29773, 180, '603405', 'MARIVALDO ALVES DOS SANTOS', 'R MANOEL MERCES', '42807430', 2, 448),
(29774, 180, '603912', 'MARIVAN ROCHA DA SILVA', 'Travessa Machado de Assis', '42806370', 2, 469),
(29775, 180, '601256', 'NIVALDO DOS SANTOS', 'RUA NOVA DIVINEIA', '42800000', 2, 452),
(29776, 180, '603531', 'PAULO ROSSY CALHEIRA MAIA', 'RUA SAO MIGUEL', '42840000', 2, 274),
(29777, 180, '603382', 'PAULO SERGIO PEREIRA', 'R CORONEL TAMARINDO', '42807120', 2, 454),
(29778, 180, '600895', 'RAIMUNDO SILVA DE SOUZA', 'RUA DA CICLOVIA III', '42800000', 2, 186),
(29779, 180, '603038', 'REGINALDO DA SILVA MOTTA', 'CJ GLEBA C/ CAMINHO DAS AMETISTAS', '42803060', 2, 186),
(29780, 180, '601217', 'ROBERTO SOUZA DOS SANTOS', 'MACHADO DE ASSIS', '42806370', 2, 469),
(29781, 180, '601258', 'ROGERIO DA SILVA SOUZA', 'LOT CAPIVARA', '42835000', 2, 264),
(29782, 180, '603648', 'SANDRO DE BRITO CUNHA', 'Limoeiro', '42802580', 2, 312),
(29783, 180, '601034', 'SILVINO OLIVEIRA COSTA FILHO', 'RUA DA MANUELA', '42800000', 2, 460),
(29784, 180, '603082', 'SIVALDO NASCIMENTO ALVES', 'RUA ENGAZURA', '42801110', 2, 276),
(29785, 180, '601797', 'THALISSON SILVA ALEXANDRINO', 'LOT VERDES HORIZONTES RUA OLINDA', '42802540', 2, 281),
(29786, 180, '601799', 'VLADIMIR DOS SANTOS PINHEIRO', 'EST. DO COCO KM 8,5', '42840000', 2, 274),
(29787, 180, '601731', 'WAGNER CARLOS SANTOS DA SILVA', 'R MONTE GORDO', '42802500', 2, 267),
(29788, 180, '604264', 'GABRIEL BARBOZA COSTA', 'Rua Chorora', '42850000', 5, 246),
(29789, 180, '601396', 'CLAUDIUS TADEU SILVA DE SOUZA', 'RUA NOSSA SENHORA DE LOURDES', '42850000', 5, 243),
(29790, 180, '603550', 'ISAAC SANTOS SILVA', 'RUA MARANHAO', '42850000', 5, 241),
(29791, 180, '601732', 'JOAO ANTONIO SENA DE SOUZA', 'RUA WALTER SEIXAS', '42850000', 5, 237),
(29792, 180, '601122', 'SINVAL PEREIRA DA SILVA', 'RUA AFONSO ARINOS', '42850000', 5, 244),
(29793, 180, '603401', 'MARCOS ANTONIO VELOSO DE SANTANA', 'TRAVESSA AILTON SIMAS', '42700000', 3, 220),
(29794, 180, '604115', 'JULIO DAS VIRGENS SANTOS', 'Rua Marinalva Gonzalez', '41213120', 1, 75),
(29795, 180, '603719', 'ANTONIO FABIO ROSARIO DE JESUS', 'São Sebastião', '41490618', 1, 138),
(29796, 180, '600853', 'CARLOS SALOMAO FERREIRA FILHO', 'da Sub Estação', '40810160', 1, 128),
(29797, 180, '600040', 'CLAUDIO MARCOS ALCANTARA', 'R SETE DE JANEIRO', '40313170', 1, 58),
(29798, 180, '601187', 'CLEBER BARROS LIMA', 'CJ MORADA DO SOL', '41225670', 1, 72),
(29799, 180, '603677', 'EDUARDO COSTA PORTO', 'Sergipe', '41280134', 1, 116),
(29800, 180, '602021', 'GILDO LUIS CERQUEIRA LIMA', 'II Travessa Ana Piedade', '40487270', 1, 141),
(29801, 180, '601697', 'JOAO DOS SANTOS ALMEIDA', 'SETE DE AGOSTO', '41308130', 1, 110),
(29802, 180, '603320', 'JOAO PAULO TEIXEIRA LEITE', 'R ENGENHEIRO JAIME ZAVERUCHA', '40230320', 1, 21),
(29803, 180, '602035', 'LUIZ CARLOS DA SILVA BATISTA', 'TV FREI MARIANO', '40391010', 1, 80),
(29804, 180, '602088', 'MAGNO PEREIRA ALVES DA SILVA', 'PRIMEIRO DE JANEIRO', '40393190', 1, 78),
(29805, 180, '602049', 'MARCIO OLIVEIRA DE SANTANA', 'RECANTO DA URBIS', '40720090', 1, 126),
(29806, 180, '603324', 'ROBERTO FERREIRA DOS SANTOS', 'Dois de Julho', '41500280', 1, 97),
(29807, 180, '603566', 'SIDNEI PAULO DOS SANTOS', 'São Paulo', '40820190', 1, 128),
(29808, 180, '603043', 'SILAS SANTOS DE SOUZA', 'SETE DE JANEIRO', '40313170', 1, 58),
(29809, 180, '603682', 'UILDON PORTO LIMA', 'R SAO JOSE', '40385090', 1, 80),
(29810, 180, '602015', 'VINICIUS VASCONCELOS ROCHA DA SILVA', 'Passárgada', '41620430', 1, 91),
(29811, 180, '604246', 'ARTUR CEZAR DE SOUZA', 'Rua da Caixa D Agua', '43700000', 6, 432),
(29812, 180, '603155', 'ADAILTON SANTOS DE OLIVEIRA', 'RUA DO SOCORRO', '43700970', 6, 396),
(29813, 180, '603412', 'ADRIANO BRITO DA SILVA', 'RUA GONCALVES DIAS', '43700000', 6, 403),
(29814, 180, '603076', 'ALAILSON SILVA DE OLIVEIRA', 'AV WASHIGTON LUIS', '43700000', 6, 303),
(29815, 180, '603497', 'ANTONIO PEREIRA FILHO', 'RUA MACEIO', '43700000', 6, 308),
(29816, 180, '602000', 'EDSON DOS SANTOS MOURA', 'RUA RUY BARBOSA', '43700000', 6, 392),
(29817, 180, '601787', 'EDVALDO SANTOS DA SILVA', 'AV.ENG. WALTER ARAGÃO DE SOUZA', '43700000', 6, 420),
(30076, 188, '601592', 'JOSE ANDERSON SOARES DE OLIVEIRA', 'RUA SANTA RITA', '42807020', 2, 454),
(30077, 188, '601554', 'JOSE RAIMUNDO OLIVEIRA DE ARAUJO', 'RUA PE PAULO TANUCI', '42800510', 2, 456),
(30078, 188, '603671', 'MARCOS SANTOS DE CASTRO', 'RUA SAO JOSE', '42800500', 2, 338),
(30079, 188, '601885', 'MICAEL DOS SANTOS PINTO', 'LOT VERDES HORIZONTES', '42802540', 2, 281),
(30080, 188, '603444', 'ROBERVAL HIGINO DE SANTANA ROSA', 'TV BISPO I', '42849000', 2, 291),
(30081, 188, '603074', 'RONALDO DOS SANTOS CORTES', 'R NOSSA SENHORA DE FATIMA', '42800460', 2, 456),
(30082, 188, '601548', 'FABIO PURIDADE DOS SANTOS', 'IMPERATRIZ', '40750630', 1, 127),
(30083, 188, '601588', 'ISMAEL CORREIA DA SILVA', 'CHILE', '40717120', 1, 121),
(30084, 188, '603160', 'JODSON ALAN CAMPOS DE SOUZA', '13 de Junho', '40323310', 1, 60),
(30085, 188, '601467', 'EMANOEL DE OLIVEIRA BARROS', 'RUA DO VALE QD 8', '43700000', 6, 400),
(30086, 188, '603554', 'EUDES NERIS COSTA', 'RUA ARACAJU', '43700000', 6, 303),
(30087, 188, '602002', 'GENIVAL LEITE DA SILVA', 'RUA DA INDEPENDENCIA', '43700000', 6, 400),
(30088, 188, '601644', 'JOSE RAIMUNDO DE JESUS BURAEM', 'AV WASHINGTON LUIS', '43700000', 6, 303),
(30089, 189, '603970', 'ALAN SOUZA CRUZ', 'RUA CLIMERIO DE OLIVEIRA', '42804790', 2, 472),
(30090, 189, '601490', 'ADAILTON DE SOUZA DOS SANTOS', 'AV DERBA', '42806060', 2, 454),
(30091, 189, '602078', 'ADERBAL RIBEIRO DE ANDRADE JUNIOR', 'RUA DOS BOMBEIROS', '42801120', 2, 476),
(30092, 189, '603841', 'ADRIANO FRANCA CARDOSO', 'RUA DA RODAGEM', '42806330', 2, 469),
(30093, 189, '601518', 'ALEXSANDRO DE PAULA RIBEIRO', 'RUA FONDE DA CAIXA', '42840000', 2, 274),
(30094, 189, '600227', 'ANTONIO MARCOS DA SILVA', 'Acu da Capivara', '42800000', 2, 264),
(30095, 189, '601810', 'ANTONIO SOUZA SANTOS JUNIOR', 'R FUTURO', '42805470', 2, 474),
(30096, 189, '600932', 'CEZAR DA SILVA FARIAS', 'TV CONCENTRICA', '42800000', 2, 260),
(30097, 189, '600465', 'CLERISSON CORREIA DA SILVA', 'R MARIA EMILIA', '42807080', 2, 454),
(30098, 189, '601635', 'EDENILTON SANTOS DE JESUS', 'R ILHEUS', '42805110', 2, 475),
(30099, 189, '601832', 'EDER ALVES DA SILVA', 'RUA DO ANGICO', '42849000', 2, 338),
(30100, 189, '603548', 'ELDER DE JESUS MOREIRA', 'RUA SAO BENTO', '42840000', 2, 447),
(30101, 189, '602099', 'ELIECSON MENDES SILVA', 'R TELEGRAFO, DO', '42809000', 2, 260),
(30102, 189, '601296', 'ERASMO CONCEICAO DOS SANTOS', 'INDUSTRIAL URBANA', '42802570', 2, 372),
(30103, 189, '601788', 'ERIVALDO NASCIMENTO DE SOUZA', 'RUA A', '42849000', 2, 488),
(30104, 189, '600495', 'EUDES PINTO DE OLIVEIRA', 'RUA DO BURAQUINHO S/N', '42000000', 2, 274),
(30105, 189, '600665', 'FABIANO ARAUJO DA SILVA', 'AV INDUSTRIAL URBANA', '42802570', 2, 476),
(30106, 189, '601902', 'GILSON BISPO DOS SANTOS FILHO', 'R SAO CAETANO', '42809420', 2, 321),
(30107, 189, '600958', 'GILSON DE JESUS SANTOS', 'RUA EIXO URBANO CENTRAL', '42800000', 2, 456),
(30108, 189, '600661', 'HEIDSON SANTOS DA ANUNCIACAO', 'RUA TERRA 1', '42800000', 2, 464),
(30109, 189, '601505', 'HUMBERTO PINTO DOS SANTOS', 'CAM VINTE E DOIS', '42804220', 2, 355),
(30110, 189, '600542', 'ICARO CATE DOS REIS CORDEIRO', 'CAMINHO DA VIOLETAS', '42800000', 2, 186),
(30111, 189, '600868', 'ISNAEL DE JESUS CORDEIRO', 'TRV 5 DE AGOSTO', '42800000', 2, 469),
(30112, 189, '601362', 'IZADIO CARNEIRO DA SILVA FILHO', 'PRIMEIRA TRAVESSA RIO BANDEIRA', '42800000', 2, 464),
(30113, 189, '600256', 'JADSON DA SILVA OLIVEIRA', 'Itabuna', '42805240', 2, 475),
(30114, 189, '601531', 'JILMAR BISPO DOS SANTOS', 'CAM CINQUENTA E CINCO', '42804550', 2, 463),
(30115, 189, '600657', 'JOAO CARLOS LEITE DE CARVALHO', 'RUA CATU ABRANTES', '42840000', 2, 274),
(30116, 189, '600537', 'JORGE LAECIO DIAS DA CRUZ', 'LT VILAREJO', '42835000', 2, 264),
(30117, 189, '600513', 'JORGE LUIZ DE OLIVEIRA OLIVEIRA', 'R DEZESSEIS DO CANAL', '42807660', 2, 460),
(30118, 189, '601824', 'JOSE CLAUDIO SANTOS', 'RUA DOS PASSAROS', '42806200', 2, 349),
(30119, 189, '600510', 'JOSE MONTEVAL DO NASCIMENTO', 'RUA BAURU', '42800000', 2, 298),
(30120, 189, '603909', 'JOSE VIEIRA SOUZA NETO', 'Jardim Limoeiro', '42802580', 2, 312),
(30121, 189, '603137', 'JOSEILTON DA SILVA MATIAS', 'AV SUL', '42801070', 2, 267),
(30122, 189, '601593', 'JOSIMAR DE JESUS DA SILVA', 'R MANOELA', '42807330', 2, 448),
(30123, 189, '601881', 'LUCAS SANTOS ARAUJO', 'AV RIO BANDEIRA', '42807171', 2, 464),
(30124, 189, '601773', 'LUIZ AUGUSTO DOS SANTOS', 'R SAO JORGE', '42809350', 2, 321),
(30125, 189, '600936', 'MAILSON LUIZ SOUZA SOARES', 'RUA SEIS', '42800000', 2, 186),
(30126, 189, '600770', 'MARCELO PEREIRA DA SILVA', 'RUA CAMPO', '42840000', 2, 271),
(30127, 189, '600769', 'MARCIO ALBERTO DE SOUSA FIGUEIREDO', 'AV RIO CAMACARI', '42800000', 2, 261),
(30128, 189, '603580', 'MARCOS PAULO FIGUEREDO CALDAS', 'R CAMPO, DO', '42809520', 2, 363),
(30129, 189, '601105', 'MARINALDO SANTOS DA SILVA', 'LO COLONIA BOA UNIAO', '42840000', 2, 455),
(30130, 189, '600653', 'NELIO DOS SANTOS DANTAS', 'RUA DA FLECHA', '42804660', 2, 251),
(30131, 189, '601210', 'ODIVONEI BOMFIM SANTOS DE JESUS', 'TV MACHADO DE ASSIS', '42806370', 2, 469),
(30132, 189, '603573', 'OZANA SANTOS DA PAIXAO', 'LOTEAMENTO FONTE DAS AGUAS', '42835000', 2, 264),
(30133, 189, '601712', 'ROQUE FELIPE BOMFIM DA FRANCA', 'RUA PARANAPANEMA', '42800530', 2, 315),
(30134, 189, '600735', 'RUBELVAN DA SILVA DE OLIVEIRA', 'RUA IBICARAI BL 60 APTO 102', '42803060', 2, 186),
(30135, 189, '601374', 'SERGIO GOES DE JESUS', 'RUA NOVA DO TRIANGULO', '42800000', 2, 479),
(30136, 189, '601781', 'SERGIO VINICIUS DE LIMA SILVA', 'TV DOIS DE MAIO', '42800530', 2, 257),
(30137, 189, '601529', 'TARCISIO RODRIGUES DOS SANTOS', 'ET ANTIGA BA FEIRA KM 38 17 AP 204', '42806280', 2, 469),
(30138, 189, '600931', 'TIAGO DOS SANTOS LOPES', 'RUA SEIS', '42800000', 2, 186),
(30139, 189, '601965', 'VANDRO MANOEL SILVA DE LIMA', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(30140, 189, '600237', 'VIVALDO MAURICIO DOS SANTOS JUNIOR', 'RUA DA FONTE  S/N', '42840000', 2, 274),
(30141, 189, '601964', 'WILLIAM ALMEIDA DE SOUZA', 'RUA SANTA MARIA', '42806340', 2, 469),
(30142, 189, '604369', 'MOISES IZIDORO DE LIMA', 'VIRAREJO Q E', '42835000', 37, 445),
(30143, 189, '603946', 'CARLOS LUIS DE JESUS', 'AREAL', '42825000', 39, 483),
(30144, 189, '604124', 'GABRIEL STUTZ SOUZA SOARES', 'AV GETULIO VARGAS', '42850000', 5, 295),
(30145, 189, '601288', 'ARILSON DUQUE BOMFIM', 'RUA NOVA BRASILIA', '42850000', 5, 237),
(30146, 189, '601524', 'MARCOS PAULO DE SOUZA SANTIAGO', 'RUA ABETARDA', '42850000', 5, 246),
(30147, 189, '601013', 'PAULO FERNANDO DAS MERCES ALMEIDA', 'RUA IRLANDA', '42850000', 5, 236),
(30148, 189, '603866', 'JOSUE DOS SANTOS', 'RUA JAQUEIRA CDLT JD TALISMA', '42700000', 3, 222),
(30149, 189, '600056', 'ANTONIO CLAUDIO BASTOS DE ANDRADE', 'RUA JORGE FARIAS', '42700000', 3, 214),
(30150, 189, '601395', 'CARLOS JOSE DE SOUZA FILHO', 'RUA NILTON CALMON', '42700000', 3, 220),
(30151, 189, '691360', 'LOUISE ARGOLO FIGUEREDO', 'Orlando Imbassahy', '41600200', 1, 94),
(30152, 189, '601357', 'CLECIO SOUZA CONCEICAO', 'RUA BELA VISTA', '41925735', 1, 213),
(30153, 189, '601999', 'EDMILSON SANTOS DE OLIVEIRA', 'Dirce Amorim', '40421550', 1, 136),
(30154, 189, '603091', 'ELIELSON DE JESUS ASSUNCAO', 'RUA VIA LOCAL C 01 VI SETOR A', '41336010', 1, 509),
(30155, 189, '603000', 'ELIEVALDO DA CONCEICAO', 'SAO FRANCISCO', '41705070', 1, 64),
(30156, 189, '601298', 'FERNANDO RIBEIRO DA SILVA', 'RUA NOVA DIRETA', '40000000', 1, 141),
(30157, 189, '600504', 'FLORISVALDO DOS SANTOS LISBOA', 'Colina Azul', '41245000', 1, 104),
(30158, 189, '600844', 'GUTEMBERG ALVES COSTA NETO', 'ANTONIO CARLOS MAGALHAES', '40720680', 1, 125),
(30159, 189, '601571', 'JEFERSON ALMEIDA AMORIM', 'RUA 50', '41320010', 1, 120),
(30160, 189, '603017', 'JORGE LUIZ VIEIRA DE SOUZA', 'São Cristóvão', '40820180', 1, 128),
(30161, 189, '600704', 'JOSILSON COSTA ALVES', 'GLORIA, DA TRAVESSA', '40725650', 1, 126),
(30162, 189, '601573', 'JULIO CESAR FROIS DANTAS', 'NOSSA SENHORA DO ROSARIO', '41207570', 1, 70),
(30163, 189, '600685', 'MARICELIO SANTANA PINTO', 'QUADRA 01 BL 02 APT 303', '40000000', 1, 75),
(30164, 189, '603275', 'NELTON SANTOS DA CUNHA', 'RUA SAO FRANCISCO XAVIER', '41230140', 1, 619),
(30165, 189, '601526', 'REINIVAL DA ANUNCIACAO DE SOUZA', 'GREGORIO DE MATOS', '40730230', 1, 512),
(30166, 189, '603947', 'WILLIAM DE JESUS ALVES MATOS', 'RUA PRINCESA ISABEL', '43700000', 6, 399),
(30167, 189, '602077', 'ADEILSON ANUNCIACAO DA CRUZ', 'ET DO SESI SENAI', '43700970', 6, 400),
(30168, 189, '603556', 'ADEMARIO VIRGILIO DA CONCEICAO', 'RUA L CAM', '43700000', 6, 436),
(30169, 189, '601572', 'ALMIR NASCIMENTO SANTOS', 'RUA COPACABANA', '43700000', 6, 432),
(30170, 189, '601564', 'CLEBER SANTANA LOPES', 'RUA TERESINA', '43700000', 6, 308),
(30171, 189, '601772', 'LEANDRO VIEIRA GALIZA LOBO', 'RUA 7 DE ABRIL', '43700000', 6, 403),
(30172, 189, '601214', 'LUCIANO LUIZ CARVALHO CAETANO', 'RUA DA LINHA', '43700000', 6, 391),
(30173, 189, '601102', 'MARCOS ANTONIO DA SILVA NEVES', 'RUA RIO PARDO', '43700000', 6, 413),
(30174, 190, '601724', 'ALECANDRO RISSO NEVES', 'RUA DO ATLETA', '42800240', 2, 260),
(30175, 190, '603252', 'ANDERSON DOS SANTOS MATOS', 'ESTRADA VELHA DE MONTE GORDO', '42820000', 2, 276),
(30176, 190, '603224', 'CASSIO DE JESUS OLIVEIRA', 'AV INDUSTRIAL URBANA', '42802570', 2, 476),
(30177, 190, '603254', 'DANILO DOS SANTOS GOIS', 'ESTRADA VELHA DE MONTE GORDO', '42820000', 2, 276),
(30178, 190, '601786', 'EDILSON SOARES SANTOS', 'AV CONCENTRICA', '42809050', 2, 452),
(30179, 190, '601789', 'FERNANDO LUIZ DA CONCEICAO', 'R SAO LAZARO', '42806050', 2, 454),
(30180, 190, '603002', 'GILBERT SALES MAGNO', 'AV INDUSTRIAL URBANA', '42801170', 2, 476),
(30181, 190, '603004', 'JAILSON DOS SANTOS OLIVEIRA', 'R DEZ DO CANAL', '42807600', 2, 460),
(30182, 190, '601826', 'LUCIANO SILVA COELHO', 'MARIA EMILIA', '42807020', 2, 454),
(30183, 190, '603704', 'MARCOS DE JESUS SANTANA', 'RUA BLUMENAU', '42807140', 2, 454),
(30184, 190, '601590', 'ROBERT RIBEIRO DIAS', 'RUA ARCO DE LIMA', '42800000', 2, 251),
(30185, 190, '603817', 'JOSE WILLAMES DA SILVA', 'RUA BELA VISTA DO BOSQUE', '42850000', 5, 238),
(30186, 190, '601960', 'ROBSON DE JESUS SANTOS', 'RUA GUARATINGA', '42850000', 5, 246),
(30187, 190, '603181', 'RICARDO RODRIGUES DOS SANTOS', 'RUA SAO JORGE', '42700000', 3, 220),
(30188, 190, '603549', 'IVALDO RAMOS JESUS DE ALBUQUERQUE', 'Direita da Massaranduba', '40435030', 1, 143),
(30189, 190, '603568', 'MARCOS DE MIRANDA GONCALVES', 'Marquês de Santo Amaro', '40420510', 1, 136),
(30190, 190, '603010', 'RENATO SANTOS', 'TV PRIMEIRA MABACO BAIXO', '40713026', 1, 121),
(30191, 190, '603596', 'WASHINGTON CONCEICAO DE DEUS', '17 de Setembro', '41611540', 1, 90),
(30192, 190, '604361', 'MOISES GONCALVES DOS SANTOS', 'HABITACIONAL VIDA NOVA', '43700000', 6, 439),
(30193, 190, '600760', 'JOSIVAN JOSE DOS SANTOS', 'RIA EGITO', '42700000', 6, 620),
(30194, 191, '603048', 'EVERTON SANTOS ANJOS', 'R FRANCISCO DRUMOND', '42800500', 2, 456),
(30195, 191, '601114', 'ROBSON BISPO DOS SANTOS', 'SANTA MARIA', '42806330', 2, 469),
(30196, 191, '600830', 'ELIAS GARCIA DE SOUSA ROCHA', 'Léllis Piedade', '40420190', 1, 136),
(30197, 191, '602032', 'UOSTON LUIZ MUTI DOS ANJOS', 'RUA PARAGUARI', '40735350', 1, 126),
(30198, 192, '604294', 'LUIS EDUARDO DE SOUZA BACELLAR', 'Rua Direta de Jaua', '42843000', 2, 468),
(30199, 192, '603014', 'ALEXSANDRO DUARTE DA SILVA', 'RUA FLOR DO CAMPO', '42806340', 2, 255),
(30200, 192, '601585', 'CLAUBER MOREIRA DE BRITO JACINTO', 'RUA LATERAL DE DENTRO', '42800000', 2, 467),
(30201, 192, '601038', 'CLAUDIO SAO PEDRO DE JESUS', 'DA AMIZADE', '42800000', 2, 530),
(30202, 192, '600231', 'CRISTIANO MEDEIROS DE SOUSA', 'RUA DOS PATAXOS', '42800970', 2, 251),
(30203, 192, '603219', 'EDVAN SILVA CORDEIRO', 'AV LUIZ GONZAGA', '42805001', 2, 475),
(30204, 192, '603008', 'MARCIO DE SOUZA OLIVEIRA', 'LOT FONTE DAS PEDRAS', '42835000', 2, 264),
(30205, 192, '601727', 'REINILSON DANTAS DOS SANTOS', 'RUA ROSELI NUNES', '42801240', 2, 315),
(30206, 192, '601313', 'RICARDO NERI MUNIZ', 'Ana Galvão', '42806090', 2, 454),
(30207, 192, '601338', 'RONALDO DOS SANTOS SILVA JUNIOR', 'CAM DEZOITO', '42803240', 2, 186),
(30208, 192, '600033', 'ROOSEVELT REIS DE ARAUJO', 'TRAVESSA ANTONIO FELIX MARTINS', '42800000', 2, 463),
(30209, 192, '603012', 'ROSIVAN BITENCOURT MAGALHAES', 'R PEQUENA', '42809100', 2, 461),
(30210, 192, '600971', 'SERGIO DIVINO RAMOS', 'RUA DA BANDEIRA', '42800130', 2, 456),
(30211, 192, '601736', 'MARCOS RODRIGUES CORREA', 'COND CAMINHO DO MAR III B102 QD A BL 09', '42835000', 37, 446),
(30212, 192, '601858', 'CARLOS EDUARDO SOUZA SILVA', 'RUA HEITOR VICENTE VIANA', '42280000', 10, 500),
(30213, 192, '600235', 'TIAGO DA SILVA DE SOUSA', 'RUA SENHOR DO BONFIM', '42820000', 4, 503),
(30214, 192, '603973', 'ANDERSON SELES GOMES', 'Avenida Mário Leal Ferreira', '40285600', 1, 41),
(30215, 192, '603814', 'ADRIANO CRUZ SILVA', 'Doutor Esteves de Assis', '40315230', 1, 58),
(30216, 192, '601785', 'ANDRE MARIO VELOSO MIRANDA', 'TV RIO MADEIRA', '40713390', 1, 193),
(30217, 192, '603196', 'DANIEL XAVIER DE CARVALHO', 'TRAVESSA REIS PRINCIPE', '40243165', 1, 135),
(30218, 192, '603009', 'MARCOS ALMEIDA SANTANA', 'RUA SANTA GERMANIA', '40720485', 1, 126),
(30219, 192, '601849', 'NEILDO ANDRADE DO CARMO', 'TV NOVA BRASILIA', '40280056', 1, 41),
(30220, 192, '602038', 'NORBERTO MATOS PIMENTEL NETO', 'Primeiro de Dezembro', '40314510', 1, 58),
(30221, 192, '601079', 'WAGNER DA SILVA GONCALVES', 'COLINAS DE PERIPERI', '40725430', 1, 126),
(30222, 192, '603813', 'FRANCINEI DE JESUS', 'RUA PIATA', '43700000', 6, 432),
(30223, 192, '603533', 'ANTONIO MARQUES MOREIRA', 'RUA DA GRECIA', '43700000', 6, 303),
(30224, 192, '601735', 'ARSENIO GOMES PITA', 'RUA CAMPO', '43700000', 6, 428),
(30225, 192, '603188', 'DIEGO SILVA DE ALMEIDA', 'AVENIDA CAMACARI', '43700000', 6, 420),
(30226, 192, '603607', 'MARCONI COUTINHO SANTOS', 'RUA SANTANA', '43700000', 6, 426),
(30227, 192, '603599', 'MARCOS DOS SANTOS PIRES', 'CONJUNTO PARIPE CIA RUA SOBRADO', '43700000', 6, 393),
(30228, 192, '601422', 'ZENILDO DOS SANTOS FERREIRA', 'RUA JAPAO', '43700000', 6, 303),
(30229, 193, '604177', 'ALEXSANDRO MATEUS DE FREITAS PERUNA', 'Rua Santa Maria  AP 305 BL 09', '42806340', 2, 469),
(30230, 193, '603222', 'DAVID CONSELHEIRO DOS SANTOS', 'RUA ALMIRANTE TAMANDARE', '42804780', 2, 472),
(30231, 193, '603683', 'GIVALDO DE ARAUJO CORDEIRO', 'CA A', '42800001', 2, 302),
(30232, 193, '603217', 'IONALDO ALVES DE ALMEIDA', 'RUA DO FUTURO', '42805060', 2, 475),
(30233, 193, '603220', 'REINALDO DE JESUS DOS SANTOS', 'RUA DO ANGICO', '42849000', 2, 277),
(30234, 193, '603199', 'SERGIO SANTOS SOUZA', 'AV INDUSTRIAL URBANA COND ATLANTICO LIFE', '42802570', 2, 477),
(30235, 193, '603221', 'RAFAEL TELES DE ARAUJO', 'AV PROF THEOCRITO BATISTA', '42700000', 3, 225),
(30236, 193, '604112', 'IVANDI ANDRADE DE JESUS', 'RUA NOSSA SENHORA DE LOURDES', '43700000', 6, 424),
(30237, 194, '603754', 'THOMAS GEORG HANS OCHS', 'ESTRADA DO COCO', '42840000', 2, 455),
(30238, 194, '601941', 'RICARDO RANGEL PINHEIRO RAMOS', 'COND BUSCA VIDA', '42801050', 2, 447),
(30239, 194, '604043', 'JULIANA LORENZO KUHN DE SOUZA', 'LOTEAMENTO ECO VILAS', '42700000', 3, 216),
(30240, 194, '603861', 'PAULO EDUARDO OLIVEIRA DE CASTILHO', 'ANA C.B. DIAS', '42700000', 3, 496),
(30241, 194, '600127', 'ALEX FREITAS ARAUJO', 'Almirante Barroso', '41950350', 1, 24),
(30242, 194, '601458', 'ALINE BEYER BACELLAR', 'AL CAJAZEIRAS, DAS', '41820470', 1, 48),
(30243, 194, '603859', 'JESSICA OLIVEIRA LOPES DE BRITO', 'Rua Octávio Mangabeira', '40430320', 1, 146),
(30244, 195, '600288', 'ANTONIO MARCOS SANTANA DE CARVALHO', 'R SAO LAZARO', '42806050', 2, 454),
(30245, 195, '600545', 'CAMILA DE CASTRO PARANHOS', 'Dezoito', '42803240', 2, 186),
(30246, 195, '600686', 'EDCLAUDIO DIAS DANTAS', 'R MANGA ESPADA', '42808270', 2, 359),
(30247, 195, '601261', 'THIAGO CALDAS PEREIRA', 'INDUSTRIAL URBANA', '42802570', 2, 477),
(30248, 195, '691297', 'SILAS MOURA GOMES DE JESUS', 'AVENIDA LUIS TARQUINIO PONTES', '42700000', 3, 216),
(30249, 195, '691294', 'AMANDA BARBOSA DOS SANTOS FRANCA', 'Rua das Bananeiras', '40717470', 1, 121),
(30250, 195, '601245', 'ANDERSON SILVA CALDAS', 'CJ MIRANTE DE PERIPERI', '40725360', 1, 125),
(30251, 195, '600164', 'HELCIO JOAO LIMA RODOVALHO', 'R EDY CALAZANS', '41195210', 1, 51),
(30252, 195, '600668', 'JOSE CARLOS SANTOS PEIXOTO', 'RUA ADS HORTENCIAS AZUIS', '41502015', 1, 145),
(30253, 195, '601679', 'RUBIA VINICIA OLIVEIRA MARTINS', 'PRUA TEODULO DE ALBUQUERQUE', '41181010', 1, 55),
(30254, 196, '603585', 'GILBERTO DE SOUZA ROMA', 'RUA SANTA MARIA', '42806340', 2, 469),
(30255, 196, '600540', 'GILVAN CARLOS PITA DE CARVALHO', 'R NOVA CAMACARI', '42802530', 2, 267),
(30256, 196, '691365', 'LARISSA GUIMARÃES TAVARES DE MENEZES', 'das Acacias', '41810050', 1, 16),
(30257, 196, '600911', 'ANDRE LUIS DA SILVA MELO', 'AV MACEIO', '40800400', 1, 128),
(30258, 196, '603740', 'JORAHILTON DA CONCEICAO SILVA', 'TV 1 MAGALHAES', '43700000', 6, 303),
(30259, 197, '691340', 'DOUGLAS VINICIUS DE SOUSA', 'Rua do Meio', '42807270', 2, 460),
(30260, 197, '600200', 'ADEMAR JUNIOR AMORIM DE SOUZA', 'RUA VILA DOS ARTISTAS', '42843000', 2, 468),
(30261, 197, '600205', 'CARLOS ROBERTSON OLIVEIRA ARIZE', 'RUA DA LARANJEIRA', '42800970', 2, 282),
(30262, 197, '600486', 'EDIVALDO DOS SANTOS SILVA FILHO', 'da Liberdade', '42809040', 2, 327),
(30263, 197, '600214', 'JONATAS CAVALCANTI DA SILVA', 'AV JORGE AMADO', '42801170', 2, 476),
(30264, 197, '600758', 'JOSE ROBERTO DA CONCEICAO DOS SANTOS', 'RUA BELA VISTA', '42800000', 2, 456),
(30265, 197, '601316', 'UELITON PINHEIRO SENA', 'TRAVESSA SANTA BARBARA', '42806280', 2, 469),
(30266, 197, '601297', 'FABIO DOS PASSOS FREITAS', 'DJANIRA MARIA BRASIL', '42700000', 3, 225),
(30267, 197, '600324', 'ADRIANO DE OLIVEIRA COSTA', 'RUA SETOR C', '40000000', 1, 131),
(30268, 197, '603836', 'FABIO REYNA RODEIRO', 'EST BARREIRAS, DAS', '41195000', 1, 51),
(30269, 197, '600247', 'NEILTON DE CARVALHO RIOS', 'Alameda das Praias', '41600490', 1, 94),
(30270, 197, '600284', 'TIAGO ANDRE DA SILVA SA', 'CJ ALMIRANTE TAMANDARE', '40800490', 1, 128),
(30271, 198, '601142', 'ADMILSON SANTOS CONCEICAO', 'LUIZ CAETANO', '42802000', 2, 291),
(30272, 198, '601181', 'ANA PAULA DE LIMA RAIMUNDO DUARTE', 'Marte', '42808000', 2, 464),
(30273, 198, '600534', 'EDNAI SOUZA SANTOS', 'RUA BLUMENAL', '42800000', 2, 344),
(30274, 198, '601546', 'ELTON TELES FERREIRA', 'RUA ALAGOINHAS', '42849999', 2, 475),
(30275, 198, '601326', 'FERNANDO PASSOS DOS SANTOS', 'RUA DA ALEGRIA', '42809560', 2, 363),
(30276, 198, '600929', 'FRANCIVAL DE FREITAS PERUNA', 'EST SANTA MARIA', '42806340', 2, 469),
(30277, 198, '600425', 'LENIVAL DE BARROS SANTOS', 'R MARIA EMILIA', '42807020', 2, 454),
(30278, 198, '601097', 'LUCAS RODRIGO SANTANA DE ASSIS', 'CD LOTEAMENTO FONTE DAS PEDRAS', '42835000', 2, 264),
(30279, 198, '600530', 'MARCIA CONCEICAO DA SILVA', 'AV CONCENTRICA', '42800000', 2, 448),
(30280, 198, '600393', 'MARCOS VINICIOS DE SOUZA', 'RUA DO PAPAMEL', '42800000', 2, 456),
(30281, 198, '600523', 'WYLLYAN MARTINS DA COSTA', 'TRAVESSA SEGUNDA FLOR DO CAMPO', '42806340', 2, 469),
(30282, 198, '600940', 'JAASIEL SANTOS DE OLIVEIRA', 'AVENIDA LUIZ TARQUINIO', '42700000', 3, 183),
(30283, 198, '601009', 'MARCOS FRANCISCO SANTOS CARVALHO', 'da Alegria', '40387030', 1, 139),
(30284, 198, '600583', 'RONALDO ROCHA MARTINS', 'RUA BARAO DE MAUA', '4000000', 1, 140),
(30285, 198, '600447', 'SERGIO FIGUEIREDO DE OLIVEIRA', 'TV DOIS DE JULHO', '40000000', 1, 514),
(30286, 198, '601541', 'CARLOS ALBERTO DA SILVA SIMOES', 'RUA DOM JOAO VI', '43700000', 6, 403),
(30287, 198, '600891', 'GILMAR FREITAS SANTOS', 'RUA MAL DEODORO', '43700000', 6, 432),
(30288, 198, '601120', 'RUBENSMAR ARAUJO CAVALCANTE', 'RUA MARLENE CARNEIRO', '43700000', 6, 432),
(30289, 199, '600078', 'CLAUDIO CASTRO DE ARAUJO', 'ET COCO KM 09 CD BUSCA VIDA', '42800010', 2, 455),
(30290, 199, '600113', 'JOABSON FERREIRA LIMA', 'RUA BOA ESPERANÇA', '42800000', 2, 611),
(30291, 199, '600603', 'PAULO ALEXANDRE DE JESUS NASCIMENTO', 'INDUSTRIAL URBANA', '42802570', 2, 476),
(30292, 199, '600463', 'RAFAEL SANTANA DOS SANTOS', 'RUA AURORA', '42800000', 2, 186),
(30293, 199, '603692', 'VLADIMIRO ALEXANDRE M DAS NEVES FERNANDE', 'AV SANTOS DUMONT', '42700000', 3, 223),
(30294, 199, '691357', 'LUCAS LEMOS BAHIA', 'Augusto Frederico Schmith', '40140390', 1, 20),
(30295, 199, '603469', 'TIAGO PORTANSKY GURGEL CARLOS', 'Praia de Caratingui', '41600115', 1, 94),
(30296, 199, '603626', 'WECSLEY DA INVENCAO ALVES', 'RUA UNIVERSITARIO', '43700000', 6, 397),
(30297, 200, '600846', 'ALAN CORDEIRO DE JESUS', 'AV OESTE', '42805001', 2, 475),
(30298, 200, '600705', 'DAVID DOS SANTOS ALMEIDA', 'RUA ACAJUTIBA 06', '42800000', 2, 186),
(30299, 200, '600847', 'EVANILDO BARBOZA SANTOS', 'R BELA VISTA', '42808020', 2, 461),
(30300, 200, '600391', 'MOISES DOS SANTOS MOURA', 'RUA DOM VILARES', '42835000', 2, 311),
(30301, 200, '603860', 'CLAUDIO NONATO', 'RUA DIREITA STO ANTONIO', '42700000', 3, 223),
(30302, 200, '603875', 'NYLO FERNANDES BEZERRA', 'Alameda Praia de Caratingui', '41600115', 1, 94),
(30303, 200, '600752', 'ALEXSANDRO MOTA SANTOS', 'VINTE E OITO DE ABRIL', '40313090', 1, 58),
(30304, 200, '600574', 'DANILO PEIXOTO DA SILVA', 'R DR EDUARDO SANTOS', '40340070', 1, 62),
(30305, 200, '600917', 'FABIO RIBEIRO BISPO', 'CJ FAZENDA GRANDE III', '41340160', 1, 527),
(30306, 200, '600918', 'JONAS DA HORA SILVA', 'H', '41480215', 1, 520),
(30307, 200, '600781', 'ERICA NASCIMENTO DE SOUZA', 'RUA PRES COSTA E SILVA', '43700000', 6, 432),
(30308, 200, '600291', 'FABIO DOS SANTOS CONCEICAO', 'RUA MANOEL DIAS DA SILVA', '43700000', 6, 429),
(30309, 200, '600285', 'JAIRO COSTA RIBEIRO', 'CAMINHO 2 CONJ. VIDA NOVA', '43700000', 6, 403),
(30310, 201, '600754', 'CARLOS ALBERTO ARAUJO CHAVES', 'LOTEAMENTO RECANTO DAS ARVORES', '42800000', 2, 251),
(30311, 201, '600890', 'GANDHI BELENS DE FIGUEIREDO', 'R NOVA CAMACARI', '42802530', 2, 267),
(30312, 201, '600257', 'JEAN ASSIS LINHARES', 'RUA DOZE DO CANAL', '42800000', 2, 460),
(30313, 201, '600812', 'LUCIANO SANTANA', 'RUA LAMARCA', '42800510', 2, 315),
(30314, 201, '600908', 'VALDIR CAMPOS DOS SANTOS', 'AV.INDUSTRIAL URBANA', '42800650', 2, 476),
(30315, 201, '600732', 'ORLANDO DA CRUZ FILHO', 'RUA VITORIA', '40000000', 1, 124),
(30316, 201, '600909', 'VINICIUS MARCOS DANTAS FROES', 'R NOSSA SENHORA DO ROSARIO', '41207560', 1, 70),
(30317, 201, '601653', 'JOILSON GOMES SILVA', 'RUA SAO LUIZ MARANHAO', '43700000', 6, 308),
(30318, 202, '603824', 'GEORGE HARILAOS OVRENOVITS', 'ESTRADA DO COCO KM 8', '42840000', 2, 284),
(30319, 202, '603816', 'JORGE PINCOVSKY', 'AVENIDA PRAIA DE GUAIBU', '42700000', 3, 216),
(30320, 202, '691308', 'ALESSANDRO PAIVA GOMES BAQUEIRO DOREA', 'Avenida Barros', '40450370', 1, 86),
(30321, 202, '603255', 'DANUSA TEIXEIRA GUIMARAES FERREIRA', 'R PATATIVAS, DAS', '41720100', 1, 65),
(30322, 202, '603691', 'FABIO MARCIO MINERVINO PELEGRINI', 'R POTIRAGUAR', '41100160', 1, 49),
(30323, 202, '603717', 'PEDRO PAULO DANTAS PITA', '3 A TRAVESSA PADRE DANIEL LISBOA', '40283565', 1, 191),
(30324, 202, '601129', 'SHEILA OLIVEIRA DE MATOS', 'SILVEIRA MARTINS', '41150000', 1, 51),
(30325, 203, '603745', 'THIAGO COSTA DOS SANTOS', 'RODOVIA BA 099 KM 10', '42841000', 2, 339),
(30326, 203, '603293', 'WILSON MARTINES', 'AVENIDA PRAIA DE ITAPOAN QUADRA 19', '42700000', 3, 216),
(30327, 203, '604050', 'PAULO VICTOR LEAL AMARAL', 'Rua Coronel Durval Mattos', '41760160', 1, 45),
(30328, 203, '601992', 'DANIEL CARTIBANI MIDLEJ', 'AL MORANO', '41830610', 1, 16),
(30329, 203, '604296', 'GEORGE FERREIRA DA SILVA', 'Av. Rivaldo Gomes Guimaraes', '43700000', 6, 400),
(30330, 204, '604149', 'HEBERT LUIZ GONZAGA DE OLIVEIRA', 'Caminho 10-Setor 01 CASA', '41340590', 1, 507),
(30331, 204, '604081', 'ROGER VANDER LIMA DOS SANTOS', 'TV SANTANA', '43700000', 6, 428),
(30332, 205, '603964', 'CARLOS ALBERTO CARVALHO SANTOS JUNIOR', 'RUA DAS ALMAS', '42800990', 2, 449),
(30333, 205, '601977', 'ADISSON FELIPE SOUZA DOS SANTOS', 'R MARIA EMILIA', '42807020', 2, 454),
(30334, 205, '604033', 'ALVARO CESAR BATISTA DE CASTRO SEGUNDO', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(30335, 205, '600578', 'CLAUDIA CRISTINA GUIMARAES SANTOS', 'TV NOSSA SENHORA DO CARMO', '42802010', 2, 267),
(30336, 205, '600331', 'DARLAN ANDRADE FARIAS', 'AV 3 DO CANAL', '42807710', 2, 460),
(30337, 205, '601141', 'ELOI GOMES DE SANTANA', 'RUA VELHA DO NATAL', '42800000', 2, 260),
(30338, 205, '603132', 'ELY CARLOS COELHO DE JESUS', 'RUA SAO TOMAZ', '42830000', 2, 311),
(30339, 205, '601952', 'JACKSON DA SILVA FERREIRA JUNIOR', 'R SEGUNDA DO PARQUE', '42809240', 2, 461),
(30340, 205, '601957', 'NAILTON SARMENTO MEDEIROS FILHO', 'RUA DA UNIAO', '42802510', 2, 476),
(30341, 205, '603606', 'ROBSON FERREIRA DOS SANTOS', 'Setor Industrial Urbana', '42802570', 2, 476),
(30342, 205, '601678', 'SILVIO DA CRUZ DOS SANTOS', 'RUA ESTRADA 21', '42800000', 2, 467),
(30343, 205, '601227', 'AILTON LEAL DOS SANTOS', 'RUA PROFESSOR FERNANDO LUZ', '42850000', 5, 241),
(30344, 205, '601305', 'JOSENILTON DA SILVA SANTANA', 'RUA L', '44006176', 7, 383),
(30345, 205, '604215', 'MARCOS ROGERIO DE OLIVEIRA VIEIRA', 'Rua Marcos Franco, Q6 L 10 Cond. Beirario', '42700000', 3, 225),
(30346, 205, '600748', 'ENIVALDO PLACIDO DE SOUZA', 'TV VILA MAR 1 COND LOT PITANGA', '42700000', 3, 215),
(30347, 205, '603546', 'LUIZ EDUARDO PEREIRA', 'RUA DOS COQUERAIS', '42700000', 3, 495),
(30348, 205, '600566', 'MIGUEL ALEXANDRE MOURA SILVA', 'ESTRADA DO COCO KM 21', '42700000', 3, 492),
(30349, 205, '601718', 'SANDRO JOSE SANTOS DA SILVA', 'AV JOSE LEITE, BL 14, AP 301', '42700000', 3, 225),
(30350, 205, '604120', 'ISMAEL SOUSA JUNIOR', 'Alameda Mata Atlântica II', '41260195', 1, 105),
(30351, 205, '603561', 'ALEXANDRE SILVA DA HORA', 'R OLHOS D''AGUA', '41620240', 1, 91),
(30352, 205, '601720', 'ANDERSON SOUSA DOS SANTOS', 'R SILVEIRA MARTINS', '41150000', 1, 51),
(30353, 205, '601991', 'ANTONIO CARLOS ROCHA DE SOUZA', 'SEGUNDA TRAVESSA DOUTOR EDUARDO DOTTO', '40800010', 1, 128),
(30354, 205, '601924', 'CESARE FAVARO DA SILVA DE MOURA', 'PARQUE PLANALTO', '41220785', 1, 51),
(30355, 205, '601676', 'DEIVID RAMOS DE SOUZA', 'GREGORIO DE MATOS', '40730230', 1, 512),
(30356, 205, '601983', 'JAIRO SERRAO NEVES', 'ARATU', '40810430', 1, 128),
(30357, 205, '601955', 'JOSE CARLOS DA SILVA SANTOS', 'R POTIGUAR', '40810690', 1, 128),
(30358, 205, '600885', 'JULIO CESAR BARBOSA MACHADO', 'Ulysses Guimarães', '41213000', 1, 75),
(30359, 205, '603500', 'LEONARDO DE SOUSA GABRIEL', 'Doutor Odilon Machado', '40340420', 1, 60),
(30360, 205, '601053', 'MARCIO DAVID LISBOA LAGO', 'R PARAGUAI', '40820090', 1, 128),
(30361, 205, '600389', 'PAULO CESAR DO ESPIRITO SANTO BARBOSA JR', 'RUA DA GARVEA', '40735610', 1, 126),
(30362, 205, '603163', 'PAULO SERGIO SANTOS DA SILVA', 'SEGUNDA TRAVESSA DA JAQUEIRA', '40720082', 1, 126),
(30363, 205, '601968', 'REGINALDO NEGREIRO SANTOS', 'CJ CAJAZEIRAS IV', '41330050', 1, 508),
(30364, 205, '603150', 'ROGERIO SILVA DAMASCENO', 'R FONTE, DA', '41630670', 1, 91),
(30365, 205, '603547', 'SERGIO DE CARVALHO VALENTIN DE SOUZA', 'VL CARMEN', '40100290', 1, 26),
(30366, 205, '601452', 'MARCOS ANTONIO DE ALMEIDA SANTOS', 'AV DA REPUBLICA', '43700000', 6, 400),
(30367, 206, '603122', 'ALLAN FRANCISCO ARAUJO QUEIROZ', 'RUA ANAPOLIS', '42808210', 2, 464),
(30368, 206, '600250', 'JOSE ROQUE DE JESUS MACHADO', 'RUA ANTONIO FELIX MARTINS', '42800000', 2, 463),
(30369, 206, '601842', 'LUIZ CARLOS DE JESUS ARAUJO', 'SETE DO CANAL', '42807570', 2, 460),
(30370, 206, '600081', 'WILSON SEBASTIAO DA SILVA', 'RES.VIVENDAS JOANES, S/N CS95 RL', '42840000', 2, 455),
(30371, 206, '600287', 'ANDRE LUIS PINHO BRAGA', 'Miguel Calmon', '44024228', 7, 384),
(30372, 206, '603778', 'LUCAS FONTES NOVAIS', 'RUA ROQUE JOSE DA SILVA CS F QD N L 4', '42700000', 3, 219),
(30373, 206, '601429', 'EDELSON RODRIGUES DUTRA', 'RUA TV DOIS DE JULHO', '48280000', 10, 313),
(30374, 206, '691323', 'ANDERSON MAC ALLISTER MOSQUERA', 'RUA Dom Eduardo Mosqueiro', '40255140', 1, 37),
(30375, 206, '600881', 'JACQUELINE SANTOS DOREA', 'RUA LEONOR CALMON', '40295140', 1, 190),
(30376, 206, '604162', 'JOSE ANTONIO CURCINO JUNIOR', 'Silveira Martins', '41150000', 1, 51),
(30377, 206, '600015', 'MARCO TULIO CARVALHO HAYNE', 'RUA CARLOS MARON', '40296220', 1, 40),
(30378, 206, '600248', 'MARIO CESAR SACRAMENTO TEIXEIRA', 'CJ RES NOVA CIDADE I', '41260005', 1, 105),
(30379, 206, '600870', 'PEDRO RAIMUNDO PEREIRA DE SOUZA', 'R INDEPENDENCIA', '40820010', 1, 128),
(30380, 207, '604130', 'RICARDO CARRILHO ROCHA', 'Avenida Industrial Urbana COND RESIDENCIAL CAMAÇARI LIFE', '42802570', 2, 477),
(30381, 207, '604186', 'JONAS CONCEICAO NASCIMENTO', 'JOSE LEITE', '42700000', 3, 225),
(30382, 207, '604137', 'LIBERINO GOMES DOS SANTOS', 'Rua Mabaço de Baixo', '40713025', 1, 122),
(30383, 208, '604037', 'RAFAEL JOSE DA SILVA', 'Rua Dias D''Ávila', '42802510', 2, 267),
(30384, 208, '600367', 'MILTON SERGIO RODRIGUES DE SANTANA', 'INDUSTRIAL URBANA', '42802570', 2, 477),
(30385, 208, '603662', 'CLAUDOMIRO ARAUJO CAETANO', 'TRAVESSA SEGUNDA IRLANDA', '42850000', 5, 236),
(30386, 208, '601911', 'FABIO TELES DE MATOS', 'RUA MARIA FERREIRA SANTOS', '42850000', 5, 243),
(30387, 208, '603737', 'FRANCISCO LUCIO DE JESUS FILHO', 'RUA JOSE BONIFACIO', '42850000', 5, 486),
(30388, 208, '601342', 'ARIVALDO CERQUEIRA DOS SANTOS', 'R SAO JORGE', '44050630', 7, 386),
(30389, 208, '600162', 'CASSIO CONCEICAO DE JESUS', 'RUA SÃO MARCOS', '42700000', 3, 215),
(30390, 208, '603515', 'MARCIO MARQUES FUKUSHIMA', 'AV SANTOS DUMONT', '42700000', 3, 494),
(30391, 208, '601744', 'RAIMUNDO ALEXANDRINO SILVA JUNIOR', 'RUA ENG MAGNOLIA TEIXEIRA RUA I', '42700000', 3, 499),
(30392, 208, '604040', 'RENAN MIRANDA SOUZA', 'RUA ELISIO MESQUITA', '41230970', 1, 114),
(30393, 208, '601062', 'ARIOMARIO FERREIRA DA SILVA', 'R SERGIMIRIM', '40710290', 1, 122),
(30394, 208, '601065', 'CARLOS ALBERTO NUNES DE OLIVEIRA', 'CAM 3 CJ CAJAZEIRAS IV', '41334230', 1, 527),
(30395, 208, '600882', 'CLAUDIO LUIZ DA CRUZ PEREIRA', 'CJ JARDINS DAS LIMEIRAS', '41250440', 1, 106),
(30396, 208, '601073', 'EDSON FELIX DE SANTANA', 'Mata Atlântica II', '41260195', 1, 105),
(30397, 208, '600557', 'GERALDO DA CONCEICAO FILHO', 'LD DA ALEGRIA', '40387030', 1, 80),
(30398, 208, '603741', 'GILDASIO DE JESUS CHAGAS', 'SETOR H RUA J', '41490080', 1, 138),
(30399, 208, '600299', 'JAILTON SAMPAIO DE JESUS', 'RUA CONTENDA', '40365515', 1, 63),
(30400, 208, '600550', 'JOSE EMANOEL SOUZA DE JESUS', 'R OSVALDO DA HORA', '40720050', 1, 126),
(30401, 208, '600030', 'MARIO ALESSANDRO FONSECA DE FREITAS', 'RUA DA ARARAS EDF IBAMIRIM', '41740180', 1, 65),
(30402, 208, '603733', 'PAULO CESAR DO ESPIRITO SANTO BARBOSA', 'RUA DA GAVEA CJ DOM EUGENIO SALES', '40735610', 1, 126),
(30403, 208, '603694', 'RAIRAN DE CERQUEIRA BRANDAO', 'R ANTONIO TEIXEIRA', '41280390', 1, 116),
(30404, 208, '600073', 'ULISSES CRISPIM SOUZA SANTOS', 'R ANTONIO CARLOS MAGALHAES', '40720680', 1, 125),
(30405, 208, '603723', 'WILLIAM SANTOS SILVA', 'RUA JOAQUIM FERREIRA', '41502200', 1, 145),
(30406, 208, '601272', 'REGINALDO SILVEIRA VIEIRA', 'AVENIDA RIVALDO GOMES GUMARAES', '43700000', 6, 400),
(30407, 209, '603941', 'FRANCISCO CARLOS DE ASSIS DOS SANTOS', 'Rua IRECE', '42810230', 2, 366),
(30408, 209, '600547', 'ANTONIO JORGE LEITAO SANTOS', 'RUA 07 DO CANAL', '42800000', 2, 460),
(30409, 209, '603724', 'DENILSON ALVES SOUZA', 'TV 04 DA CARAUNA', '42810000', 2, 264),
(30410, 209, '601938', 'JIOBERICO SOUZA PEREIRA FILHO', 'SEGUNDA TRAVESSA LUIZ GONZAGA', '42805001', 2, 475),
(30411, 209, '600790', 'JOSE ALVES DA SILVA FILHO', 'R NOVA DIVINEIA', '42800240', 2, 452),
(30412, 209, '600575', 'MARCUS VINICIUS DE FREITAS OLIVEIRA', 'SABIA', '42807060', 2, 454),
(30413, 209, '600850', 'UILTON SOUSA MARCELINO', 'TV DERBA', '42806070', 2, 454),
(30414, 209, '601854', 'MARIO SERGIO KOZLOVSKI', 'COND ALPHAVILLE LITORAL NORTE 2', '42840000', 38, 442),
(30415, 209, '603752', 'EVANDO OLIVEIRA DA SILVA', 'Mangalô', '48060480', 8, 379),
(30416, 209, '604032', 'DANIEL CIRNE FERNANDES FRANCO', 'RUA DO BOSQUE', '42041000', 30, 160),
(30417, 209, '603751', 'ROBSON CHAGAS ALVES', 'AV GARCIA D AVILA RESIDENCIAL DO PARQUE', '42850000', 5, 295),
(30418, 209, '600478', 'JOEL LIMA GOMES', 'TRAV. 1A IMBASSAY', '42800000', 5, 490),
(30419, 209, '604035', 'RILDO SANTANA SANTIAGO', 'Travessa Atibaia', '41770500', 1, 47),
(30420, 209, '600884', 'ADENILTON ANDRADE COELHO', 'AV MACEIO', '40800400', 1, 128),
(30421, 209, '600681', 'ANAILTON SOUZA SANTOS', 'R JARDIM SANTO ANTONIO', '40290120', 1, 41),
(30422, 209, '600508', 'DANILO GONCALVES DOS SANTOS', 'R JOSE BONIFACIO DOS SANTOS', '40713610', 1, 122),
(30423, 209, '602058', 'EDILMARIO DE ALMEIDA PAIXAO', 'TV DESEMBARGADOR VIANA DE CASTRO', '40390300', 1, 80),
(30424, 209, '600471', 'ELIOMAR FREITAS SANTANA', 'Aliomar Baleeiro', '41350275', 1, 103),
(30425, 209, '600280', 'JERONIMO CARDOSO DOS SANTOS', 'CJ MUSSURUNGA I', '41510180', 1, 98),
(30426, 209, '601098', 'LUCIANO CORREA CASTRO FILHO', 'R ODILON DOREA', '40285450', 1, 41),
(30427, 209, '603748', 'ROBERTO ARAUJO DA SILVA', 'R ALTO DO CAPIM', '41905290', 1, 203),
(30428, 209, '604114', 'JEFERSON DOS SANTOS NORBERTO', 'RUA DA INDEPENDENCIA', '43700000', 6, 400),
(30429, 209, '600075', 'GIVALDO ALVES SANTOS', 'RUA BRAULINO MUNIZ', '43700000', 6, 427),
(30430, 209, '600728', 'PAULO CEZAR SANTANA DOS SANTOS', 'CJ VIDA NOVA CAM 10', '43700000', 6, 400),
(30431, 210, '601659', 'ADAILTON DA HORA REIS', 'Industrial Urbana', '42802570', 2, 477),
(30432, 210, '603697', 'ALEX GONCALVES BRITO', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(30433, 210, '600166', 'ANDRE LUIS RODRIGUES DA SILVA', 'R BELA VISTA', '42808020', 2, 461),
(30434, 210, '603695', 'FABRICIO DA CRUZ MADUREIRA', 'R LIBERDADE, DA', '42809040', 2, 452),
(30435, 210, '601640', 'JADSON MOREIRA DA SILVA', 'RUA DAS MANGUEIRAS', '42847000', 2, 263),
(30436, 210, '600625', 'JASSON FREITAS DE OLIVEIRA', 'RUA DA LIBERDADE', '42849999', 2, 260),
(30437, 210, '601535', 'JOEMILTON DOS SANTOS CHAGAS', 'RUA SOTERO GOMES', '42849999', 2, 274),
(30438, 210, '600404', 'JUTAIR SANTOS DA CONCEICAO', 'INDUSTRIAL URBANA BL65', '42802570', 2, 476),
(30439, 210, '603153', 'LEANDRO RODRIGO ALVES DOS SANTOS', 'ESTRADA DO COCO, KM10', '42840000', 2, 455),
(30440, 210, '600134', 'NILSON FRANCISCO DOS SANTOS', 'RUA CAJARANAS', '42800970', 2, 472),
(30441, 210, '601119', 'RUBEM SOUZA OLIVEIRA', 'TRAV PRIMEIRA ACAJUITIBA', '42800000', 2, 186),
(30442, 210, '603259', 'TASCIO RODRIGO DA SILVA', 'R CAIXA DAGUA', '42806130', 2, 454),
(30443, 210, '603696', 'ANTONIO CARLOS DE SOUZA', 'AVENIDA BRASIL', '42850000', 5, 295),
(30444, 210, '603777', 'MURILO RIBEIRO KIELMANN', 'AV BRIGADEIRO ALBERTO COSTA MATOS', '42700000', 3, 491),
(30445, 210, '603118', 'LUCAS VITAL DOS SANTOS', 'RUA CAMINHO DAS ARVORES', '42700000', 3, 226),
(30446, 210, '600571', 'WANDERSON LUIZ DA SILVA', 'RUA PROFESSOR THEOCRITO BATISTA', '42700000', 3, 225),
(30447, 210, '604266', 'SERGIO LIMA DE OLIVEIRA JUNIOR', 'Rua Amparo de Sao Francisco', '40390375', 1, 80),
(30448, 210, '600378', 'ANDERSON OLIVEIRA REIS DIAS', 'Jutahy Magalhães', '41235815', 1, 104),
(30449, 210, '601182', 'ANDRE DA MATA ALMEIDA', 'TV SEGUNDA JANDAIRA', '41235120', 1, 104),
(30450, 210, '601128', 'ANDRE LUIZ SCHAEFF PEREIRA SOARES', 'JURACY MAGALHAES JUNIOR', '41940060', 1, 24),
(30451, 210, '601631', 'ARLEI DA SILVA PEIXOTO', 'CJ CAJAZEIRAS IV', '41330050', 1, 527),
(30452, 210, '603391', 'DELANO GONSALVES DA SILVA', 'FAZENDA GRANDE 2 QD F BLOCO 89', '41342010', 1, 527),
(30453, 210, '600104', 'EDSON SANTOS DE SOUZA', 'COND RECANTO DA ILHA', '40000000', 1, 211),
(30454, 210, '600357', 'FRANCISCO JOSE ABREU DAS NEVES', 'R GASPAR DE LEMOS', '40325610', 1, 63),
(30455, 210, '603710', 'NELSON COSTA DE OLIVEIRA FILHO', 'Ulysses Guimarães', '41213000', 1, 75),
(30456, 210, '600576', 'PAULO ROBERTO MARTINS SOUZA', 'AVENIDA GUARANI', '40760210', 1, 127),
(30457, 210, '603121', 'VALDOMIRO DOS SANTOS REIS', 'R MELO MORAIS FILHO', '40352000', 1, 81),
(30458, 210, '600561', 'ROGERIO BRITO SOUZA', 'AVENIDA RIVALDO GOMES GUIMARAES', '43700000', 6, 400),
(30459, 211, '603711', 'TIAGO ARAUJO FEITOSA', 'AV JUSTINIANO SILVA', '44230000', 9, 381),
(30460, 211, '603822', 'ARLINDO DE ARAUJO BARBOSA', 'Condominio V. cardeais e andorinhas', '42802580', 2, 312),
(30461, 211, '600354', 'JOAO DE ARAUJO VASCONCELOS NETO', 'RUA GUAJIRUS', '42840000', 2, 468),
(30462, 211, '603448', 'MARCUS VEIBER RIBEIRO GUIMARAES', 'TV AGULHA, DA', '42806190', 2, 454),
(30463, 211, '600798', 'NELSON MARTINS', 'PARQUE REAL SERRA VERDE', '42800000', 2, 371),
(30464, 211, '603258', 'ROBSON ESPINOLA ROCHA', 'Quarenta e Oito', '42804480', 2, 463),
(30465, 211, '600423', 'SINVALDO CARMO DE OLIVEIRA', 'AV RADIAL C', '42808010', 2, 461),
(30466, 211, '601420', 'VALDIVIO FARIAS SILVA', 'R EIXO E', '42802490', 2, 302),
(30467, 211, '601222', 'MARCOS RENAN DA SILVA VIEIRA', 'CORA CORALINA', '48010110', 8, 379),
(30468, 211, '603725', 'CIRO VIEIRA NOVAIS', 'RUA VP', '42850000', 5, 537),
(30469, 211, '691332', 'RENILDO GOMES ALCANTARA', 'RUA CAJAZEIRAS 2P', '48120000', 11, 505),
(30470, 211, '603882', 'PAULO CESAR MOREIRA ARGOLO', 'do Benjoim', '41820340', 1, 48),
(30471, 211, '603333', 'ADRIANO DE OLIVEIRA PIRES', 'CJ CHACARA DO CABULA', '41150030', 1, 51),
(30472, 211, '600246', 'ANTONIO MARCOS DA SILVA MAIA', 'R GUARARAPES', '41610540', 1, 91),
(30473, 211, '601074', 'ELINALDO CARDOSO DOS SANTOS', 'OESTE', '41500640', 1, 97),
(30474, 211, '601456', 'EZEQUIAS FRANCISCO DOS SANTOS', 'CJ FAZENDA GRANDE III', '41340160', 1, 527),
(30475, 211, '600390', 'FABIO LUIS DA SILVA MENEZES', 'AFONSO TAUNAY', '40255310', 1, 37),
(30476, 211, '600569', 'IVALDO SILVA OLIVEIRA', 'Ipecaetá', '41603355', 1, 89),
(30477, 211, '601974', 'JALDO SANTIAGO DOS SANTOS', 'SAO EDSON', '40820240', 1, 128),
(30478, 211, '600019', 'JANAINA DE ARAUJO MEDEIROS PINHO', 'ESTRADA DO COCO KM 1', '41600110', 1, 621),
(30479, 211, '603257', 'JORGE LEANDRO CORREIA DE JESUS', 'Joaquim Ferreira', '41502200', 1, 145),
(30480, 211, '603496', 'LAERTE LIMA DA CONCEICAO', 'RUA MONZA', '40800856', 1, 128),
(30481, 211, '600600', 'LUCIMAR REIS DE DEUS', 'SETOR C CAMINHO 06 D 27', '41612200', 1, 622),
(30482, 211, '603726', 'LUIZ CARLOS DE SOUZA BRITO', 'Adonias Ferreira', '40484450', 1, 118),
(30483, 211, '603329', 'MARIVALDO ESTACIO BARBOSA JUNIOR', 'R CONSOLACAO, DA', '40720480', 1, 126),
(30484, 211, '603727', 'RUY PEREIRA DA SILVA JUNIOR', 'CJ FAZENDA GRANDE I', '41340100', 1, 527),
(30485, 211, '600416', 'WASHINGTON LUIS CORREIA FERREIRA', '03-Quadra 03', '41334230', 1, 511),
(30486, 211, '600877', 'ELIELTON LIMA DE SOUZA', 'CJ HAB ILHA DE SAO JOAO', '43700000', 6, 415),
(30487, 211, '601717', 'JOSE CARLOS RIGAUD DOS SANTOS', 'RUA SALVADOR', '43700000', 6, 416),
(30488, 211, '601118', 'ROSEMAR SILVA SOUZA', 'RUA SANTA RITA', '43700000', 6, 434),
(30489, 211, '601666', 'UELINTON DE MELO SANTANA', 'RUA INOCENCIO ANTONIO DA ROCHA', '43700000', 6, 432),
(30490, 211, '603818', 'WESLEY COSTA DO NASCIMENTO', 'CA 1 QDA 6 1 RUA CARLOS GOMES CIA 1', '43700000', 6, 397),
(30491, 212, '600939', 'JOEDSON EVANGELISTA BORGES', 'RUA SAO JOAO', '44230000', 9, 382),
(30492, 212, '604190', 'DIEGO TELES DE SOUSA', 'Caminho Vinte', '42804200', 2, 463),
(30493, 212, '603545', 'ALIVALDO DOS SANTOS DA COSTA', 'PRACA MATRIZ DE BRANTES', '42840000', 2, 534),
(30494, 212, '603712', 'ANDERSON RODRIGUES DE OLIVEIRA', 'COND BARRA DE JACUIPE', '42827000', 2, 319),
(30495, 212, '600226', 'ANDRE LUIS PINHEIRO DE ALMEIDA MORAL', 'CONDOMINIO PRAIA DE JAUA', '42802590', 2, 262),
(30496, 212, '603698', 'CLAUDEMIR MONTE NUNES', 'R OTAVIO MANGABEIRA', '42806230', 2, 469),
(30497, 212, '600144', 'FRANCISCO DIAS FRAGA', 'AV INDUSTRIA URBANA', '42800000', 2, 347),
(30498, 212, '600253', 'FRANCISCO RODRIGUES DA CRUZ JUNIOR', 'AV INDUSTRIAL URBANA', '42802570', 2, 477),
(30499, 212, '601677', 'PETERSON DE BRITO PASSOS', 'R DIAS D''AVILA', '42802510', 2, 267),
(30500, 212, '600150', 'REGIVAL FREITAS COSTA', 'LOT JD FLAMBOYANTS QD UNICA', '42840000', 2, 447),
(30501, 212, '603260', 'VALDIR DOS SANTOS ARAUJO', 'PRACA DA MATRIZ', '42840000', 2, 274),
(30502, 212, '603699', 'WAGNER COSTA FRANCISCO', 'R QUINTA LIGACAO', '42809210', 2, 461),
(30503, 212, '603693', 'WALLACY DE ALMEIDA LIMA', 'CJ GLEBA C', '42803060', 2, 186),
(30504, 212, '603759', 'MARCELO DOS SANTOS FIALHO', 'RUA SANTA RITA DE CASSIA', '42850000', 5, 245),
(30505, 212, '600729', 'VILSOM CARLOS OLIVEIRA SILVA', 'TV MARIA QUITERIA BL 14 APT 402', '42700000', 3, 222),
(30506, 212, '603761', 'HECTOR RODOLFO HERNANDEZ CERDA', 'LOT STELLA MARIS', '41600500', 1, 94),
(30507, 212, '601908', 'ALESSANDRO SIMOES SILVA', 'AV ULYSSES GUIMARAES', '41213000', 1, 75),
(30508, 212, '600652', 'ALEXSANDRO FERREIRA DOS SANTOS', 'RUA PE HUGO MEREGALLI', '41370070', 1, 102),
(30509, 212, '601354', 'ARIOSVALDO SANTOS DALTRO', 'VENEZUELA', '40820070', 1, 128),
(30510, 212, '600180', 'CLAUDEMIR DE OLIVEIRA SANTOS', 'EST DOS CABRITOS', '40717000', 1, 121),
(30511, 212, '601716', 'CLAUDIO ROGERIO DE OLIVEIRA BASTOS', 'RUA DES BALDOINO ANDRADE', '40157180', 1, 189),
(30512, 212, '600340', 'CRISTIANO GOMES DA PAIXAO', 'RUA ARAUJO BASTOS', '40000000', 1, 66),
(30513, 212, '601972', 'DEIVISON PINTO DOS SANTOS', 'R JOAO EVANGELISTA', '41290265', 1, 114),
(30514, 212, '601319', 'EDSON ANTONIO REIS', 'SEGUNDA TRAVESSA WILSON TEIXEIRA', '40385675', 1, 623),
(30515, 212, '601939', 'EDVALDO SANTOS DA SILVA', 'RUA 16 DE JANEIRA', '40750110', 1, 517),
(30516, 212, '603731', 'ELBER ARAUJO DE SOUZA', 'R ALTO DA SAPUCAIA', '40355050', 1, 208),
(30517, 212, '601954', 'JORGE EDUARDO DOS SANTOS MELO', 'JOSE INACIO DO AMARAL', '41710690', 1, 204),
(30518, 212, '601670', 'LUCAS BRANDAO DOS SANTOS', 'Cascalheira', '41500440', 1, 97),
(30519, 212, '600298', 'MANOEL LUIS RAMOS DA SILVA', 'RUA ALCOBACA', '41152115', 1, 52),
(30520, 212, '600163', 'MARCELO REIS BRITO', 'RUA TURIMIRIM CJ CASTRO ALVES', '40440000', 1, 83),
(30521, 212, '603747', 'ZORILDO DE OLIVEIRA FREITAS', 'R FLORISVALDO VIANA', '40430360', 1, 624),
(30522, 212, '603760', 'JULIO CESAR NEVES GAZINEU', 'RUA MONTEIRO LOBATO', '43700000', 6, 400),
(30523, 212, '603722', 'NEISVALDO BATISTA DE FREITAS', 'RUA SAO JOSE', '43700000', 6, 308),
(30524, 213, '601435', 'GISLAINE DE OLIVEIRA ARAUJO', 'Oitava do Parque', '42809300', 2, 461),
(30525, 213, '691352', 'VERENA PONDE RABINOVITZ', 'Rua Waldemar Falcao', '40295010', 1, 39),
(30526, 213, '600785', 'EDUARDO RODRIGUES DOS SANTOS', 'Doutor Jorge Costa Andrade', '41310260', 1, 130),
(30527, 213, '600786', 'IDISSON DA SILVA SANTANA', 'RUA ADONIAS FERREIRA', '40484450', 1, 118),
(30528, 213, '603713', 'LUIS FELIPE RIBEIRO DOS SANTOS', 'RUA ALBERTO FIUZA', '41720050', 1, 65),
(30529, 213, '602042', 'ISRAEL MELO MEIRELLES', 'RUA DR CARLOS CHAGAS', '43700000', 6, 400),
(30530, 214, '603880', 'IZAIAS CARNEIRO DA SILVA JUNIOR', 'RUA SUCUPIO COND SERRA DO GRAMADO', '42841000', 2, 455),
(30531, 214, '603892', 'AUGUSTO CESAR CINTRA DE MELO MEDEIROS', 'Rua Goiás', '41830130', 1, 16),
(30532, 214, '601352', 'MARCOS SOUZA MOURA', 'R EDMUNDO VISCO KM 17', '41630660', 1, 91),
(30533, 215, '600092', 'GEORGE DE SOUZA CAVALCANTE', 'TRAVESSA 02 DA CARAUNA S/N', '42800000', 2, 264),
(30534, 215, '600795', 'MARIVALDO TORRES SILVA', 'R ITACIMIRIM', '42801010', 2, 267),
(30535, 215, '603757', 'LEONARDO VIEIRA LUND', 'ESTRADA DO COCO, KM 13,5', '42840000', 38, 443),
(30536, 215, '603878', 'TIAGO MIGUEL COUTO CARNEIRO BATISTA', 'LUIS TARQUINIO PONTES', '42700000', 3, 220),
(30537, 215, '601460', 'JESSICA DE MENEZES BARBOSA COSTA', 'RUA FRANCISCO DAS MERCES', '42700000', 3, 219),
(30538, 215, '604045', 'MARCELO EYNG MEIRELLES JUNIOR', 'RUA ARLETE SOUZA COSTA', '42700000', 3, 219),
(30539, 215, '602013', 'RAFAELA SANTANA ROSSI', 'AV PRAIA DE GUARUJA', '42700000', 3, 216),
(30540, 215, '691362', 'GABRIEL RAMOS BARRETO', 'Jardim Alto do Itaigara', '41815190', 1, 44),
(30541, 215, '603755', 'ALESSANDRO COSTA RODRIGUES PEREIRA', 'Novo Imbuí', '41720003', 1, 65),
(30542, 215, '600105', 'ANTONIO CARLOS SIMOES DOS SANTOS', 'R POTIRAGUAR - QD 3', '41100160', 1, 49),
(30543, 215, '603485', 'MATHEUS ARAUJO DA SILVA LOPES', 'ESTACIO GONZAGA', '40295020', 1, 39),
(30544, 215, '601619', 'MAURICIO NUNES SANTANA', 'RUA DO CIPESTRE', '41820390', 1, 48),
(30545, 215, '604044', 'MARTHA EMELLE DE OLIVEIRA RIOS', 'QUADRA 8 RUA A', '43700000', 6, 303),
(30546, 216, '601742', 'ALESSANDRA DULTRA MENDES', 'AVENIDA JAIME VIEIRA LIMA', '42840000', 38, 388),
(30547, 216, '601369', 'MARCOS TONI VASCONCELOS PEREIRA', 'AV. JAIME VIEIRA LIMA', '42700000', 3, 225),
(30548, 216, '600087', 'ALLAN MIRANDA CRUZ CAMMELLO PESSOA', 'Professora Maria Helena Fonsêca', '41760170', 1, 45),
(30549, 217, '603449', 'DIEGO CUNHA DE MORAIS', 'RUA SÃO PAULO', '42700000', 3, 497),
(30550, 217, '604148', 'GABRIELA DA CUNHA SIMAS DE ALMEIDA', 'Rua Desembargador Ezequiel Pondé', '40155050', 1, 199),
(30551, 217, '601910', 'CRISTIANE DE CASSIA LIMA', 'GENESIO SALES', '40270240', 1, 38),
(30552, 217, '601274', 'MARCELO GONCALVES SILVA', 'TV LAURO DE FREITAS', '40310460', 1, 133),
(30553, 218, '603380', 'MARCOS VINICIUS CARMO DE SOUZA', 'RUA JOSE HERCULINO FILHO', '42850000', 5, 243),
(30554, 218, '604152', 'AMANDA REMIGIO DE AMORIM', 'Rua Sócrates Guanaes Gomes', '40296720', 1, 40),
(30555, 218, '603147', 'LUCAS BARBOSA DANTAS', 'AV SAO RAFAEL', '41253190', 1, 106),
(30556, 218, '601058', 'MARCELO DO CARMO SILVA', 'RUA TEODORO ALBUQUERQUE', '41180620', 1, 55),
(30557, 218, '601223', 'PABLO ROBERTO ARAUJO REINA', 'R DOUTOR AUGUSTO LOPES PONTES', '41750170', 1, 45),
(30558, 218, '603104', 'RODRIGO MOREIRA PINTO', 'R VINTE E CINCO DE DEZEMBRO', '40420060', 1, 136),
(30559, 218, '602030', 'SOLY ARLINDO BARROS JUNIOR', 'RUA DR AUGUSTO LOPES PONTES', '41760035', 1, 45),
(30560, 219, '600806', 'AKILLIS PUGH DE SOUZA', 'JARDIM ATLANTICO LIFI', '42800240', 2, 477),
(30561, 219, '691342', 'NATHALIE SILVA RABELLO', 'SANTO ANTONIO', '42700000', 3, 214),
(30562, 219, '604224', 'BRUNO MARTINS MARQUES', 'Rua Bicuiba', '41680050', 1, 67),
(30563, 219, '603736', 'FAUSTO GUILHERME ANDRADE DA COSTA NUNES', 'R BELMONTE', '41940260', 1, 24),
(30564, 219, '601376', 'VITOR COELHO DOURADO', 'RUA EDGARD CHASTINET', '40342640', 1, 61),
(30565, 220, '603894', 'MONICA SANTOS DE SOUZA', 'Rua Nova Divinéia', '42800240', 2, 327),
(30566, 220, '600878', 'ANGELO FABIO SANTOS OLIVEIRA', 'COLONIA BOA UNIÃO QDA B 32 AP 301 BL MACAUBA', '42841000', 2, 334),
(30567, 220, '603769', 'CAROLINA PRAZERES DA SILVA', 'Industrial Urbana', '42802570', 2, 477),
(30568, 220, '601067', 'CATARINA TAVARES SOARES', 'INDUSTRIAL URBANA', '42802570', 2, 477),
(30569, 220, '601086', 'JACQUELINE SANTANA DE SOUZA', 'Industrial Urbana', '42802570', 2, 477),
(30570, 220, '603862', 'LUCIELMO ARAUJO DA SILVA', 'R UNIAO, DA', '42805410', 2, 474),
(30571, 220, '601847', 'MARINALVA FERREIRA DA SILVA', 'ESTRADA DO COCO KM 8 5', '42840000', 2, 455),
(30572, 220, '603838', 'VERENA VIEIRA PITHON FARIA', 'R ABRANTES', '42802000', 2, 267),
(30573, 220, '603742', 'ANA CAROLINA DE JESUS SANTOS', 'RUA SITIO DE ASSIS', '42840000', 38, 443),
(30574, 220, '691327', 'JEANE SILVA MENDES DOS SANTOS', 'RUA RIO JOANES', '42850000', 5, 295),
(30575, 220, '691354', 'BRUNA SOARES DA SILVA', 'RUA CORONEL MESSIAS', '42700000', 3, 225),
(30576, 220, '601484', 'BODO WULF MERKLE', 'RUA PRISCILA DUTRA', '42700000', 3, 216),
(30577, 220, '600774', 'JADNA RIBEIRO DE OLIVEIRA GUIMARAES', 'RUA PRISCILA DUTRA', '47000000', 3, 216),
(30578, 220, '600796', 'RICARDO ALEXANDRE LEONARDI', 'AV LUIS TARQUINIO,', '42700000', 3, 220),
(30579, 220, '603758', 'SUELY SANTOS BERNARDES', 'R VIOLETAS, DAS', '41810080', 1, 16),
(30580, 220, '600326', 'ANDREIA DA SILVA ASSUNCAO', 'ARTUR DE ALMEIDA COUTO', '40270100', 1, 38),
(30581, 220, '603154', 'AYALA MELO RIBEIRO', 'R LUIZ EDUARDO MAGALHAES', '41630700', 1, 91),
(30582, 220, '600187', 'DANIELA FRANCO DE SOUZA', 'RUA OSMAR MACEDO', '41603275', 1, 89),
(30583, 220, '601271', 'LORENA SANTOS DE LIMA', 'RUA PARACAINA', '41253010', 1, 106),
(30584, 220, '603062', 'LUCIANA DE ALMEIDA MACIEL', 'R CAPITAO TEOGENES DE SOUZA BULCAO', '41235160', 1, 104),
(30585, 220, '603059', 'RODRIGO DE MELLO DOS SANTOS', 'CD PARALELA PARK EIXO 2 BL 134 AP 102', '41730110', 1, 205),
(30586, 220, '601807', 'THAIS PONTES DE SANTANA', 'R RESENDE COSTA', '40430000', 1, 200),
(30587, 222, '603124', 'DAIANE ARAUJO NOGUEIRA FERREIRA', 'RUA 1º TRAVESSA LUIZ GONZAGA', '42803230', 2, 186),
(30588, 222, '600039', 'OSVALDO CEZAR BACCIOTTI', 'Av Luis Tarquinio', '47700000', 3, 220),
(30589, 222, '691363', 'LUCAS DOS SANTOS FRÓES', 'Jose Valadares', '40170660', 1, 19),
(30590, 222, '604151', 'JACKSON COSTA BRITO YAMAMOTO', 'RUA PE CASIMIRO QUIROGA EDF RUBI BL07', '41720400', 1, 65),
(30591, 222, '601784', 'LEONARDO LEAL OLIVEIRA', 'RUA DR AUGUSTO LOPES PONTES', '41760035', 1, 45),
(30592, 222, '603152', 'VALNEI PIMENTEL MELO', 'R CAMBIRA', '40250625', 1, 36),
(30593, 222, '601947', 'WALNEY BARBOSA MARTINS', 'PALAME', '41610200', 1, 91),
(30594, 223, '600126', 'GIOVANNA MALDONADO VIEIRA', 'ET DO COCO KM 08 VILAS DO JOANES', '42849999', 2, 274),
(30595, 223, '603390', 'OLIVER HANNS WOLF DIETER WINSCHIERS', 'QUADRA K', '42700000', 3, 493),
(30596, 223, '600779', 'RAQUEL PETERSEN SANTOS CONSULI', 'RUA GERONIMO JOSE DE SANTANA', '42700973', 3, 222),
(30597, 224, '691312', 'TATIANA SOUZA TANAN', 'Rua Cruz das Almas', '42805510', 2, 474),
(30598, 224, '603236', 'CLAGERSON LUCIANO DA SILVA', 'R BELA VISTA', '42808020', 2, 461),
(30599, 224, '602056', 'DANIELE BATISTA DA SILVA CARQUEIJA', 'R CIDADE NOVA', '42806310', 2, 469),
(30600, 224, '603209', 'ILZA HELANA DA SILVA ORNELAS', 'QUADRA E', '42808370', 2, 344),
(30601, 224, '603226', 'JOSUE DOS SANTOS DA SILVA', 'LOT PARQUE VERDE I', '42804780', 2, 472),
(30602, 224, '603208', 'SELMARA BARRETO BARBOSA', 'R SEGUNDO SENDES', '42809150', 2, 461),
(30603, 224, '603828', 'ALVARO AUGUSTO ANDRADE COSTA', 'RUA FRANCISCO DAS MERCES', '42700000', 3, 219),
(30604, 224, '603535', 'ANDREIA ELAINE SILVA NUNO DE SOUZA', 'RUA PRAIA DE PITIMBU', '42700000', 3, 183),
(30605, 224, '603003', 'GINA CATIA DE ALMEIDA FARIAS', 'COND PEDRAS DO RIO KM 07', '42700000', 3, 223),
(30606, 224, '604031', 'FELIPE OSORIO ARANHA', 'Rua General Severino Filho', '41635540', 1, 91),
(30607, 224, '600976', 'CLAUDIO FREIRE SANTOS', 'RUA EUROPA', '40800490', 1, 128),
(30608, 224, '603675', 'DANILO COSTA VASQUES', 'R CARLOS MARIGUELA', '41250570', 1, 106),
(30609, 224, '603213', 'MAURICIO OLIVEIRA CERQUEIRA', 'RUA SOLON DE CARVALHO', '41218094', 1, 75),
(30610, 224, '600680', 'NATALICIO RODRIGUES DE OLIVEIRA', 'RUA SOLON DE CARVALHO', '41218094', 1, 74),
(30611, 224, '601935', 'RAFAEL DAMAZIO NEVES', 'Diógenes Alves', '41100025', 1, 49),
(30612, 224, '603022', 'TAINAH CORREIA DE ARAUJO', 'JUAZEIRO', '41610405', 1, 91),
(30613, 224, '603311', 'UISLANDIA NASCIMENTO DE MATOS FERNANDES', 'LARGO DA BOA VIAGEM', '40424216', 1, 84),
(30614, 225, '600007', 'SHIRLEY CRUZ LISBOA', 'CONDOMINIO DE BUSCA VIDA', '42840000', 38, 389),
(30615, 225, '691358', 'NAIRO SERGIO RASTELI GUTIERRES FILHO', 'Euclydes da Cunha', '40150122', 1, 194),
(30616, 225, '603732', 'ADRIANO SENA MOREIRA', 'RUA EULER DE PEREIRA CARDOSO', '41600045', 1, 94),
(30617, 225, '603714', 'DALILA MARIA ARAUJO', 'R PADRE FEIJO', '40110170', 1, 17),
(30618, 225, '601722', 'HAROLDO DA MOTA LOPES JUNIOR', 'Santa Isabela', '40221225', 1, 137),
(30619, 225, '603323', 'RENATA ROCHA BOAZ', 'R VINICIUS DE MORAIS', '41620300', 1, 91),
(30620, 225, '603825', 'TAMARA DE JESUS SILVA DAMASIO', 'R CASTORES', '40760580', 1, 127),
(30621, 226, '604051', 'HELTON DE SA SANTANA', 'Travessa Limoeiro', '42801100', 2, 476),
(30622, 226, '600286', 'ANTONIO RAIMUNDO DA SILVA SANTANA', 'RUA TENENTE FERNANDO TUY', '42800000', 2, 476),
(30623, 226, '603302', 'CARLOS ANTONIO LOPES', 'CAM D', '42802210', 2, 302),
(30624, 226, '602075', 'KLEBIO LOPES DOS SANTOS', 'CAM D 1', '42801320', 2, 298),
(30625, 226, '600468', 'MARCOS ANTONIO SOARES SANTOS', 'RUA JOSE HERCULINO FILHO', '42850000', 5, 295),
(30626, 226, '604060', 'LUIS RODRIGO FERREIRA DA SILVA', 'RUA GERINO DE SOUZA FILHO 5197 APTO 401', '42700000', 3, 225),
(30627, 226, '604229', 'DIOGO ALVES GARRIDO', 'Conjunto Colinas de Periperi Setor II', '40725430', 1, 126),
(30628, 226, '600325', 'ANTONIO BOMFIM PEREIRA DO VALE', 'Procurador Nelson Castro', '41745027', 1, 212),
(30629, 226, '604055', 'CARINA DOS SANTOS RIBEIRO', 'RUA BENEDITO JENKINS', '41310270', 1, 130),
(30630, 226, '601266', 'CLEBER PASSOS DE SOUZA', 'CD RESID VIVENDAS DE IPITANGA', '41330110', 1, 131),
(30631, 226, '600223', 'EDILSON DOS SANTOS', 'RUA VIENA COND RECANTO DE ITAPUAN', '41635020', 1, 91),
(30632, 226, '603486', 'ENOQUE CHARLES SANTOS ALVES', 'R PRIMEIRO DE MAIO', '40335390', 1, 62),
(30633, 226, '601267', 'NIVALDO DA SILVA', 'RUA SANTA LUZIA', '41100260', 1, 49),
(30634, 226, '603421', 'PAULO SERGIO SANTOS PEREIRA', 'JOAO ABDALA', '41225370', 1, 72),
(30635, 226, '600972', 'RENALDO DOS SANTOS BONFIM', 'RUA FRANCISCO DE SA', '40000000', 1, 57),
(30636, 226, '600289', 'VALDO DA SILVA MATOS JUNIOR', 'COND VIVENDAS DE IPITANGA', '41230000', 1, 515),
(30637, 226, '603871', 'PAULO SERGIO DO CARMO PEREIRA', 'RUA PARAGAUASUL', '43700000', 6, 426),
(30638, 226, '603419', 'JOCEILSON ROBERT SANTOS SILVA', 'RUA REZENDE COSTA', '43700000', 6, 297),
(30639, 227, '604080', 'EDUARDO BITENCOURT FALCAO', 'Rua nova camaçari', '42801010', 2, 267),
(30640, 227, '603865', 'ANDERSON SOUZA PINHO', 'GERINO DE SOUZA FILHO', '42700000', 3, 225),
(30641, 227, '604042', 'ADILSON SANTOS DO PATROCINIO', 'Alameda Bosque do Aeroporto', '41350540', 1, 103),
(30642, 227, '603305', 'ANDRE LUIS SANTOS', 'RUA PROFESSORA NATALIA VINHAIS', '41950490', 1, 203),
(30643, 227, '604057', 'BEATRIZ BARROS BULCAO', 'CONJ DIVA PIMENTEL', '40354210', 1, 625),
(30644, 227, '603307', 'CARLOS ANTONIO SILVA CALDAS FILHO', 'Castro Alves', '41120180', 1, 49),
(30645, 227, '603303', 'CARLOS ROBERTO DE MIRANDA GONCALVES', 'R MARQUES DE SANTO AMARO', '40420510', 1, 136),
(30646, 227, '603300', 'EDVALDO ALMEIDA CONCEICAO', 'LD CEMITERIO, DO', '40720510', 1, 126),
(30647, 227, '601430', 'EVANDRO EMETERIO DE SANTANA FILHO', 'RUA DIREITA DA EMBASA', '41227148', 1, 73),
(30648, 227, '603301', 'IVAN LUIZ ASSIS BEMBEM', 'R ALMEIDA BRANDAO', '40710500', 1, 121),
(30649, 227, '603472', 'ISAIAS CERQUEIRA ALVES', 'AVENIDA SIMOES', '43700000', 6, 538),
(30650, 227, '603306', 'JAIRO DOS SANTOS CARVALHO', 'RUA DO CEU, KM 25', '43700000', 6, 417),
(30651, 228, '603884', 'JOSE EDNALDO SOBRINHO', 'RUA ANTONIO FELIX MARTINS', '42804780', 2, 357),
(30652, 228, '603235', 'ALEXANDRO SILVA DE PAIVA', 'RUA DA PAZ', '42808010', 2, 363),
(30653, 228, '603232', 'ANDERSON ROSA VASCONCELLOS', 'ESTRADA AREAL 1''', '42800970', 2, 311),
(30654, 228, '603187', 'ANTONIO DA CRUZ DE SOUZA', 'R LINHA, DA', '42803000', 2, 449),
(30655, 228, '603234', 'ANTONIO LUIS DOS SANTOS SOUZA', 'Rua do Natal', '42809070', 2, 327),
(30656, 228, '603482', 'COSME DE SOUSA CRUZ', 'RUA I', '42849000', 2, 489),
(30657, 228, '604278', 'DAIANE DOS SANTOS LIMA', 'Rua Santa Maria Condominio Residencial Morada dos Pinheiros', '42806340', 2, 469),
(30658, 228, '603240', 'FABIO BARROS BOMFIM', 'R MONTE GORDO', '42802500', 2, 267),
(30659, 228, '603206', 'GILMAR UZEDA LUNA ALVES', 'Cond Parque Sao Vicente', '42807180', 2, 479),
(30660, 228, '603229', 'JEFFERSON DE OLIVEIRA CALMON DE PASSOS', 'R QUARTA DO PARQUE', '42809260', 2, 461),
(30661, 228, '603388', 'JOEDSON MAMEDE DE SOUZA', 'AVENIDA VIEIRA DE MELO', '42840000', 2, 274),
(30662, 228, '603228', 'JONATAS SERRA COSTA', 'RUA BLUMENAU', '42808310', 2, 342),
(30663, 228, '603227', 'JOSE CORREIA DE SANTANA', 'R VINTE E OITO DE DEZEMBRO', '42801160', 2, 476),
(30664, 228, '603203', 'JOSIAS SOUZA DE CRISTO', 'TRAVESSA ALMIRANTE TAMADARE', '42804780', 2, 472),
(30665, 228, '603249', 'LIVIO BARBOSA BAHIA', 'QUADRA B LOTE 26', '42808400', 2, 344),
(30666, 228, '603243', 'MANOEL CARLOS SACRAMENTO', 'DO TELEGRAFO', '42807120', 2, 260),
(30667, 228, '603246', 'PEDRO BISPO DOS SANTOS', 'R LINHA, DA', '42803000', 2, 449),
(30668, 228, '603830', 'JOSE CARLOS FARIAS DE SENA', 'Rua 52', '40730395', 1, 513),
(30669, 228, '603709', 'AUGUSTO CEZAR TELES DOS SANTOS', 'Mata Atlântica II', '41260195', 1, 105),
(30670, 228, '603708', 'JOILSON CONCEICAO DE JESUS', 'Vale dos Lagos', '41250470', 1, 106),
(30671, 228, '603244', 'MARCO ANTONIO BATISTA DA SILVA', 'TV CORONEL TUPI CALDAS', '40370280', 1, 63),
(30672, 228, '603721', 'RONALDO NASCIMENTO DOS SANTOS', 'R VINTE E UM DE SETEMBRO', '40800430', 1, 128),
(30673, 228, '604221', 'ADRIANO DE JESUS SANTANA', 'RUA DA CAIXA D AGUA', '43700000', 6, 432),
(30674, 228, '603231', 'ADRIANO BRITO DE JESUS', 'AVENIDA WASHINGTON LUIZ', '43700000', 6, 297),
(30675, 229, '603207', 'ANDRE LUIZ SOUZA DA SILVA', 'RUA ACALANTOS', '42806250', 2, 469),
(30676, 229, '603225', 'LUCAS LEANDRO BRITO DE SANTANA', 'RUA SOTERO GOMES OLIVEIRA', '42840000', 2, 456),
(30677, 229, '603198', 'SIDNEI DA SILVA CRUZ', 'R DOIS DE MAIO', '42800520', 2, 456),
(30678, 229, '604234', 'HENRIQUE DOS SANTOS LIMA', 'Rua Joaquim Nabuco', '42850000', 5, 237),
(30679, 229, '604063', 'SILAS MACHADO LIMA', 'RUA NILDA AMARAL PINTO', '42700000', 3, 225),
(30680, 229, '603237', 'DICSON ALLAN SANTOS DA SILVA', 'RUA MARIO COSTA IMPROTA', '48120000', 11, 506),
(30681, 229, '603855', 'ADRIANO VIEIRA CARVALHO', 'Rua Padre Daniel Lisboa', '40283560', 1, 191),
(30682, 229, '603811', 'OSNI LOPES DA CONCEICAO', 'RUA TERESINA', '43700000', 6, 308),
(30683, 230, '691349', 'LARISSA MARQUES DA PAIXAO MENESES', 'Rua Abrantes', '42802000', 2, 267),
(30684, 230, '603829', 'KELVIN FERREIRA SANTANA', 'R MARIA EMILIA', '42807020', 2, 454),
(30685, 230, '691359', 'VITOR ALMEIDA REZENDE', 'RUA PRISCILA DUTRA', '42700000', 3, 223),
(30686, 230, '602054', 'ANDRE DORSCH', 'AV LUIS TARQUINIO', '42700000', 3, 218),
(30687, 230, '603151', 'JOAO ROSAS DE SOUZA JUNIOR', 'RUA FRANCISCO MERCES', '42700000', 3, 219),
(30688, 230, '691321', 'ANNA CAROLINA DE SOUZA SILVA', 'Rua Professor Hamilton Carvalho Lima', '41745026', 1, 107),
(30689, 230, '603102', 'ALINE DA LUZ GARCIA', 'Luís Eduardo Magalhães', '41630700', 1, 91),
(30690, 230, '601966', 'CLARISSA ROVINA FUZER', 'Cardeal da Silva', '40231305', 1, 21),
(30691, 230, '603484', 'JOAO PAULO NEVES CONTREIRAS', 'LUIS VIANA RESIDENCIAL LE PARC', '41730101', 1, 205),
(30692, 230, '601353', 'LEONARDO FLORENCE DE QUEIROZ', 'ALMIRANTE BARROSO', '41950350', 1, 24),
(30693, 231, '603881', 'TARSILA MARIA GOES DE OLIVEIRA', 'Rua Itacimirim', '42801010', 2, 267),
(30694, 231, '601837', 'ANA CLAUDIA RAMOS DE OLIVEIRA', 'PRAIA DA PENHA', '42700000', 3, 216),
(30695, 231, '602023', 'JANILE SANTIAGO DE CARVALHO', 'RUA SÃO PAULO', '42700000', 3, 498),
(30696, 231, '601082', 'FABIO SOUZA PINHO', 'CONJ HAB  COUTOS I', '40760410', 1, 142),
(30697, 231, '601161', 'LELIA CRISTINA CORDEIRO DE LIMA', 'Bromélias Brancas', '41502015', 1, 145),
(30698, 231, '601913', 'ROSANGELA BIBIANO DOS SANTOS', 'R DOUTOR PAULO RUBENS', '40353170', 1, 81),
(30699, 231, '603739', 'XEDE LU GANEM MARTINS', 'RUA CICERO SIMOES', '41830475', 1, 16),
(30700, 232, '604345', 'BRUNO SILVA SANTOS', 'Interlagos', '42801060', 2, 267),
(30701, 232, '604327', 'GLEISSIANE DE SANTANA SANTOS', 'Seis', '42804060', 2, 463),
(30702, 232, '604026', 'JECIQUELE FERREIRA DOS SANTOS', 'Cinco do Canal', '42807550', 2, 460),
(30703, 232, '604343', 'JOÃO LUCAS OLIVEIRA VASCONCELOS', 'LOTEAMENTO DE JAUA', '42843000', 2, 468),
(30704, 232, '604323', 'JOHNATAN SILVA BORGES ALVES', 'PADRE VIEIRA', '42800100', 2, 325),
(30705, 232, '604334', 'LUCAS OLIVEIRA LEAL DOS SANTOS', 'da Almas', '42800680', 2, 449),
(30706, 232, '601538', 'TATIANE BARBOSA CUSTODIO SANTOS', 'RUA DA LIBERDADE', '42809040', 2, 331),
(30707, 232, '604328', 'WENDEL DOS SANTOS DE JESUS', 'IRIS', '42810000', 2, 321),
(30708, 232, '604095', 'BRUNO HENRIQUE SOUZA BACELAR', 'AV PASTEUR', '42850000', 5, 295),
(30709, 232, '604105', 'LARISSA DA SILVA BORGES', 'LOT XANGO OXALA', '42700000', 3, 222),
(30710, 232, '604100', 'JOSEILZA DOS SANTOS DO ESPIRITO SANTO', '1ª Travessa da Tranquilidade', '41705210', 1, 64),
(30711, 232, '603616', 'CRISTHIANE LUIZA FURQUIM DO NASCIMENTO', 'PROFESSOR PINTO DE AGUIAR', '41740090', 1, 66),
(30712, 232, '604103', 'DEISE DOS SANTOS ESTRELA', 'Avenida São Jorge', '40390280', 1, 80),
(30713, 232, '604093', 'JULIETE DE SOUSA DIAS', 'TRAVESSA 1 MAGALHAES', '43700000', 6, 410),
(30714, 233, '691338', 'TAMIRES SIMOES LOPES', 'Rua Rômulo Galvão', '41194030', 1, 54),
(30715, 234, '691296', 'GESSICA DE ARAUJO DA SILVA', 'QUADRA G LOTE 02', '42850000', 2, 344),
(30716, 234, '600536', 'JORRELRISON ARAUJO TANAN', 'RUA CASTELO BRANCO', '42800970', 2, 472),
(30717, 234, '601337', 'PATRICIA NASCIMENTO REIS', 'RUA CINCO DO CANAL', '42800000', 2, 460),
(30718, 234, '601942', 'PATRICIA NUNES GUERREIRO SANTOS', 'RUA ARLETE SOUZA COSTA', '42700000', 3, 496),
(30719, 234, '691364', 'MARIA LUIZA SILVA SANTOS', 'Joao Biao de Cerqueira', '41830580', 1, 16),
(30720, 234, '603879', 'MARIA ALMEIDA ANDRADE', 'do Bosque', '41098010', 1, 149),
(30721, 234, '601969', 'MATEUS OLIVEIRA ROCHA', 'R PROFESSOR FELIPE TIAGO GOMES', '41600211', 1, 94),
(30722, 234, '603684', 'PAULA CENTENO DE SOUZA', 'Horto Bela Vista', '41098030', 1, 149),
(30723, 235, '691337', 'GESSICA CRISTIANE DOS SANTOS SILVA', '7a TRAVESSA ACAJUTIBA', '42805560', 2, 474),
(30724, 235, '603674', 'MARIA LIDIA BASTOS SILVA', 'RUA DO BOSQUE', '42041000', 30, 160),
(30725, 235, '600100', 'EVELYN REGINA TAVARES DE AGUIAR LEONARDI', 'AV LUIZ TARQUINIO PONTES', '42700000', 3, 220),
(30726, 235, '603735', 'LEILA DE VIVEIROS TAVARES', 'TRAVESSA FRANCISCO DAS MERCES COND RESIDENCIAL SILOE', '42700000', 3, 219),
(30727, 235, '601741', 'ELISSANDRA BOCANERA DULTRA DE MAGALHAES', 'R NOSSA SENHORA DO RESGATE', '41150100', 1, 51),
(30728, 235, '601747', 'MARCELO DE LIMA AROUCA', 'PRIMEIRA TRAVESSA ARNALDO LOPES DA SILVA', '41770160', 1, 47),
(30729, 235, '603734', 'RAYSSA BRAGA DE MELO SANTOS', 'Santo Agostinho', '40255250', 1, 518),
(30730, 238, '691339', 'CARLA NAIANE CARNEIRO DE OLIVEIRA PINTO', 'COND. PARQUE DAS ÁGUAS TORRE RIO MUCURI', '42841000', 2, 455);

--
-- Dumping data for table tax_employeeimport
--
INSERT INTO tax_employeeimport VALUES
(1, '2016-08-16', '18:41', 'func_original_bkp.csv - p1', 'Importação com Sucesso', 13),
(2, '2016-08-16', '18:41', 'func_original_bkp.csv - p2', 'Importação com Sucesso', 13),
(3, '2016-08-16', '18:41', 'func_original_bkp.csv - p3', 'Importação com Sucesso', 13),
(4, '2016-08-16', '18:41', 'func_original_bkp.csv - p4', 'Importação com Sucesso', 13),
(5, '2016-08-16', '18:41', 'func_original_bkp.csv - p5', 'Importação com Sucesso', 13),
(6, '2016-08-16', '18:41', 'func_original_bkp.csv - p6', 'Importação com Sucesso', 13),
(7, '2016-08-16', '18:41', 'func_original_bkp.csv - p7', 'Importação com Sucesso', 13),
(8, '2016-08-16', '18:41', 'func_original_bkp.csv - p8', 'Importação com Sucesso', 13),
(9, '2016-08-16', '18:41', 'func_original_bkp.csv - p9', 'Importação com Sucesso', 13),
(10, '2016-08-16', '18:41', 'func_original_bkp.csv - p10', 'Importação com Sucesso', 13),
(11, '2016-08-16', '18:41', 'func_original_bkp.csv - p11', 'Importação com Sucesso', 13),
(12, '2016-08-16', '18:41', 'func_original_bkp.csv - p12', 'Importação com Sucesso', 13),
(13, '2016-08-16', '18:41', 'func_original_bkp.csv - p13', 'Importação com Sucesso', 13),
(14, '2016-08-16', '18:41', 'func_original_bkp.csv - p14', 'Importação com Sucesso', 13),
(15, '2016-08-16', '18:41', 'func_original_bkp.csv - p15', 'Importação com Sucesso', 13),
(16, '2016-08-16', '18:41', 'func_original_bkp.csv - p16', 'Importação com Sucesso', 13),
(17, '2016-08-16', '19:41', 'func_original_bkp.csv - p1', 'Importação com Sucesso', 13),
(18, '2016-08-16', '19:41', 'func_original_bkp.csv - p2', 'Importação com Sucesso', 13),
(19, '2016-08-16', '19:41', 'func_original_bkp.csv - p3', 'Importação com Sucesso', 13),
(20, '2016-08-16', '19:41', 'func_original_bkp.csv - p4', 'Importação com Sucesso', 13),
(21, '2016-08-16', '19:41', 'func_original_bkp.csv - p5', 'Importação com Sucesso', 13),
(22, '2016-08-16', '19:41', 'func_original_bkp.csv - p6', 'Importação com Sucesso', 13),
(23, '2016-08-16', '19:41', 'func_original_bkp.csv - p7', 'Importação com Sucesso', 13),
(24, '2016-08-16', '19:41', 'func_original_bkp.csv - p8', 'Importação com Sucesso', 13),
(25, '2016-08-16', '19:41', 'func_original_bkp.csv - p9', 'Importação com Sucesso', 13),
(26, '2016-08-16', '19:41', 'func_original_bkp.csv - p10', 'Importação com Sucesso', 13),
(27, '2016-08-16', '19:41', 'func_original_bkp.csv - p11', 'Importação com Sucesso', 13),
(28, '2016-08-16', '19:41', 'func_original_bkp.csv - p12', 'Importação com Sucesso', 13),
(29, '2016-08-16', '19:41', 'func_original_bkp.csv - p13', 'Importação com Sucesso', 13),
(30, '2016-08-16', '19:41', 'func_original_bkp.csv - p14', 'Importação com Sucesso', 13),
(31, '2016-08-16', '19:41', 'func_original_bkp.csv - p15', 'Importação com Sucesso', 13),
(32, '2016-08-16', '19:41', 'func_original_bkp.csv - p16', 'Importação com Sucesso', 13),
(33, '2016-08-16', '19:45', 'func_original_bkp.csv - p1', 'Importação com Sucesso', 13),
(34, '2016-08-16', '19:45', 'func_original_bkp.csv - p2', 'Importação com Sucesso', 13),
(35, '2016-08-16', '19:45', 'func_original_bkp.csv - p3', 'Importação com Sucesso', 13),
(36, '2016-08-16', '19:45', 'func_original_bkp.csv - p4', 'Importação com Sucesso', 13),
(37, '2016-08-16', '19:45', 'func_original_bkp.csv - p5', 'Importação com Sucesso', 13),
(38, '2016-08-16', '19:45', 'func_original_bkp.csv - p6', 'Importação com Sucesso', 13),
(39, '2016-08-16', '19:45', 'func_original_bkp.csv - p7', 'Importação com Sucesso', 13),
(40, '2016-08-16', '19:45', 'func_original_bkp.csv - p8', 'Importação com Sucesso', 13),
(41, '2016-08-16', '19:45', 'func_original_bkp.csv - p9', 'Importação com Sucesso', 13),
(42, '2016-08-16', '19:45', 'func_original_bkp.csv - p10', 'Importação com Sucesso', 13),
(43, '2016-08-16', '19:45', 'func_original_bkp.csv - p11', 'Importação com Sucesso', 13),
(44, '2016-08-16', '19:45', 'func_original_bkp.csv - p12', 'Importação com Sucesso', 13),
(45, '2016-08-16', '19:45', 'func_original_bkp.csv - p13', 'Importação com Sucesso', 13),
(46, '2016-08-16', '19:45', 'func_original_bkp.csv - p14', 'Importação com Sucesso', 13),
(47, '2016-08-16', '19:45', 'func_original_bkp.csv - p15', 'Importação com Sucesso', 13),
(48, '2016-08-16', '19:45', 'func_original_bkp.csv - p16', 'Importação com Sucesso', 13),
(49, '2016-08-16', '19:47', 'func_original_bkp.csv - p1', 'Importação com Sucesso', 13),
(50, '2016-08-16', '19:47', 'func_original_bkp.csv - p2', 'Importação com Sucesso', 13),
(51, '2016-08-16', '19:47', 'func_original_bkp.csv - p3', 'Importação com Sucesso', 13),
(52, '2016-08-16', '19:47', 'func_original_bkp.csv - p4', 'Importação com Sucesso', 13),
(53, '2016-08-16', '19:47', 'func_original_bkp.csv - p5', 'Importação com Sucesso', 13),
(54, '2016-08-16', '19:47', 'func_original_bkp.csv - p6', 'Importação com Sucesso', 13),
(55, '2016-08-16', '19:47', 'func_original_bkp.csv - p7', 'Importação com Sucesso', 13),
(56, '2016-08-16', '19:47', 'func_original_bkp.csv - p8', 'Importação com Sucesso', 13),
(57, '2016-08-16', '19:47', 'func_original_bkp.csv - p9', 'Importação com Sucesso', 13),
(58, '2016-08-16', '19:47', 'func_original_bkp.csv - p10', 'Importação com Sucesso', 13),
(59, '2016-08-16', '19:47', 'func_original_bkp.csv - p11', 'Importação com Sucesso', 13),
(60, '2016-08-16', '19:47', 'func_original_bkp.csv - p12', 'Importação com Sucesso', 13),
(61, '2016-08-16', '19:47', 'func_original_bkp.csv - p13', 'Importação com Sucesso', 13),
(62, '2016-08-16', '19:47', 'func_original_bkp.csv - p14', 'Importação com Sucesso', 13),
(63, '2016-08-16', '19:47', 'func_original_bkp.csv - p15', 'Importação com Sucesso', 13),
(64, '2016-08-16', '19:47', 'func_original_bkp.csv - p16', 'Importação com Sucesso', 13),
(65, '2016-08-16', '19:47', 'func_original_bkp.csv - p17', 'Importação com Sucesso', 13),
(66, '2016-08-16', '19:48', 'func_original_bkp.csv - p1', 'Importação com Sucesso', 13),
(67, '2016-08-16', '19:48', 'func_original_bkp.csv - p2', 'Importação com Sucesso', 13),
(68, '2016-08-16', '19:48', 'func_original_bkp.csv - p3', 'Importação com Sucesso', 13),
(69, '2016-08-16', '19:48', 'func_original_bkp.csv - p4', 'Importação com Sucesso', 13),
(70, '2016-08-16', '19:48', 'func_original_bkp.csv - p5', 'Importação com Sucesso', 13),
(71, '2016-08-16', '19:48', 'func_original_bkp.csv - p6', 'Importação com Sucesso', 13),
(72, '2016-08-16', '19:48', 'func_original_bkp.csv - p7', 'Importação com Sucesso', 13),
(73, '2016-08-16', '19:48', 'func_original_bkp.csv - p8', 'Importação com Sucesso', 13),
(74, '2016-08-16', '19:48', 'func_original_bkp.csv - p9', 'Importação com Sucesso', 13);

--
-- Dumping data for table tax_ride
--

-- Table taxi.tax_ride does not contain any data (it is empty)

--
-- Dumping data for table tax_taxicompany_user
--
INSERT INTO tax_taxicompany_user VALUES
(10, 16, 38);

--
-- Dumping data for table tax_taxicompany_zone
--
INSERT INTO tax_taxicompany_zone VALUES
(985, 16, 1, 70.62),
(986, 16, 2, 70.62),
(987, 16, 3, 70.62),
(988, 16, 4, 70.62),
(989, 16, 5, 70.62),
(990, 16, 6, 70.62),
(991, 16, 7, 70.62),
(992, 16, 8, 70.62),
(993, 16, 9, 70.62),
(994, 16, 10, 70.62),
(995, 16, 11, 70.62),
(996, 16, 12, 70.62),
(997, 16, 13, 70.62),
(998, 16, 14, 70.62),
(999, 16, 22, 70.62),
(1000, 16, 23, 121.55),
(1001, 16, 24, 70.62),
(1002, 16, 25, 70.62),
(1003, 16, 26, 70.62),
(1004, 16, 27, 99.34),
(1005, 16, 28, 105.17),
(1006, 16, 29, 50.49),
(1007, 16, 30, 74.05),
(1008, 16, 31, 49.84),
(1009, 16, 32, 205.98),
(1010, 16, 33, 25.89),
(1011, 16, 34, 50.49),
(1012, 16, 35, 68.03),
(1013, 16, 36, 49.13),
(1014, 16, 37, 45.31),
(1015, 16, 39, 27.19),
(1016, 16, 40, 121.55),
(1017, 16, 41, 62.26),
(1018, 16, 43, 74.05),
(1019, 16, 46, 71.91),
(1020, 16, 47, 205.98),
(1021, 16, 48, 45.31),
(1022, 16, 50, 36.25),
(1023, 16, 51, 60.26),
(1024, 16, 52, 83.05),
(1025, 16, 53, 84.80),
(1026, 16, 54, 74.90),
(1027, 16, 55, 54.38),
(1028, 16, 56, 233.23),
(1029, 16, 57, 50.55),
(1030, 16, 58, 95.22),
(1031, 16, 59, 49.13),
(1032, 16, 60, 57.44),
(1033, 16, 61, 50.49),
(1034, 16, 62, 46.61),
(1035, 16, 66, 57.44);

--
-- Dumping data for table tax_zoneassociated
--
INSERT INTO tax_zoneassociated VALUES
(273, 1, 2),
(275, 1, 3),
(274, 2, 1),
(156, 2, 3),
(160, 2, 4),
(168, 2, 5),
(246, 2, 6),
(276, 3, 1),
(155, 3, 2),
(162, 3, 4),
(266, 3, 8),
(159, 4, 2),
(161, 4, 3),
(170, 4, 5),
(268, 4, 8),
(167, 5, 2),
(169, 5, 4),
(248, 5, 6),
(245, 6, 2),
(247, 6, 5),
(249, 6, 9),
(258, 6, 13),
(264, 6, 14),
(252, 7, 10),
(265, 8, 3),
(267, 8, 4),
(269, 8, 11),
(271, 8, 12),
(250, 9, 6),
(254, 9, 13),
(260, 9, 14),
(251, 10, 7),
(270, 11, 8),
(208, 11, 12),
(234, 11, 22),
(238, 11, 24),
(272, 12, 8),
(207, 12, 11),
(240, 12, 24),
(257, 13, 6),
(253, 13, 9),
(262, 13, 14),
(263, 14, 6),
(259, 14, 9),
(261, 14, 13),
(233, 22, 11),
(242, 22, 24),
(244, 23, 24),
(237, 24, 11),
(239, 24, 12),
(241, 24, 22),
(243, 24, 23),
(231, 25, 26),
(232, 26, 25);

--
-- Dumping data for table adm_resource_profile
--

-- Table taxi.adm_resource_profile does not contain any data (it is empty)

--
-- Dumping data for table tax_log
--

-- Table taxi.tax_log does not contain any data (it is empty)

--
-- Restore previous SQL mode
--
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

--
-- Enable foreign keys
--
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
